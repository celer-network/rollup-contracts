// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package rollup

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// DataTypesAccountInfo is an auto generated low-level Go binding around an user-defined struct.
type DataTypesAccountInfo struct {
	Account        common.Address
	Balances       []*big.Int
	TransferNonces []*big.Int
	WithdrawNonces []*big.Int
}

// DataTypesIncludedStorageSlot is an auto generated low-level Go binding around an user-defined struct.
type DataTypesIncludedStorageSlot struct {
	StorageSlot DataTypesStorageSlot
	Siblings    [][32]byte
}

// DataTypesIncludedTransition is an auto generated low-level Go binding around an user-defined struct.
type DataTypesIncludedTransition struct {
	Transition     []byte
	InclusionProof DataTypesTransitionInclusionProof
}

// DataTypesStorageSlot is an auto generated low-level Go binding around an user-defined struct.
type DataTypesStorageSlot struct {
	SlotIndex *big.Int
	Value     DataTypesAccountInfo
}

// DataTypesTransitionInclusionProof is an auto generated low-level Go binding around an user-defined struct.
type DataTypesTransitionInclusionProof struct {
	BlockNumber     *big.Int
	TransitionIndex *big.Int
	Siblings        [][32]byte
}

// RollupChainABI is the input ABI used to generate the binding from.
const RollupChainABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_transitionEvaluatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_merkleUtilsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenRegistryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_validatorRegistryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_committerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"DecodedTransition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"transitions\",\"type\":\"bytes[]\"}],\"name\":\"RollupBlockCommitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transition\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ZERO_BYTES32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blocks\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"rootHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"blockSize\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_includedTransition\",\"type\":\"tuple\"}],\"name\":\"checkTransitionInclusion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"_transitions\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_signatures\",\"type\":\"bytes[]\"}],\"name\":\"commitBlock\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"committerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"transferNonces\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"withdrawNonces\",\"type\":\"uint256[]\"}],\"internalType\":\"structDataTypes.AccountInfo\",\"name\":\"_accountInfo\",\"type\":\"tuple\"}],\"name\":\"getAccountInfoBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_transition\",\"type\":\"bytes\"}],\"name\":\"getStateRootAndStorageSlots\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_preStateTransition\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_invalidTransition\",\"type\":\"bytes\"}],\"name\":\"getStateRootsAndStorageSlots\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_transition\",\"type\":\"bytes\"}],\"name\":\"getTransitionHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_preStateIncludedTransition\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_invalidIncludedTransition\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"transferNonces\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"withdrawNonces\",\"type\":\"uint256[]\"}],\"internalType\":\"structDataTypes.AccountInfo\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.StorageSlot\",\"name\":\"storageSlot\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.IncludedStorageSlot[]\",\"name\":\"_transitionStorageSlots\",\"type\":\"tuple[]\"}],\"name\":\"proveTransitionInvalid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_committerAddress\",\"type\":\"address\"}],\"name\":\"setCommitterAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_preStateRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_includedTransition\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"transferNonces\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"withdrawNonces\",\"type\":\"uint256[]\"}],\"internalType\":\"structDataTypes.AccountInfo\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.StorageSlot\",\"name\":\"storageSlot\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.IncludedStorageSlot\",\"name\":\"_transitionStorageSlot\",\"type\":\"tuple\"}],\"name\":\"verifyAndRecordWithdrawTransition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_transition0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_transition1\",\"type\":\"tuple\"}],\"name\":\"verifySequentialTransitions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// RollupChainBin is the compiled bytecode used for deploying new contracts.
var RollupChainBin = "0x60806040523480156200001157600080fd5b5060405162003baa38038062003baa83398181016040528101906200003791906200019d565b846000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050506200026d565b600081519050620001978162000253565b92915050565b600080600080600060a08688031215620001b657600080fd5b6000620001c68882890162000186565b9550506020620001d98882890162000186565b9450506040620001ec8882890162000186565b9350506060620001ff8882890162000186565b9250506080620002128882890162000186565b9150509295509295909350565b60006200022c8262000233565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200025e816200021f565b81146200026a57600080fd5b50565b61392d806200027d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638d12aeff1161008c578063bc128da911610066578063bc128da91461025f578063ceb7aeb014610292578063d866ba6f146102c2578063f25b3f99146102f2576100ea565b80638d12aeff146101f75780639a14f16614610213578063ad41175a14610243576100ea565b80633f342807116100c85780633f3428071461014757806368886cd1146101775780636fd902e1146101a7578063731fba78146101c5576100ea565b8063069321b0146100ef57806313df87281461010d5780632b19749e14610129575b600080fd5b6100f7610323565b6040516101049190613131565b60405180910390f35b610127600480360381019061012291906120d7565b61032a565b005b6101316103fe565b60405161013e9190612fc3565b60405180910390f35b610161600480360381019061015c9190612327565b610424565b60405161016e91906131ec565b60405180910390f35b610191600480360381019061018c91906124d5565b6104f8565b60405161019e9190613131565b60405180910390f35b6101af610917565b6040516101bc91906134aa565b60405180910390f35b6101df60048036038101906101da919061227a565b610927565b6040516101ee93929190613077565b60405180910390f35b610211600480360381019061020c9190612100565b610aaa565b005b61022d60048036038101906102289190612368565b610d24565b60405161023a919061305c565b60405180910390f35b61025d60048036038101906102589190612415565b610e23565b005b610279600480360381019061027491906122bb565b611397565b60405161028994939291906130b5565b60405180910390f35b6102ac60048036038101906102a791906123a9565b6116c0565b6040516102b9919061305c565b60405180910390f35b6102dc60048036038101906102d7919061227a565b6118e6565b6040516102e99190613131565b60405180910390f35b61030c600480360381019061030791906124ac565b6118f7565b60405161031a92919061319f565b60405180910390f35b6000801b81565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b1906133ca565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600073ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff1614801561046b57506000826020015151145b801561047c57506000826040015151145b801561048d57506000826060015151145b156104ba5760006040516020016104a49190612fa8565b60405160208183030381529060405290506104f3565b81600001518260200151836040015184606001516040516020016104e19493929190612fde565b60405160208183030381529060405290505b919050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461058a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610581906133aa565b60405180910390fd5b60048054905086146105d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c89061334a565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d354166587878787876040518663ffffffff1660e01b81526004016106349594939291906134f7565b60206040518083038186803b15801561064c57600080fd5b505afa158015610660573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068491906121d4565b6106c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ba9061348a565b60405180910390fd5b60008090505b85859050811015610736577f034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c11186868381811061070157fe5b90506020028101906107139190613540565b6040516107219291906131c8565b60405180910390a180806001019150506106c9565b506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340ff34ef87876040518363ffffffff1660e01b8152600401610796929190613038565b60206040518083038186803b1580156107ae57600080fd5b505afa1580156107c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e691906121fd565b90506107f0611a30565b60405180604001604052808381526020018888905081525090506004819080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550507f11fde0647239e9b4730f8d621f19d259727c5b5c12d9d0045acd70ba3d77eec988888860405161087f939291906134c5565b60405180910390a1600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634ef2b1be6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108f157600080fd5b505af1158015610905573d6000803e3d6000fd5b50505050819250505095945050505050565b6000600160048054905003905090565b600080606060006060600060606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdce791960e01b8960405160240161098591906131ec565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516109ef9190612f91565b6000604051808303816000865af19150503d8060008114610a2c576040519150601f19603f3d011682016040523d82523d6000602084013e610a31565b606091505b5080945081955050507f5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee38484604051610a6b929190613101565b60405180910390a18315610a965782806020019051810190610a8d9190612226565b80925081935050505b838282965096509650505050509193909250565b606082600001519050610abc83610d24565b610afb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af29061346a565b60405180910390fd5b6000806060610b0984610927565b80935081945082955050505082610b55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4c9061328a565b60405180910390fd5b80600081518110610b6257fe5b602002602001015185600001516000015114610bb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610baa9061342a565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c22b6d98860206040518363ffffffff1660e01b8152600401610c1192919061319f565b600060405180830381600087803b158015610c2b57600080fd5b505af1158015610c3f573d6000803e3d6000fd5b50505050610c4c85611928565b8460000151602001516000015173ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610cc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbd9061340a565b60405180910390fd5b6000866020015160000151610cd9610917565b0311610d1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d119061330a565b60405180910390fd5b5050505050505050565b600080600483602001516000015181548110610d3c57fe5b90600052602060002090600202016000015490506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166330d90a768386600001518760200151602001518860200151604001516040518563ffffffff1660e01b8152600401610dc7949392919061314c565b60206040518083038186803b158015610ddf57600080fd5b505afa158015610df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1791906121d4565b90508092505050919050565b606083600001519050606083600001519050610e3f85856116c0565b5060008060006060610e518686611397565b935093509350935083610e7a57610e6f8860200151600001516119de565b505050505050611392565b60008090505b8751811015610f0657818181518110610e9557fe5b6020026020010151888281518110610ea957fe5b6020026020010151600001516000015114610ef9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef09061342a565b60405180910390fd5b8080600101915050610e80565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c22b6d98460206040518363ffffffff1660e01b8152600401610f6592919061319f565b600060405180830381600087803b158015610f7f57600080fd5b505af1158015610f93573d6000803e3d6000fd5b5050505060008090505b8751811015610fcf57610fc2888281518110610fb557fe5b6020026020010151611928565b8080600101915050610f9d565b506060875167ffffffffffffffff81118015610fea57600080fd5b5060405190808252806020026020018201604052801561102457816020015b611011611a4d565b8152602001906001900390816110095790505b50905060008090505b88518110156110725788818151811061104257fe5b60200260200101516000015182828151811061105a57fe5b6020026020010181905250808060010191505061102d565b5060606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354e780b160e01b88846040516024016110c892919061320e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516111329190612f91565b6000604051808303816000865af19150503d806000811461116f576040519150601f19603f3d011682016040523d82523d6000602084013e611174565b606091505b508092508197505050856111a0576111938a60200151600001516119de565b5050505050505050611392565b6060818060200190518101906111b69190612193565b905060008090505b8a5181101561129157600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663272684b583838151811061121157fe5b60200260200101518d848151811061122557fe5b602002602001015160000151600001516040518363ffffffff1660e01b815260040161125292919061319f565b600060405180830381600087803b15801561126c57600080fd5b505af1158015611280573d6000803e3d6000fd5b5050505080806001019150506111be565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635ca1e1656040518163ffffffff1660e01b815260040160206040518083038186803b1580156112fa57600080fd5b505afa15801561130e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133291906121fd565b8514611357576113498b60200151600001516119de565b505050505050505050611392565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113899061338a565b60405180910390fd5b505050565b60008060006060600060606000806060806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdce791960e01b8d6040516024016113f991906131ec565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516114639190612f91565b6000604051808303816000865af19150503d80600081146114a0576040519150601f19603f3d011682016040523d82523d6000602084013e6114a5565b606091505b5080965081975050507f5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee386866040516114df929190613101565b60405180910390a185611527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151e906132ca565b60405180910390fd5b8480602001905181019061153b9190612226565b80935081955050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdce791960e01b8c60405160240161159491906131ec565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516115fe9190612f91565b6000604051808303816000865af19150503d806000811461163b576040519150601f19603f3d011682016040523d82523d6000602084013e611640565b606091505b5080965081975050507f5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee3868660405161167a929190613101565b60405180910390a185156116a5578480602001905181019061169c9190612226565b80925081945050505b85848483995099509950995050505050505092959194509250565b60006116cb83610d24565b61170a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117019061332a565b60405180910390fd5b61171382610d24565b611752576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611749906132ea565b60405180910390fd5b81602001516000015183602001516000015114156117c857600182602001516020015103836020015160200151146117bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117b6906133ea565b60405180910390fd5b600190506118e0565b6001826020015160000151038360200151600001511461181d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118149061336a565b60405180910390fd5b600160048460200151600001518154811061183457fe5b9060005260206000209060020201600101540383602001516020015114611890576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611887906132aa565b60405180910390fd5b6000826020015160200151146118db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118d29061344a565b60405180910390fd5b600190505b92915050565b600081805190602001209050919050565b6004818154811061190457fe5b90600052602060002090600202016000915090508060000154908060010154905082565b606061193b826000015160200151610424565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634359356d8284600001516000015185602001516040518463ffffffff1660e01b81526004016119a893929190613245565b600060405180830381600087803b1580156119c257600080fd5b505af11580156119d6573d6000803e3d6000fd5b505050505050565b60008190505b600480549050811015611a2c57600481815481106119fe57fe5b90600052602060002090600202016000808201600090556001820160009055505080806001019150506119e4565b5050565b604051806040016040528060008019168152602001600081525090565b604051806040016040528060008152602001611a67611a6d565b81525090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081525090565b600081359050611aba8161389b565b92915050565b600082601f830112611ad157600080fd5b8135611ae4611adf826135c4565b613597565b91508181835260208401935060208101905083856020840282011115611b0957600080fd5b60005b83811015611b395781611b1f8882611d9f565b845260208401935060208301925050600181019050611b0c565b5050505092915050565b600082601f830112611b5457600080fd5b8151611b67611b62826135c4565b613597565b91508181835260208401935060208101905083856020840282011115611b8c57600080fd5b60005b83811015611bbc5781611ba28882611db4565b845260208401935060208301925050600181019050611b8f565b5050505092915050565b60008083601f840112611bd857600080fd5b8235905067ffffffffffffffff811115611bf157600080fd5b602083019150836020820283011115611c0957600080fd5b9250929050565b600082601f830112611c2157600080fd5b8135611c34611c2f826135ec565b613597565b9150818183526020840193506020810190508360005b83811015611c7a5781358601611c608882611ed9565b845260208401935060208301925050600181019050611c4a565b5050505092915050565b600082601f830112611c9557600080fd5b8135611ca8611ca382613614565b613597565b91508181835260208401935060208101905083856020840282011115611ccd57600080fd5b60005b83811015611cfd5781611ce388826120ad565b845260208401935060208301925050600181019050611cd0565b5050505092915050565b600082601f830112611d1857600080fd5b8151611d2b611d2682613614565b613597565b91508181835260208401935060208101905083856020840282011115611d5057600080fd5b60005b83811015611d805781611d6688826120c2565b845260208401935060208301925050600181019050611d53565b5050505092915050565b600081519050611d99816138b2565b92915050565b600081359050611dae816138c9565b92915050565b600081519050611dc3816138c9565b92915050565b600082601f830112611dda57600080fd5b8135611ded611de88261363c565b613597565b91508082526020830160208301858383011115611e0957600080fd5b611e1483828461383e565b50505092915050565b600060808284031215611e2f57600080fd5b611e396080613597565b90506000611e4984828501611aab565b600083015250602082013567ffffffffffffffff811115611e6957600080fd5b611e7584828501611c84565b602083015250604082013567ffffffffffffffff811115611e9557600080fd5b611ea184828501611c84565b604083015250606082013567ffffffffffffffff811115611ec157600080fd5b611ecd84828501611c84565b60608301525092915050565b600060408284031215611eeb57600080fd5b611ef56040613597565b9050600082013567ffffffffffffffff811115611f1157600080fd5b611f1d84828501611fd1565b600083015250602082013567ffffffffffffffff811115611f3d57600080fd5b611f4984828501611ac0565b60208301525092915050565b600060408284031215611f6757600080fd5b611f716040613597565b9050600082013567ffffffffffffffff811115611f8d57600080fd5b611f9984828501611dc9565b600083015250602082013567ffffffffffffffff811115611fb957600080fd5b611fc584828501612035565b60208301525092915050565b600060408284031215611fe357600080fd5b611fed6040613597565b90506000611ffd848285016120ad565b600083015250602082013567ffffffffffffffff81111561201d57600080fd5b61202984828501611e1d565b60208301525092915050565b60006060828403121561204757600080fd5b6120516060613597565b90506000612061848285016120ad565b6000830152506020612075848285016120ad565b602083015250604082013567ffffffffffffffff81111561209557600080fd5b6120a184828501611ac0565b60408301525092915050565b6000813590506120bc816138e0565b92915050565b6000815190506120d1816138e0565b92915050565b6000602082840312156120e957600080fd5b60006120f784828501611aab565b91505092915050565b6000806000806080858703121561211657600080fd5b600061212487828801611aab565b945050602061213587828801611d9f565b935050604085013567ffffffffffffffff81111561215257600080fd5b61215e87828801611f55565b925050606085013567ffffffffffffffff81111561217b57600080fd5b61218787828801611ed9565b91505092959194509250565b6000602082840312156121a557600080fd5b600082015167ffffffffffffffff8111156121bf57600080fd5b6121cb84828501611b43565b91505092915050565b6000602082840312156121e657600080fd5b60006121f484828501611d8a565b91505092915050565b60006020828403121561220f57600080fd5b600061221d84828501611db4565b91505092915050565b6000806040838503121561223957600080fd5b600061224785828601611db4565b925050602083015167ffffffffffffffff81111561226457600080fd5b61227085828601611d07565b9150509250929050565b60006020828403121561228c57600080fd5b600082013567ffffffffffffffff8111156122a657600080fd5b6122b284828501611dc9565b91505092915050565b600080604083850312156122ce57600080fd5b600083013567ffffffffffffffff8111156122e857600080fd5b6122f485828601611dc9565b925050602083013567ffffffffffffffff81111561231157600080fd5b61231d85828601611dc9565b9150509250929050565b60006020828403121561233957600080fd5b600082013567ffffffffffffffff81111561235357600080fd5b61235f84828501611e1d565b91505092915050565b60006020828403121561237a57600080fd5b600082013567ffffffffffffffff81111561239457600080fd5b6123a084828501611f55565b91505092915050565b600080604083850312156123bc57600080fd5b600083013567ffffffffffffffff8111156123d657600080fd5b6123e285828601611f55565b925050602083013567ffffffffffffffff8111156123ff57600080fd5b61240b85828601611f55565b9150509250929050565b60008060006060848603121561242a57600080fd5b600084013567ffffffffffffffff81111561244457600080fd5b61245086828701611f55565b935050602084013567ffffffffffffffff81111561246d57600080fd5b61247986828701611f55565b925050604084013567ffffffffffffffff81111561249657600080fd5b6124a286828701611c10565b9150509250925092565b6000602082840312156124be57600080fd5b60006124cc848285016120ad565b91505092915050565b6000806000806000606086880312156124ed57600080fd5b60006124fb888289016120ad565b955050602086013567ffffffffffffffff81111561251857600080fd5b61252488828901611bc6565b9450945050604086013567ffffffffffffffff81111561254357600080fd5b61254f88828901611bc6565b92509250509295509295909350565b600061256a83836127ea565b60208301905092915050565b6000612583848484612808565b90509392505050565b60006125988383612f1f565b905092915050565b60006125ac8383612f5c565b60208301905092915050565b6125c1816137ec565b82525050565b6125d0816137ec565b82525050565b60006125e1826136a2565b6125eb8185613702565b93506125f683613668565b8060005b8381101561262757815161260e888261255e565b9750612619836136ce565b9250506001810190506125fa565b5085935050505092915050565b60006126408385613713565b93508360208402850161265284613678565b8060005b8781101561269857848403895261266d8284613795565b612678868284612576565b9550612683846136db565b935060208b019a505050600181019050612656565b50829750879450505050509392505050565b60006126b5826136ad565b6126bf8185613724565b9350836020820285016126d185613682565b8060005b8581101561270d57848403895281516126ee858261258c565b94506126f9836136e8565b925060208a019950506001810190506126d5565b50829750879550505050505092915050565b600061272a826136b8565b6127348185613735565b935061273f83613692565b8060005b8381101561277057815161275788826125a0565b9750612762836136f5565b925050600181019050612743565b5085935050505092915050565b6000612788826136b8565b6127928185613746565b935061279d83613692565b8060005b838110156127ce5781516127b588826125a0565b97506127c0836136f5565b9250506001810190506127a1565b5085935050505092915050565b6127e4816137fe565b82525050565b6127f38161380a565b82525050565b6128028161380a565b82525050565b60006128148385613757565b935061282183858461383e565b61282a8361388a565b840190509392505050565b60006128418385613768565b935061284e83858461383e565b6128578361388a565b840190509392505050565b600061286d826136c3565b6128778185613768565b935061288781856020860161384d565b6128908161388a565b840191505092915050565b60006128a6826136c3565b6128b08185613779565b93506128c081856020860161384d565b80840191505092915050565b60006128d9602483613784565b91507f4661696c656420746f206465636f6465207769746864726177207472616e736960008301527f74696f6e000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061293f602783613784565b91507f5f7472616e736974696f6e30206d757374206265206c61737420696e2069747360008301527f20626c6f636b2e000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006129a5604083613784565b91507f496620746865207072655374617465526f6f7420697320696e76616c69642c2060008301527f7468656e2070726f7665207468617420696e76616c696420696e7374656164216020830152604082019050919050565b6000612a0b602783613784565b91507f546865207365636f6e64207472616e736974696f6e206d75737420626520696e60008301527f636c7564656421000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612a71601f83613784565b91507f5769746864726177207761697420706572696f64206e6f7420706173736564006000830152602082019050919050565b6000612ab1602683613784565b91507f546865206669727374207472616e736974696f6e206d75737420626520696e6360008301527f6c756465642100000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612b17601283613784565b91507f57726f6e6720626c6f636b206e756d62657200000000000000000000000000006000830152602082019050919050565b6000612b57602a83613784565b91507f426c6f636b73206d757374206265206f6e6520616674657220616e6f7468657260008301527f206f7220657175616c2e000000000000000000000000000000000000000000006020830152604082019050919050565b6000612bbd601283613784565b91507f4e6f2066726175642064657465637465642100000000000000000000000000006000830152602082019050919050565b6000612bfd602483613784565b91507f4f6e6c792074686520636f6d6d6974746572206d6179207375626d697420626c60008301527f6f636b73000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612c63602a83613784565b91507f4f6e6c792076616c696461746f72207265676973747279206d6179207065726660008301527f6f726d20616374696f6e000000000000000000000000000000000000000000006020830152604082019050919050565b6000612cc9601f83613784565b91507f5472616e736974696f6e73206d7573742062652073657175656e7469616c21006000830152602082019050919050565b6000612d09601983613784565b91507f5769746864726177206163636f756e74206d69736d61746368000000000000006000830152602082019050919050565b6000612d49602983613784565b91507f537570706c6965642073746f7261676520736c6f7420696e646578206973206960008301527f6e636f72726563742100000000000000000000000000000000000000000000006020830152604082019050919050565b6000612daf602883613784565b91507f5f7472616e736974696f6e30206d75737420626520666972737420696e20697460008301527f7320626c6f636b2e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612e15602483613784565b91507f5769746864726177207472616e736974696f6e206d75737420626520696e636c60008301527f75646564000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612e7b601683613784565b91507f4661696c6564207369676e617475726520636865636b000000000000000000006000830152602082019050919050565b6000608083016000830151612ec660008601826125b8565b5060208301518482036020860152612ede828261271f565b91505060408301518482036040860152612ef8828261271f565b91505060608301518482036060860152612f12828261271f565b9150508091505092915050565b6000604083016000830151612f376000860182612f5c565b5060208301518482036020860152612f4f8282612eae565b9150508091505092915050565b612f6581613834565b82525050565b612f7481613834565b82525050565b612f8b612f8682613834565b613880565b82525050565b6000612f9d828461289b565b915081905092915050565b6000612fb48284612f7a565b60208201915081905092915050565b6000602082019050612fd860008301846125c7565b92915050565b6000608082019050612ff360008301876125c7565b8181036020830152613005818661277d565b90508181036040830152613019818561277d565b9050818103606083015261302d818461277d565b905095945050505050565b60006020820190508181036000830152613053818486612634565b90509392505050565b600060208201905061307160008301846127db565b92915050565b600060608201905061308c60008301866127db565b61309960208301856127f9565b81810360408301526130ab818461277d565b9050949350505050565b60006080820190506130ca60008301876127db565b6130d760208301866127f9565b6130e460408301856127f9565b81810360608301526130f6818461277d565b905095945050505050565b600060408201905061311660008301856127db565b81810360208301526131288184612862565b90509392505050565b600060208201905061314660008301846127f9565b92915050565b600060808201905061316160008301876127f9565b81810360208301526131738186612862565b90506131826040830185612f6b565b818103606083015261319481846125d6565b905095945050505050565b60006040820190506131b460008301856127f9565b6131c16020830184612f6b565b9392505050565b600060208201905081810360008301526131e3818486612835565b90509392505050565b600060208201905081810360008301526132068184612862565b905092915050565b600060408201905081810360008301526132288185612862565b9050818103602083015261323c81846126aa565b90509392505050565b6000606082019050818103600083015261325f8186612862565b905061326e6020830185612f6b565b818103604083015261328081846125d6565b9050949350505050565b600060208201905081810360008301526132a3816128cc565b9050919050565b600060208201905081810360008301526132c381612932565b9050919050565b600060208201905081810360008301526132e381612998565b9050919050565b60006020820190508181036000830152613303816129fe565b9050919050565b6000602082019050818103600083015261332381612a64565b9050919050565b6000602082019050818103600083015261334381612aa4565b9050919050565b6000602082019050818103600083015261336381612b0a565b9050919050565b6000602082019050818103600083015261338381612b4a565b9050919050565b600060208201905081810360008301526133a381612bb0565b9050919050565b600060208201905081810360008301526133c381612bf0565b9050919050565b600060208201905081810360008301526133e381612c56565b9050919050565b6000602082019050818103600083015261340381612cbc565b9050919050565b6000602082019050818103600083015261342381612cfc565b9050919050565b6000602082019050818103600083015261344381612d3c565b9050919050565b6000602082019050818103600083015261346381612da2565b9050919050565b6000602082019050818103600083015261348381612e08565b9050919050565b600060208201905081810360008301526134a381612e6e565b9050919050565b60006020820190506134bf6000830184612f6b565b92915050565b60006040820190506134da6000830186612f6b565b81810360208301526134ed818486612634565b9050949350505050565b600060608201905061350c6000830188612f6b565b818103602083015261351f818688612634565b90508181036040830152613534818486612634565b90509695505050505050565b6000808335600160200384360303811261355957600080fd5b80840192508235915067ffffffffffffffff82111561357757600080fd5b60208301925060018202360383131561358f57600080fd5b509250929050565b6000604051905081810181811067ffffffffffffffff821117156135ba57600080fd5b8060405250919050565b600067ffffffffffffffff8211156135db57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561360357600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561362b57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561365357600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600080833560016020038436030381126137ae57600080fd5b83810192508235915060208301925067ffffffffffffffff8211156137d257600080fd5b6001820236038413156137e457600080fd5b509250929050565b60006137f782613814565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561386b578082015181840152602081019050613850565b8381111561387a576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b6138a4816137ec565b81146138af57600080fd5b50565b6138bb816137fe565b81146138c657600080fd5b50565b6138d28161380a565b81146138dd57600080fd5b50565b6138e981613834565b81146138f457600080fd5b5056fea26469706673582212200f46d4a628e716849d790fb95d0b027cc595d1d7c0518212316eeb29b3465d0b64736f6c63430006060033"

// DeployRollupChain deploys a new Ethereum contract, binding an instance of RollupChain to it.
func DeployRollupChain(auth *bind.TransactOpts, backend bind.ContractBackend, _transitionEvaluatorAddress common.Address, _merkleUtilsAddress common.Address, _tokenRegistryAddress common.Address, _validatorRegistryAddress common.Address, _committerAddress common.Address) (common.Address, *types.Transaction, *RollupChain, error) {
	parsed, err := abi.JSON(strings.NewReader(RollupChainABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(RollupChainBin), backend, _transitionEvaluatorAddress, _merkleUtilsAddress, _tokenRegistryAddress, _validatorRegistryAddress, _committerAddress)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &RollupChain{RollupChainCaller: RollupChainCaller{contract: contract}, RollupChainTransactor: RollupChainTransactor{contract: contract}, RollupChainFilterer: RollupChainFilterer{contract: contract}}, nil
}

// RollupChain is an auto generated Go binding around an Ethereum contract.
type RollupChain struct {
	RollupChainCaller     // Read-only binding to the contract
	RollupChainTransactor // Write-only binding to the contract
	RollupChainFilterer   // Log filterer for contract events
}

// RollupChainCaller is an auto generated read-only Go binding around an Ethereum contract.
type RollupChainCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupChainTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RollupChainTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupChainFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RollupChainFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupChainSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RollupChainSession struct {
	Contract     *RollupChain      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// RollupChainCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RollupChainCallerSession struct {
	Contract *RollupChainCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// RollupChainTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RollupChainTransactorSession struct {
	Contract     *RollupChainTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// RollupChainRaw is an auto generated low-level Go binding around an Ethereum contract.
type RollupChainRaw struct {
	Contract *RollupChain // Generic contract binding to access the raw methods on
}

// RollupChainCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RollupChainCallerRaw struct {
	Contract *RollupChainCaller // Generic read-only contract binding to access the raw methods on
}

// RollupChainTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RollupChainTransactorRaw struct {
	Contract *RollupChainTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRollupChain creates a new instance of RollupChain, bound to a specific deployed contract.
func NewRollupChain(address common.Address, backend bind.ContractBackend) (*RollupChain, error) {
	contract, err := bindRollupChain(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &RollupChain{RollupChainCaller: RollupChainCaller{contract: contract}, RollupChainTransactor: RollupChainTransactor{contract: contract}, RollupChainFilterer: RollupChainFilterer{contract: contract}}, nil
}

// NewRollupChainCaller creates a new read-only instance of RollupChain, bound to a specific deployed contract.
func NewRollupChainCaller(address common.Address, caller bind.ContractCaller) (*RollupChainCaller, error) {
	contract, err := bindRollupChain(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RollupChainCaller{contract: contract}, nil
}

// NewRollupChainTransactor creates a new write-only instance of RollupChain, bound to a specific deployed contract.
func NewRollupChainTransactor(address common.Address, transactor bind.ContractTransactor) (*RollupChainTransactor, error) {
	contract, err := bindRollupChain(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RollupChainTransactor{contract: contract}, nil
}

// NewRollupChainFilterer creates a new log filterer instance of RollupChain, bound to a specific deployed contract.
func NewRollupChainFilterer(address common.Address, filterer bind.ContractFilterer) (*RollupChainFilterer, error) {
	contract, err := bindRollupChain(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RollupChainFilterer{contract: contract}, nil
}

// bindRollupChain binds a generic wrapper to an already deployed contract.
func bindRollupChain(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RollupChainABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RollupChain *RollupChainRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RollupChain.Contract.RollupChainCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RollupChain *RollupChainRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RollupChain.Contract.RollupChainTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RollupChain *RollupChainRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RollupChain.Contract.RollupChainTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RollupChain *RollupChainCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RollupChain.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RollupChain *RollupChainTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RollupChain.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RollupChain *RollupChainTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RollupChain.Contract.contract.Transact(opts, method, params...)
}

// ZEROBYTES32 is a free data retrieval call binding the contract method 0x069321b0.
//
// Solidity: function ZERO_BYTES32() view returns(bytes32)
func (_RollupChain *RollupChainCaller) ZEROBYTES32(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "ZERO_BYTES32")
	return *ret0, err
}

// ZEROBYTES32 is a free data retrieval call binding the contract method 0x069321b0.
//
// Solidity: function ZERO_BYTES32() view returns(bytes32)
func (_RollupChain *RollupChainSession) ZEROBYTES32() ([32]byte, error) {
	return _RollupChain.Contract.ZEROBYTES32(&_RollupChain.CallOpts)
}

// ZEROBYTES32 is a free data retrieval call binding the contract method 0x069321b0.
//
// Solidity: function ZERO_BYTES32() view returns(bytes32)
func (_RollupChain *RollupChainCallerSession) ZEROBYTES32() ([32]byte, error) {
	return _RollupChain.Contract.ZEROBYTES32(&_RollupChain.CallOpts)
}

// Blocks is a free data retrieval call binding the contract method 0xf25b3f99.
//
// Solidity: function blocks(uint256 ) view returns(bytes32 rootHash, uint256 blockSize)
func (_RollupChain *RollupChainCaller) Blocks(opts *bind.CallOpts, arg0 *big.Int) (struct {
	RootHash  [32]byte
	BlockSize *big.Int
}, error) {
	ret := new(struct {
		RootHash  [32]byte
		BlockSize *big.Int
	})
	out := ret
	err := _RollupChain.contract.Call(opts, out, "blocks", arg0)
	return *ret, err
}

// Blocks is a free data retrieval call binding the contract method 0xf25b3f99.
//
// Solidity: function blocks(uint256 ) view returns(bytes32 rootHash, uint256 blockSize)
func (_RollupChain *RollupChainSession) Blocks(arg0 *big.Int) (struct {
	RootHash  [32]byte
	BlockSize *big.Int
}, error) {
	return _RollupChain.Contract.Blocks(&_RollupChain.CallOpts, arg0)
}

// Blocks is a free data retrieval call binding the contract method 0xf25b3f99.
//
// Solidity: function blocks(uint256 ) view returns(bytes32 rootHash, uint256 blockSize)
func (_RollupChain *RollupChainCallerSession) Blocks(arg0 *big.Int) (struct {
	RootHash  [32]byte
	BlockSize *big.Int
}, error) {
	return _RollupChain.Contract.Blocks(&_RollupChain.CallOpts, arg0)
}

// CheckTransitionInclusion is a free data retrieval call binding the contract method 0x9a14f166.
//
// Solidity: function checkTransitionInclusion(DataTypesIncludedTransition _includedTransition) view returns(bool)
func (_RollupChain *RollupChainCaller) CheckTransitionInclusion(opts *bind.CallOpts, _includedTransition DataTypesIncludedTransition) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "checkTransitionInclusion", _includedTransition)
	return *ret0, err
}

// CheckTransitionInclusion is a free data retrieval call binding the contract method 0x9a14f166.
//
// Solidity: function checkTransitionInclusion(DataTypesIncludedTransition _includedTransition) view returns(bool)
func (_RollupChain *RollupChainSession) CheckTransitionInclusion(_includedTransition DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.CheckTransitionInclusion(&_RollupChain.CallOpts, _includedTransition)
}

// CheckTransitionInclusion is a free data retrieval call binding the contract method 0x9a14f166.
//
// Solidity: function checkTransitionInclusion(DataTypesIncludedTransition _includedTransition) view returns(bool)
func (_RollupChain *RollupChainCallerSession) CheckTransitionInclusion(_includedTransition DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.CheckTransitionInclusion(&_RollupChain.CallOpts, _includedTransition)
}

// CommitterAddress is a free data retrieval call binding the contract method 0x2b19749e.
//
// Solidity: function committerAddress() view returns(address)
func (_RollupChain *RollupChainCaller) CommitterAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "committerAddress")
	return *ret0, err
}

// CommitterAddress is a free data retrieval call binding the contract method 0x2b19749e.
//
// Solidity: function committerAddress() view returns(address)
func (_RollupChain *RollupChainSession) CommitterAddress() (common.Address, error) {
	return _RollupChain.Contract.CommitterAddress(&_RollupChain.CallOpts)
}

// CommitterAddress is a free data retrieval call binding the contract method 0x2b19749e.
//
// Solidity: function committerAddress() view returns(address)
func (_RollupChain *RollupChainCallerSession) CommitterAddress() (common.Address, error) {
	return _RollupChain.Contract.CommitterAddress(&_RollupChain.CallOpts)
}

// GetAccountInfoBytes is a free data retrieval call binding the contract method 0x3f342807.
//
// Solidity: function getAccountInfoBytes(DataTypesAccountInfo _accountInfo) pure returns(bytes)
func (_RollupChain *RollupChainCaller) GetAccountInfoBytes(opts *bind.CallOpts, _accountInfo DataTypesAccountInfo) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "getAccountInfoBytes", _accountInfo)
	return *ret0, err
}

// GetAccountInfoBytes is a free data retrieval call binding the contract method 0x3f342807.
//
// Solidity: function getAccountInfoBytes(DataTypesAccountInfo _accountInfo) pure returns(bytes)
func (_RollupChain *RollupChainSession) GetAccountInfoBytes(_accountInfo DataTypesAccountInfo) ([]byte, error) {
	return _RollupChain.Contract.GetAccountInfoBytes(&_RollupChain.CallOpts, _accountInfo)
}

// GetAccountInfoBytes is a free data retrieval call binding the contract method 0x3f342807.
//
// Solidity: function getAccountInfoBytes(DataTypesAccountInfo _accountInfo) pure returns(bytes)
func (_RollupChain *RollupChainCallerSession) GetAccountInfoBytes(_accountInfo DataTypesAccountInfo) ([]byte, error) {
	return _RollupChain.Contract.GetAccountInfoBytes(&_RollupChain.CallOpts, _accountInfo)
}

// GetCurrentBlockNumber is a free data retrieval call binding the contract method 0x6fd902e1.
//
// Solidity: function getCurrentBlockNumber() view returns(uint256)
func (_RollupChain *RollupChainCaller) GetCurrentBlockNumber(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "getCurrentBlockNumber")
	return *ret0, err
}

// GetCurrentBlockNumber is a free data retrieval call binding the contract method 0x6fd902e1.
//
// Solidity: function getCurrentBlockNumber() view returns(uint256)
func (_RollupChain *RollupChainSession) GetCurrentBlockNumber() (*big.Int, error) {
	return _RollupChain.Contract.GetCurrentBlockNumber(&_RollupChain.CallOpts)
}

// GetCurrentBlockNumber is a free data retrieval call binding the contract method 0x6fd902e1.
//
// Solidity: function getCurrentBlockNumber() view returns(uint256)
func (_RollupChain *RollupChainCallerSession) GetCurrentBlockNumber() (*big.Int, error) {
	return _RollupChain.Contract.GetCurrentBlockNumber(&_RollupChain.CallOpts)
}

// GetTransitionHash is a free data retrieval call binding the contract method 0xd866ba6f.
//
// Solidity: function getTransitionHash(bytes _transition) pure returns(bytes32)
func (_RollupChain *RollupChainCaller) GetTransitionHash(opts *bind.CallOpts, _transition []byte) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "getTransitionHash", _transition)
	return *ret0, err
}

// GetTransitionHash is a free data retrieval call binding the contract method 0xd866ba6f.
//
// Solidity: function getTransitionHash(bytes _transition) pure returns(bytes32)
func (_RollupChain *RollupChainSession) GetTransitionHash(_transition []byte) ([32]byte, error) {
	return _RollupChain.Contract.GetTransitionHash(&_RollupChain.CallOpts, _transition)
}

// GetTransitionHash is a free data retrieval call binding the contract method 0xd866ba6f.
//
// Solidity: function getTransitionHash(bytes _transition) pure returns(bytes32)
func (_RollupChain *RollupChainCallerSession) GetTransitionHash(_transition []byte) ([32]byte, error) {
	return _RollupChain.Contract.GetTransitionHash(&_RollupChain.CallOpts, _transition)
}

// VerifySequentialTransitions is a free data retrieval call binding the contract method 0xceb7aeb0.
//
// Solidity: function verifySequentialTransitions(DataTypesIncludedTransition _transition0, DataTypesIncludedTransition _transition1) view returns(bool)
func (_RollupChain *RollupChainCaller) VerifySequentialTransitions(opts *bind.CallOpts, _transition0 DataTypesIncludedTransition, _transition1 DataTypesIncludedTransition) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "verifySequentialTransitions", _transition0, _transition1)
	return *ret0, err
}

// VerifySequentialTransitions is a free data retrieval call binding the contract method 0xceb7aeb0.
//
// Solidity: function verifySequentialTransitions(DataTypesIncludedTransition _transition0, DataTypesIncludedTransition _transition1) view returns(bool)
func (_RollupChain *RollupChainSession) VerifySequentialTransitions(_transition0 DataTypesIncludedTransition, _transition1 DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.VerifySequentialTransitions(&_RollupChain.CallOpts, _transition0, _transition1)
}

// VerifySequentialTransitions is a free data retrieval call binding the contract method 0xceb7aeb0.
//
// Solidity: function verifySequentialTransitions(DataTypesIncludedTransition _transition0, DataTypesIncludedTransition _transition1) view returns(bool)
func (_RollupChain *RollupChainCallerSession) VerifySequentialTransitions(_transition0 DataTypesIncludedTransition, _transition1 DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.VerifySequentialTransitions(&_RollupChain.CallOpts, _transition0, _transition1)
}

// CommitBlock is a paid mutator transaction binding the contract method 0x68886cd1.
//
// Solidity: function commitBlock(uint256 _blockNumber, bytes[] _transitions, bytes[] _signatures) returns(bytes32)
func (_RollupChain *RollupChainTransactor) CommitBlock(opts *bind.TransactOpts, _blockNumber *big.Int, _transitions [][]byte, _signatures [][]byte) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "commitBlock", _blockNumber, _transitions, _signatures)
}

// CommitBlock is a paid mutator transaction binding the contract method 0x68886cd1.
//
// Solidity: function commitBlock(uint256 _blockNumber, bytes[] _transitions, bytes[] _signatures) returns(bytes32)
func (_RollupChain *RollupChainSession) CommitBlock(_blockNumber *big.Int, _transitions [][]byte, _signatures [][]byte) (*types.Transaction, error) {
	return _RollupChain.Contract.CommitBlock(&_RollupChain.TransactOpts, _blockNumber, _transitions, _signatures)
}

// CommitBlock is a paid mutator transaction binding the contract method 0x68886cd1.
//
// Solidity: function commitBlock(uint256 _blockNumber, bytes[] _transitions, bytes[] _signatures) returns(bytes32)
func (_RollupChain *RollupChainTransactorSession) CommitBlock(_blockNumber *big.Int, _transitions [][]byte, _signatures [][]byte) (*types.Transaction, error) {
	return _RollupChain.Contract.CommitBlock(&_RollupChain.TransactOpts, _blockNumber, _transitions, _signatures)
}

// GetStateRootAndStorageSlots is a paid mutator transaction binding the contract method 0x731fba78.
//
// Solidity: function getStateRootAndStorageSlots(bytes _transition) returns(bool, bytes32, uint256[])
func (_RollupChain *RollupChainTransactor) GetStateRootAndStorageSlots(opts *bind.TransactOpts, _transition []byte) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "getStateRootAndStorageSlots", _transition)
}

// GetStateRootAndStorageSlots is a paid mutator transaction binding the contract method 0x731fba78.
//
// Solidity: function getStateRootAndStorageSlots(bytes _transition) returns(bool, bytes32, uint256[])
func (_RollupChain *RollupChainSession) GetStateRootAndStorageSlots(_transition []byte) (*types.Transaction, error) {
	return _RollupChain.Contract.GetStateRootAndStorageSlots(&_RollupChain.TransactOpts, _transition)
}

// GetStateRootAndStorageSlots is a paid mutator transaction binding the contract method 0x731fba78.
//
// Solidity: function getStateRootAndStorageSlots(bytes _transition) returns(bool, bytes32, uint256[])
func (_RollupChain *RollupChainTransactorSession) GetStateRootAndStorageSlots(_transition []byte) (*types.Transaction, error) {
	return _RollupChain.Contract.GetStateRootAndStorageSlots(&_RollupChain.TransactOpts, _transition)
}

// GetStateRootsAndStorageSlots is a paid mutator transaction binding the contract method 0xbc128da9.
//
// Solidity: function getStateRootsAndStorageSlots(bytes _preStateTransition, bytes _invalidTransition) returns(bool, bytes32, bytes32, uint256[])
func (_RollupChain *RollupChainTransactor) GetStateRootsAndStorageSlots(opts *bind.TransactOpts, _preStateTransition []byte, _invalidTransition []byte) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "getStateRootsAndStorageSlots", _preStateTransition, _invalidTransition)
}

// GetStateRootsAndStorageSlots is a paid mutator transaction binding the contract method 0xbc128da9.
//
// Solidity: function getStateRootsAndStorageSlots(bytes _preStateTransition, bytes _invalidTransition) returns(bool, bytes32, bytes32, uint256[])
func (_RollupChain *RollupChainSession) GetStateRootsAndStorageSlots(_preStateTransition []byte, _invalidTransition []byte) (*types.Transaction, error) {
	return _RollupChain.Contract.GetStateRootsAndStorageSlots(&_RollupChain.TransactOpts, _preStateTransition, _invalidTransition)
}

// GetStateRootsAndStorageSlots is a paid mutator transaction binding the contract method 0xbc128da9.
//
// Solidity: function getStateRootsAndStorageSlots(bytes _preStateTransition, bytes _invalidTransition) returns(bool, bytes32, bytes32, uint256[])
func (_RollupChain *RollupChainTransactorSession) GetStateRootsAndStorageSlots(_preStateTransition []byte, _invalidTransition []byte) (*types.Transaction, error) {
	return _RollupChain.Contract.GetStateRootsAndStorageSlots(&_RollupChain.TransactOpts, _preStateTransition, _invalidTransition)
}

// ProveTransitionInvalid is a paid mutator transaction binding the contract method 0xad41175a.
//
// Solidity: function proveTransitionInvalid(DataTypesIncludedTransition _preStateIncludedTransition, DataTypesIncludedTransition _invalidIncludedTransition, []DataTypesIncludedStorageSlot _transitionStorageSlots) returns()
func (_RollupChain *RollupChainTransactor) ProveTransitionInvalid(opts *bind.TransactOpts, _preStateIncludedTransition DataTypesIncludedTransition, _invalidIncludedTransition DataTypesIncludedTransition, _transitionStorageSlots []DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "proveTransitionInvalid", _preStateIncludedTransition, _invalidIncludedTransition, _transitionStorageSlots)
}

// ProveTransitionInvalid is a paid mutator transaction binding the contract method 0xad41175a.
//
// Solidity: function proveTransitionInvalid(DataTypesIncludedTransition _preStateIncludedTransition, DataTypesIncludedTransition _invalidIncludedTransition, []DataTypesIncludedStorageSlot _transitionStorageSlots) returns()
func (_RollupChain *RollupChainSession) ProveTransitionInvalid(_preStateIncludedTransition DataTypesIncludedTransition, _invalidIncludedTransition DataTypesIncludedTransition, _transitionStorageSlots []DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.Contract.ProveTransitionInvalid(&_RollupChain.TransactOpts, _preStateIncludedTransition, _invalidIncludedTransition, _transitionStorageSlots)
}

// ProveTransitionInvalid is a paid mutator transaction binding the contract method 0xad41175a.
//
// Solidity: function proveTransitionInvalid(DataTypesIncludedTransition _preStateIncludedTransition, DataTypesIncludedTransition _invalidIncludedTransition, []DataTypesIncludedStorageSlot _transitionStorageSlots) returns()
func (_RollupChain *RollupChainTransactorSession) ProveTransitionInvalid(_preStateIncludedTransition DataTypesIncludedTransition, _invalidIncludedTransition DataTypesIncludedTransition, _transitionStorageSlots []DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.Contract.ProveTransitionInvalid(&_RollupChain.TransactOpts, _preStateIncludedTransition, _invalidIncludedTransition, _transitionStorageSlots)
}

// SetCommitterAddress is a paid mutator transaction binding the contract method 0x13df8728.
//
// Solidity: function setCommitterAddress(address _committerAddress) returns()
func (_RollupChain *RollupChainTransactor) SetCommitterAddress(opts *bind.TransactOpts, _committerAddress common.Address) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "setCommitterAddress", _committerAddress)
}

// SetCommitterAddress is a paid mutator transaction binding the contract method 0x13df8728.
//
// Solidity: function setCommitterAddress(address _committerAddress) returns()
func (_RollupChain *RollupChainSession) SetCommitterAddress(_committerAddress common.Address) (*types.Transaction, error) {
	return _RollupChain.Contract.SetCommitterAddress(&_RollupChain.TransactOpts, _committerAddress)
}

// SetCommitterAddress is a paid mutator transaction binding the contract method 0x13df8728.
//
// Solidity: function setCommitterAddress(address _committerAddress) returns()
func (_RollupChain *RollupChainTransactorSession) SetCommitterAddress(_committerAddress common.Address) (*types.Transaction, error) {
	return _RollupChain.Contract.SetCommitterAddress(&_RollupChain.TransactOpts, _committerAddress)
}

// VerifyAndRecordWithdrawTransition is a paid mutator transaction binding the contract method 0x8d12aeff.
//
// Solidity: function verifyAndRecordWithdrawTransition(address _account, bytes32 _preStateRoot, DataTypesIncludedTransition _includedTransition, DataTypesIncludedStorageSlot _transitionStorageSlot) returns()
func (_RollupChain *RollupChainTransactor) VerifyAndRecordWithdrawTransition(opts *bind.TransactOpts, _account common.Address, _preStateRoot [32]byte, _includedTransition DataTypesIncludedTransition, _transitionStorageSlot DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "verifyAndRecordWithdrawTransition", _account, _preStateRoot, _includedTransition, _transitionStorageSlot)
}

// VerifyAndRecordWithdrawTransition is a paid mutator transaction binding the contract method 0x8d12aeff.
//
// Solidity: function verifyAndRecordWithdrawTransition(address _account, bytes32 _preStateRoot, DataTypesIncludedTransition _includedTransition, DataTypesIncludedStorageSlot _transitionStorageSlot) returns()
func (_RollupChain *RollupChainSession) VerifyAndRecordWithdrawTransition(_account common.Address, _preStateRoot [32]byte, _includedTransition DataTypesIncludedTransition, _transitionStorageSlot DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.Contract.VerifyAndRecordWithdrawTransition(&_RollupChain.TransactOpts, _account, _preStateRoot, _includedTransition, _transitionStorageSlot)
}

// VerifyAndRecordWithdrawTransition is a paid mutator transaction binding the contract method 0x8d12aeff.
//
// Solidity: function verifyAndRecordWithdrawTransition(address _account, bytes32 _preStateRoot, DataTypesIncludedTransition _includedTransition, DataTypesIncludedStorageSlot _transitionStorageSlot) returns()
func (_RollupChain *RollupChainTransactorSession) VerifyAndRecordWithdrawTransition(_account common.Address, _preStateRoot [32]byte, _includedTransition DataTypesIncludedTransition, _transitionStorageSlot DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.Contract.VerifyAndRecordWithdrawTransition(&_RollupChain.TransactOpts, _account, _preStateRoot, _includedTransition, _transitionStorageSlot)
}

// RollupChainDecodedTransitionIterator is returned from FilterDecodedTransition and is used to iterate over the raw logs and unpacked data for DecodedTransition events raised by the RollupChain contract.
type RollupChainDecodedTransitionIterator struct {
	Event *RollupChainDecodedTransition // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RollupChainDecodedTransitionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RollupChainDecodedTransition)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RollupChainDecodedTransition)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RollupChainDecodedTransitionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RollupChainDecodedTransitionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RollupChainDecodedTransition represents a DecodedTransition event raised by the RollupChain contract.
type RollupChainDecodedTransition struct {
	Success    bool
	ReturnData []byte
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterDecodedTransition is a free log retrieval operation binding the contract event 0x5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee3.
//
// Solidity: event DecodedTransition(bool success, bytes returnData)
func (_RollupChain *RollupChainFilterer) FilterDecodedTransition(opts *bind.FilterOpts) (*RollupChainDecodedTransitionIterator, error) {

	logs, sub, err := _RollupChain.contract.FilterLogs(opts, "DecodedTransition")
	if err != nil {
		return nil, err
	}
	return &RollupChainDecodedTransitionIterator{contract: _RollupChain.contract, event: "DecodedTransition", logs: logs, sub: sub}, nil
}

// WatchDecodedTransition is a free log subscription operation binding the contract event 0x5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee3.
//
// Solidity: event DecodedTransition(bool success, bytes returnData)
func (_RollupChain *RollupChainFilterer) WatchDecodedTransition(opts *bind.WatchOpts, sink chan<- *RollupChainDecodedTransition) (event.Subscription, error) {

	logs, sub, err := _RollupChain.contract.WatchLogs(opts, "DecodedTransition")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RollupChainDecodedTransition)
				if err := _RollupChain.contract.UnpackLog(event, "DecodedTransition", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDecodedTransition is a log parse operation binding the contract event 0x5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee3.
//
// Solidity: event DecodedTransition(bool success, bytes returnData)
func (_RollupChain *RollupChainFilterer) ParseDecodedTransition(log types.Log) (*RollupChainDecodedTransition, error) {
	event := new(RollupChainDecodedTransition)
	if err := _RollupChain.contract.UnpackLog(event, "DecodedTransition", log); err != nil {
		return nil, err
	}
	return event, nil
}

// RollupChainRollupBlockCommittedIterator is returned from FilterRollupBlockCommitted and is used to iterate over the raw logs and unpacked data for RollupBlockCommitted events raised by the RollupChain contract.
type RollupChainRollupBlockCommittedIterator struct {
	Event *RollupChainRollupBlockCommitted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RollupChainRollupBlockCommittedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RollupChainRollupBlockCommitted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RollupChainRollupBlockCommitted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RollupChainRollupBlockCommittedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RollupChainRollupBlockCommittedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RollupChainRollupBlockCommitted represents a RollupBlockCommitted event raised by the RollupChain contract.
type RollupChainRollupBlockCommitted struct {
	BlockNumber *big.Int
	Transitions [][]byte
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterRollupBlockCommitted is a free log retrieval operation binding the contract event 0x11fde0647239e9b4730f8d621f19d259727c5b5c12d9d0045acd70ba3d77eec9.
//
// Solidity: event RollupBlockCommitted(uint256 blockNumber, bytes[] transitions)
func (_RollupChain *RollupChainFilterer) FilterRollupBlockCommitted(opts *bind.FilterOpts) (*RollupChainRollupBlockCommittedIterator, error) {

	logs, sub, err := _RollupChain.contract.FilterLogs(opts, "RollupBlockCommitted")
	if err != nil {
		return nil, err
	}
	return &RollupChainRollupBlockCommittedIterator{contract: _RollupChain.contract, event: "RollupBlockCommitted", logs: logs, sub: sub}, nil
}

// WatchRollupBlockCommitted is a free log subscription operation binding the contract event 0x11fde0647239e9b4730f8d621f19d259727c5b5c12d9d0045acd70ba3d77eec9.
//
// Solidity: event RollupBlockCommitted(uint256 blockNumber, bytes[] transitions)
func (_RollupChain *RollupChainFilterer) WatchRollupBlockCommitted(opts *bind.WatchOpts, sink chan<- *RollupChainRollupBlockCommitted) (event.Subscription, error) {

	logs, sub, err := _RollupChain.contract.WatchLogs(opts, "RollupBlockCommitted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RollupChainRollupBlockCommitted)
				if err := _RollupChain.contract.UnpackLog(event, "RollupBlockCommitted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRollupBlockCommitted is a log parse operation binding the contract event 0x11fde0647239e9b4730f8d621f19d259727c5b5c12d9d0045acd70ba3d77eec9.
//
// Solidity: event RollupBlockCommitted(uint256 blockNumber, bytes[] transitions)
func (_RollupChain *RollupChainFilterer) ParseRollupBlockCommitted(log types.Log) (*RollupChainRollupBlockCommitted, error) {
	event := new(RollupChainRollupBlockCommitted)
	if err := _RollupChain.contract.UnpackLog(event, "RollupBlockCommitted", log); err != nil {
		return nil, err
	}
	return event, nil
}

// RollupChainTransitionIterator is returned from FilterTransition and is used to iterate over the raw logs and unpacked data for Transition events raised by the RollupChain contract.
type RollupChainTransitionIterator struct {
	Event *RollupChainTransition // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RollupChainTransitionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RollupChainTransition)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RollupChainTransition)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RollupChainTransitionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RollupChainTransitionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RollupChainTransition represents a Transition event raised by the RollupChain contract.
type RollupChainTransition struct {
	Data []byte
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterTransition is a free log retrieval operation binding the contract event 0x034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c111.
//
// Solidity: event Transition(bytes data)
func (_RollupChain *RollupChainFilterer) FilterTransition(opts *bind.FilterOpts) (*RollupChainTransitionIterator, error) {

	logs, sub, err := _RollupChain.contract.FilterLogs(opts, "Transition")
	if err != nil {
		return nil, err
	}
	return &RollupChainTransitionIterator{contract: _RollupChain.contract, event: "Transition", logs: logs, sub: sub}, nil
}

// WatchTransition is a free log subscription operation binding the contract event 0x034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c111.
//
// Solidity: event Transition(bytes data)
func (_RollupChain *RollupChainFilterer) WatchTransition(opts *bind.WatchOpts, sink chan<- *RollupChainTransition) (event.Subscription, error) {

	logs, sub, err := _RollupChain.contract.WatchLogs(opts, "Transition")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RollupChainTransition)
				if err := _RollupChain.contract.UnpackLog(event, "Transition", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransition is a log parse operation binding the contract event 0x034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c111.
//
// Solidity: event Transition(bytes data)
func (_RollupChain *RollupChainFilterer) ParseTransition(log types.Log) (*RollupChainTransition, error) {
	event := new(RollupChainTransition)
	if err := _RollupChain.contract.UnpackLog(event, "Transition", log); err != nil {
		return nil, err
	}
	return event, nil
}
