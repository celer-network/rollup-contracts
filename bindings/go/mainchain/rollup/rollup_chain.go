// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package rollup

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// DataTypesAccountInfo is an auto generated low-level Go binding around an user-defined struct.
type DataTypesAccountInfo struct {
	Account  common.Address
	Balances []*big.Int
	Nonces   []*big.Int
}

// DataTypesIncludedStorageSlot is an auto generated low-level Go binding around an user-defined struct.
type DataTypesIncludedStorageSlot struct {
	StorageSlot DataTypesStorageSlot
	Siblings    [][32]byte
}

// DataTypesIncludedTransition is an auto generated low-level Go binding around an user-defined struct.
type DataTypesIncludedTransition struct {
	Transition     []byte
	InclusionProof DataTypesTransitionInclusionProof
}

// DataTypesStorageSlot is an auto generated low-level Go binding around an user-defined struct.
type DataTypesStorageSlot struct {
	SlotIndex *big.Int
	Value     DataTypesAccountInfo
}

// DataTypesTransitionInclusionProof is an auto generated low-level Go binding around an user-defined struct.
type DataTypesTransitionInclusionProof struct {
	BlockNumber     *big.Int
	TransitionIndex *big.Int
	Siblings        [][32]byte
}

// RollupChainABI is the input ABI used to generate the binding from.
const RollupChainABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_transitionEvaluatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rollupMerkleUtilsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenRegistryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aggregatorAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"DecodedTransition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"block\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"NewRollupBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transition\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"ZERO_BYTES32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"aggregatorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blocks\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"rootHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"blockSize\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_includedTransition\",\"type\":\"tuple\"}],\"name\":\"checkTransitionInclusion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nonces\",\"type\":\"uint256[]\"}],\"internalType\":\"structDataTypes.AccountInfo\",\"name\":\"_accountInfo\",\"type\":\"tuple\"}],\"name\":\"getAccountInfoBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_preStateTransition\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_invalidTransition\",\"type\":\"bytes\"}],\"name\":\"getStateRootsAndStorageSlots\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_transition\",\"type\":\"bytes\"}],\"name\":\"getTransitionHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_preStateIncludedTransition\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_invalidIncludedTransition\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nonces\",\"type\":\"uint256[]\"}],\"internalType\":\"structDataTypes.AccountInfo\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.StorageSlot\",\"name\":\"storageSlot\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.IncludedStorageSlot[]\",\"name\":\"_transitionStorageSlots\",\"type\":\"tuple[]\"}],\"name\":\"proveTransitionInvalid\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_block\",\"type\":\"bytes[]\"}],\"name\":\"submitBlock\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_transition0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_transition1\",\"type\":\"tuple\"}],\"name\":\"verifySequentialTransitions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// RollupChainBin is the compiled bytecode used for deploying new contracts.
var RollupChainBin = "0x60806040523480156200001157600080fd5b506040516200312c3803806200312c83398181016040526200003791908101906200015b565b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505062000215565b6000815190506200015581620001fb565b92915050565b600080600080608085870312156200017257600080fd5b6000620001828782880162000144565b9450506020620001958782880162000144565b9350506040620001a88782880162000144565b9250506060620001bb8782880162000144565b91505092959194509250565b6000620001d482620001db565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200020681620001c7565b81146200021257600080fd5b50565b612f0780620002256000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063c73ea88211610066578063c73ea8821461015e578063ceb7aeb01461018e578063d3250f3b146101be578063d866ba6f146101ee578063f25b3f991461021e5761009e565b8063069321b0146100a3578063380bbe53146100c15780639a14f166146100df578063b78167e51461010f578063bc128da91461012b575b600080fd5b6100ab61024f565b6040516100b8919061286c565b60405180910390f35b6100c9610256565b6040516100d6919061271f565b60405180910390f35b6100f960048036036100f49190810190611d02565b61027c565b60405161010691906127d5565b60405180910390f35b61012960048036036101249190810190611daf565b61037b565b005b61014560048036036101409190810190611c55565b610912565b60405161015594939291906127f0565b60405180910390f35b61017860048036036101739190810190611cc1565b610cb5565b6040516101859190612927565b60405180910390f35b6101a860048036036101a39190810190611d43565b610d72565b6040516101b591906127d5565b60405180910390f35b6101d860048036036101d39190810190611b29565b610f98565b6040516101e5919061286c565b60405180910390f35b61020860048036036102039190810190611c14565b611246565b604051610215919061286c565b60405180910390f35b61023860048036036102339190810190611e46565b611257565b6040516102469291906128da565b60405180910390f35b6000801b81565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060038360200151600001518154811061029457fe5b90600052602060002090600202016000015490506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166330d90a768386600001518760200151602001518860200151604001516040518563ffffffff1660e01b815260040161031f9493929190612887565b60206040518083038186803b15801561033757600080fd5b505afa15801561034b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061036f9190810190611b6e565b90508092505050919050565b6060836000015190506060836000015190506103978585610d72565b50600080600060606103a98686610912565b9350935093509350836103d2576103c7886020015160000151611288565b50505050505061090d565b60008090505b875181101561045e578181815181106103ed57fe5b602002602001015188828151811061040157fe5b6020026020010151600001516000015114610451576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044890612ac5565b60405180910390fd5b80806001019150506103d8565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c22b6d98460206040518363ffffffff1660e01b81526004016104bd9291906128da565b600060405180830381600087803b1580156104d757600080fd5b505af11580156104eb573d6000803e3d6000fd5b5050505060008090505b87518110156105275761051a88828151811061050d57fe5b60200260200101516112da565b80806001019150506104f5565b506060875160405190808252806020026020018201604052801561056557816020015b610552611390565b81526020019060019003908161054a5790505b50905060008090505b88518110156105b35788818151811061058357fe5b60200260200101516000015182828151811061059b57fe5b6020026020010181905250808060010191505061056e565b5060606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632868bc60905060e01b8884604051602401610643929190612949565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516106ad91906126ed565b6000604051808303816000865af19150503d80600081146106ea576040519150601f19603f3d011682016040523d82523d6000602084013e6106ef565b606091505b5080925081975050508561071b5761070e8a6020015160000151611288565b505050505050505061090d565b6060818060200190516107319190810190611ae8565b905060008090505b8a5181101561080c57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663272684b583838151811061078c57fe5b60200260200101518d84815181106107a057fe5b602002602001015160000151600001516040518363ffffffff1660e01b81526004016107cd9291906128da565b600060405180830381600087803b1580156107e757600080fd5b505af11580156107fb573d6000803e3d6000fd5b505050508080600101915050610739565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635ca1e1656040518163ffffffff1660e01b815260040160206040518083038186803b15801561087557600080fd5b505afa158015610889573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108ad9190810190611b97565b85146108d2576108c48b6020015160000151611288565b50505050505050505061090d565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090490612a85565b60405180910390fd5b505050565b60008060006060600060606000806060806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdce7919905060e01b8d6040516024016109ae9190612927565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610a1891906126ed565b6000604051808303816000865af19150503d8060008114610a55576040519150601f19603f3d011682016040523d82523d6000602084013e610a5a565b606091505b5080965081975050507f5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee38686604051610a9492919061283c565b60405180910390a185610adc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad390612a05565b60405180910390fd5b84806020019051610af09190810190611bc0565b80905080935081955050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdce7919905060e01b8c604051602401610b869190612927565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610bf091906126ed565b6000604051808303816000865af19150503d8060008114610c2d576040519150601f19603f3d011682016040523d82523d6000602084013e610c32565b606091505b5080965081975050507f5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee38686604051610c6c92919061283c565b60405180910390a18515610c9a5784806020019051610c8e9190810190611bc0565b80905080925081945050505b85848483995099509950995050505050505092959194509250565b6060600073ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff16148015610cfc57506000826020015151145b8015610d0d57506000826040015151145b15610d3a576000604051602001610d249190612704565b6040516020818303038152906040529050610d6d565b816000015182602001518360400151604051602001610d5b9392919061273a565b60405160208183030381529060405290505b919050565b6000610d7d8361027c565b610dbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db390612a45565b60405180910390fd5b610dc58261027c565b610e04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfb90612a25565b60405180910390fd5b8160200151600001518360200151600001511415610e7a5760018260200151602001510383602001516020015114610e71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6890612aa5565b60405180910390fd5b60019050610f92565b60018260200151600001510383602001516000015114610ecf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec690612a65565b60405180910390fd5b6001600384602001516000015181548110610ee657fe5b9060005260206000209060020201600101540383602001516020015114610f42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f39906129e5565b60405180910390fd5b600082602001516020015114610f8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8490612ae5565b60405180910390fd5b600190505b92915050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461102a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611021906129c5565b60405180910390fd5b60008090505b838390508110156110df577f034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c11184848381811061106857fe5b905060200281018035600160200383360303811261108557600080fd5b8083019250508135905060208201915067ffffffffffffffff8111156110aa57600080fd5b6001810236038213156110bc57600080fd5b6040516110ca929190612903565b60405180910390a18080600101915050611030565b506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340ff34ef85856040518363ffffffff1660e01b815260040161113f92919061277f565b60206040518083038186803b15801561115757600080fd5b505afa15801561116b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061118f9190810190611b97565b90506111996113b0565b60405180604001604052808381526020018686905081525090506003819080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050507fe6a728cf739c94a7ce1eae684da3d74934e160650f47aa6dd39f70dfe005aadf8585600160038054905003604051611233939291906127a3565b60405180910390a1819250505092915050565b600081805190602001209050919050565b6003818154811061126457fe5b90600052602060002090600202016000915090508060000154908060010154905082565b60008190505b6003805490508110156112d657600381815481106112a857fe5b906000526020600020906002020160008082016000905560018201600090555050808060010191505061128e565b5050565b60606112ed826000015160200151610cb5565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634359356d8284600001516000015185602001516040518463ffffffff1660e01b815260040161135a93929190612980565b600060405180830381600087803b15801561137457600080fd5b505af1158015611388573d6000803e3d6000fd5b505050505050565b6040518060400160405280600081526020016113aa6113cd565b81525090565b604051806040016040528060008019168152602001600081525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b60008135905061141381612e68565b92915050565b600082601f83011261142a57600080fd5b813561143d61143882612b32565b612b05565b9150818183526020840193506020810190508385602084028201111561146257600080fd5b60005b83811015611492578161147888826116f8565b845260208401935060208301925050600181019050611465565b5050505092915050565b600082601f8301126114ad57600080fd5b81516114c06114bb82612b32565b612b05565b915081818352602084019350602081019050838560208402820111156114e557600080fd5b60005b8381101561151557816114fb888261170d565b8452602084019350602083019250506001810190506114e8565b5050505092915050565b60008083601f84011261153157600080fd5b8235905067ffffffffffffffff81111561154a57600080fd5b60208301915083602082028301111561156257600080fd5b9250929050565b600082601f83011261157a57600080fd5b813561158d61158882612b5a565b612b05565b9150818183526020840193506020810190508360005b838110156115d357813586016115b988826118ea565b8452602084019350602083019250506001810190506115a3565b5050505092915050565b600082601f8301126115ee57600080fd5b81356116016115fc82612b82565b612b05565b9150818183526020840193506020810190508385602084028201111561162657600080fd5b60005b83811015611656578161163c8882611abe565b845260208401935060208301925050600181019050611629565b5050505092915050565b600082601f83011261167157600080fd5b815161168461167f82612b82565b612b05565b915081818352602084019350602081019050838560208402820111156116a957600080fd5b60005b838110156116d957816116bf8882611ad3565b8452602084019350602083019250506001810190506116ac565b5050505092915050565b6000815190506116f281612e7f565b92915050565b60008135905061170781612e96565b92915050565b60008151905061171c81612e96565b92915050565b600082601f83011261173357600080fd5b813561174661174182612baa565b612b05565b9150808252602083016020830185838301111561176257600080fd5b61176d838284612e0b565b50505092915050565b600082601f83011261178757600080fd5b813561179a61179582612bd6565b612b05565b915080825260208301602083018583830111156117b657600080fd5b6117c1838284612e0b565b50505092915050565b6000606082840312156117dc57600080fd5b6117e66060612b05565b905060006117f684828501611404565b600083015250602082013567ffffffffffffffff81111561181657600080fd5b611822848285016115dd565b602083015250604082013567ffffffffffffffff81111561184257600080fd5b61184e848285016115dd565b60408301525092915050565b60006060828403121561186c57600080fd5b6118766060612b05565b9050600061188684828501611404565b600083015250602082013567ffffffffffffffff8111156118a657600080fd5b6118b2848285016115dd565b602083015250604082013567ffffffffffffffff8111156118d257600080fd5b6118de848285016115dd565b60408301525092915050565b6000604082840312156118fc57600080fd5b6119066040612b05565b9050600082013567ffffffffffffffff81111561192257600080fd5b61192e848285016119e2565b600083015250602082013567ffffffffffffffff81111561194e57600080fd5b61195a84828501611419565b60208301525092915050565b60006040828403121561197857600080fd5b6119826040612b05565b9050600082013567ffffffffffffffff81111561199e57600080fd5b6119aa84828501611722565b600083015250602082013567ffffffffffffffff8111156119ca57600080fd5b6119d684828501611a46565b60208301525092915050565b6000604082840312156119f457600080fd5b6119fe6040612b05565b90506000611a0e84828501611abe565b600083015250602082013567ffffffffffffffff811115611a2e57600080fd5b611a3a848285016117ca565b60208301525092915050565b600060608284031215611a5857600080fd5b611a626060612b05565b90506000611a7284828501611abe565b6000830152506020611a8684828501611abe565b602083015250604082013567ffffffffffffffff811115611aa657600080fd5b611ab284828501611419565b60408301525092915050565b600081359050611acd81612ead565b92915050565b600081519050611ae281612ead565b92915050565b600060208284031215611afa57600080fd5b600082015167ffffffffffffffff811115611b1457600080fd5b611b208482850161149c565b91505092915050565b60008060208385031215611b3c57600080fd5b600083013567ffffffffffffffff811115611b5657600080fd5b611b628582860161151f565b92509250509250929050565b600060208284031215611b8057600080fd5b6000611b8e848285016116e3565b91505092915050565b600060208284031215611ba957600080fd5b6000611bb78482850161170d565b91505092915050565b60008060408385031215611bd357600080fd5b6000611be18582860161170d565b925050602083015167ffffffffffffffff811115611bfe57600080fd5b611c0a85828601611660565b9150509250929050565b600060208284031215611c2657600080fd5b600082013567ffffffffffffffff811115611c4057600080fd5b611c4c84828501611776565b91505092915050565b60008060408385031215611c6857600080fd5b600083013567ffffffffffffffff811115611c8257600080fd5b611c8e85828601611776565b925050602083013567ffffffffffffffff811115611cab57600080fd5b611cb785828601611776565b9150509250929050565b600060208284031215611cd357600080fd5b600082013567ffffffffffffffff811115611ced57600080fd5b611cf98482850161185a565b91505092915050565b600060208284031215611d1457600080fd5b600082013567ffffffffffffffff811115611d2e57600080fd5b611d3a84828501611966565b91505092915050565b60008060408385031215611d5657600080fd5b600083013567ffffffffffffffff811115611d7057600080fd5b611d7c85828601611966565b925050602083013567ffffffffffffffff811115611d9957600080fd5b611da585828601611966565b9150509250929050565b600080600060608486031215611dc457600080fd5b600084013567ffffffffffffffff811115611dde57600080fd5b611dea86828701611966565b935050602084013567ffffffffffffffff811115611e0757600080fd5b611e1386828701611966565b925050604084013567ffffffffffffffff811115611e3057600080fd5b611e3c86828701611569565b9150509250925092565b600060208284031215611e5857600080fd5b6000611e6684828501611abe565b91505092915050565b6000611e7b8383612159565b60208301905092915050565b6000611e94848484612177565b90509392505050565b6000611ea9838361267b565b905092915050565b6000611ebd83836126b8565b60208301905092915050565b611ed281612db9565b82525050565b611ee181612db9565b82525050565b6000611ef282612c4c565b611efc8185612ccf565b9350611f0783612c02565b8060005b83811015611f38578151611f1f8882611e6f565b9750611f2a83612c8e565b925050600181019050611f0b565b5085935050505092915050565b6000611f518385612ce0565b935083602084028501611f6384612c12565b8060005b87811015611fa9578484038952611f7e8284612d62565b611f89868284611e87565b9550611f9484612c9b565b935060208b019a505050600181019050611f67565b50829750879450505050509392505050565b6000611fc682612c57565b611fd08185612cf1565b935083602082028501611fe285612c1c565b8060005b8581101561201e5784840389528151611fff8582611e9d565b945061200a83612ca8565b925060208a01995050600181019050611fe6565b50829750879550505050505092915050565b600061203b82612c6d565b6120458185612d13565b935061205083612c3c565b8060005b838110156120815781516120688882611eb1565b975061207383612cc2565b925050600181019050612054565b5085935050505092915050565b600061209982612c62565b6120a38185612d02565b93506120ae83612c2c565b8060005b838110156120df5781516120c68882611eb1565b97506120d183612cb5565b9250506001810190506120b2565b5085935050505092915050565b60006120f782612c62565b6121018185612d13565b935061210c83612c2c565b8060005b8381101561213d5781516121248882611eb1565b975061212f83612cb5565b925050600181019050612110565b5085935050505092915050565b61215381612dcb565b82525050565b61216281612dd7565b82525050565b61217181612dd7565b82525050565b60006121838385612d24565b9350612190838584612e0b565b61219983612e57565b840190509392505050565b60006121b08385612d35565b93506121bd838584612e0b565b6121c683612e57565b840190509392505050565b60006121dc82612c83565b6121e68185612d35565b93506121f6818560208601612e1a565b6121ff81612e57565b840191505092915050565b600061221582612c83565b61221f8185612d46565b935061222f818560208601612e1a565b80840191505092915050565b600061224682612c78565b6122508185612d35565b9350612260818560208601612e1a565b61226981612e57565b840191505092915050565b6000612281602583612d51565b91507f4f6e6c79207468652061676772656761746f72206d6179207375626d6974206260008301527f6c6f636b730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006122e7602783612d51565b91507f5f7472616e736974696f6e30206d757374206265206c61737420696e2069747360008301527f20626c6f636b2e000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061234d604083612d51565b91507f496620746865207072655374617465526f6f7420697320696e76616c69642c2060008301527f7468656e2070726f7665207468617420696e76616c696420696e7374656164216020830152604082019050919050565b60006123b3602783612d51565b91507f546865207365636f6e64207472616e736974696f6e206d75737420626520696e60008301527f636c7564656421000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612419602683612d51565b91507f546865206669727374207472616e736974696f6e206d75737420626520696e6360008301527f6c756465642100000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061247f602a83612d51565b91507f426c6f636b73206d757374206265206f6e6520616674657220616e6f7468657260008301527f206f7220657175616c2e000000000000000000000000000000000000000000006020830152604082019050919050565b60006124e5601283612d51565b91507f4e6f2066726175642064657465637465642100000000000000000000000000006000830152602082019050919050565b6000612525601f83612d51565b91507f5472616e736974696f6e73206d7573742062652073657175656e7469616c21006000830152602082019050919050565b6000612565602983612d51565b91507f537570706c6965642073746f7261676520736c6f7420696e646578206973206960008301527f6e636f72726563742100000000000000000000000000000000000000000000006020830152604082019050919050565b60006125cb602883612d51565b91507f5f7472616e736974696f6e30206d75737420626520666972737420696e20697460008301527f7320626c6f636b2e0000000000000000000000000000000000000000000000006020830152604082019050919050565b600060608301600083015161263c6000860182611ec9565b5060208301518482036020860152612654828261208e565b9150506040830151848203604086015261266e828261208e565b9150508091505092915050565b600060408301600083015161269360008601826126b8565b50602083015184820360208601526126ab8282612624565b9150508091505092915050565b6126c181612e01565b82525050565b6126d081612e01565b82525050565b6126e76126e282612e01565b612e4d565b82525050565b60006126f9828461220a565b915081905092915050565b600061271082846126d6565b60208201915081905092915050565b60006020820190506127346000830184611ed8565b92915050565b600060608201905061274f6000830186611ed8565b818103602083015261276181856120ec565b9050818103604083015261277581846120ec565b9050949350505050565b6000602082019050818103600083015261279a818486611f45565b90509392505050565b600060408201905081810360008301526127be818587611f45565b90506127cd60208301846126c7565b949350505050565b60006020820190506127ea600083018461214a565b92915050565b6000608082019050612805600083018761214a565b6128126020830186612168565b61281f6040830185612168565b81810360608301526128318184612030565b905095945050505050565b6000604082019050612851600083018561214a565b818103602083015261286381846121d1565b90509392505050565b60006020820190506128816000830184612168565b92915050565b600060808201905061289c6000830187612168565b81810360208301526128ae818661223b565b90506128bd60408301856126c7565b81810360608301526128cf8184611ee7565b905095945050505050565b60006040820190506128ef6000830185612168565b6128fc60208301846126c7565b9392505050565b6000602082019050818103600083015261291e8184866121a4565b90509392505050565b6000602082019050818103600083015261294181846121d1565b905092915050565b6000604082019050818103600083015261296381856121d1565b905081810360208301526129778184611fbb565b90509392505050565b6000606082019050818103600083015261299a81866121d1565b90506129a960208301856126c7565b81810360408301526129bb8184611ee7565b9050949350505050565b600060208201905081810360008301526129de81612274565b9050919050565b600060208201905081810360008301526129fe816122da565b9050919050565b60006020820190508181036000830152612a1e81612340565b9050919050565b60006020820190508181036000830152612a3e816123a6565b9050919050565b60006020820190508181036000830152612a5e8161240c565b9050919050565b60006020820190508181036000830152612a7e81612472565b9050919050565b60006020820190508181036000830152612a9e816124d8565b9050919050565b60006020820190508181036000830152612abe81612518565b9050919050565b60006020820190508181036000830152612ade81612558565b9050919050565b60006020820190508181036000830152612afe816125be565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715612b2857600080fd5b8060405250919050565b600067ffffffffffffffff821115612b4957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115612b7157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115612b9957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115612bc157600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115612bed57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60008083356001602003843603038112612d7b57600080fd5b83810192508235915060208301925067ffffffffffffffff821115612d9f57600080fd5b600182023603841315612db157600080fd5b509250929050565b6000612dc482612de1565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612e38578082015181840152602081019050612e1d565b83811115612e47576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b612e7181612db9565b8114612e7c57600080fd5b50565b612e8881612dcb565b8114612e9357600080fd5b50565b612e9f81612dd7565b8114612eaa57600080fd5b50565b612eb681612e01565b8114612ec157600080fd5b5056fea365627a7a72315820bb3c54677fab8ae9f21dd8a1f66322f5acb2a25fb153a7e634986730b98a3d176c6578706572696d656e74616cf564736f6c634300050f0040"

// DeployRollupChain deploys a new Ethereum contract, binding an instance of RollupChain to it.
func DeployRollupChain(auth *bind.TransactOpts, backend bind.ContractBackend, _transitionEvaluatorAddress common.Address, _rollupMerkleUtilsAddress common.Address, _tokenRegistryAddress common.Address, _aggregatorAddress common.Address) (common.Address, *types.Transaction, *RollupChain, error) {
	parsed, err := abi.JSON(strings.NewReader(RollupChainABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(RollupChainBin), backend, _transitionEvaluatorAddress, _rollupMerkleUtilsAddress, _tokenRegistryAddress, _aggregatorAddress)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &RollupChain{RollupChainCaller: RollupChainCaller{contract: contract}, RollupChainTransactor: RollupChainTransactor{contract: contract}, RollupChainFilterer: RollupChainFilterer{contract: contract}}, nil
}

// RollupChain is an auto generated Go binding around an Ethereum contract.
type RollupChain struct {
	RollupChainCaller     // Read-only binding to the contract
	RollupChainTransactor // Write-only binding to the contract
	RollupChainFilterer   // Log filterer for contract events
}

// RollupChainCaller is an auto generated read-only Go binding around an Ethereum contract.
type RollupChainCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupChainTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RollupChainTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupChainFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RollupChainFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupChainSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RollupChainSession struct {
	Contract     *RollupChain      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// RollupChainCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RollupChainCallerSession struct {
	Contract *RollupChainCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// RollupChainTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RollupChainTransactorSession struct {
	Contract     *RollupChainTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// RollupChainRaw is an auto generated low-level Go binding around an Ethereum contract.
type RollupChainRaw struct {
	Contract *RollupChain // Generic contract binding to access the raw methods on
}

// RollupChainCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RollupChainCallerRaw struct {
	Contract *RollupChainCaller // Generic read-only contract binding to access the raw methods on
}

// RollupChainTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RollupChainTransactorRaw struct {
	Contract *RollupChainTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRollupChain creates a new instance of RollupChain, bound to a specific deployed contract.
func NewRollupChain(address common.Address, backend bind.ContractBackend) (*RollupChain, error) {
	contract, err := bindRollupChain(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &RollupChain{RollupChainCaller: RollupChainCaller{contract: contract}, RollupChainTransactor: RollupChainTransactor{contract: contract}, RollupChainFilterer: RollupChainFilterer{contract: contract}}, nil
}

// NewRollupChainCaller creates a new read-only instance of RollupChain, bound to a specific deployed contract.
func NewRollupChainCaller(address common.Address, caller bind.ContractCaller) (*RollupChainCaller, error) {
	contract, err := bindRollupChain(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RollupChainCaller{contract: contract}, nil
}

// NewRollupChainTransactor creates a new write-only instance of RollupChain, bound to a specific deployed contract.
func NewRollupChainTransactor(address common.Address, transactor bind.ContractTransactor) (*RollupChainTransactor, error) {
	contract, err := bindRollupChain(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RollupChainTransactor{contract: contract}, nil
}

// NewRollupChainFilterer creates a new log filterer instance of RollupChain, bound to a specific deployed contract.
func NewRollupChainFilterer(address common.Address, filterer bind.ContractFilterer) (*RollupChainFilterer, error) {
	contract, err := bindRollupChain(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RollupChainFilterer{contract: contract}, nil
}

// bindRollupChain binds a generic wrapper to an already deployed contract.
func bindRollupChain(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RollupChainABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RollupChain *RollupChainRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RollupChain.Contract.RollupChainCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RollupChain *RollupChainRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RollupChain.Contract.RollupChainTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RollupChain *RollupChainRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RollupChain.Contract.RollupChainTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RollupChain *RollupChainCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RollupChain.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RollupChain *RollupChainTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RollupChain.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RollupChain *RollupChainTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RollupChain.Contract.contract.Transact(opts, method, params...)
}

// ZEROBYTES32 is a free data retrieval call binding the contract method 0x069321b0.
//
// Solidity: function ZERO_BYTES32() constant returns(bytes32)
func (_RollupChain *RollupChainCaller) ZEROBYTES32(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "ZERO_BYTES32")
	return *ret0, err
}

// ZEROBYTES32 is a free data retrieval call binding the contract method 0x069321b0.
//
// Solidity: function ZERO_BYTES32() constant returns(bytes32)
func (_RollupChain *RollupChainSession) ZEROBYTES32() ([32]byte, error) {
	return _RollupChain.Contract.ZEROBYTES32(&_RollupChain.CallOpts)
}

// ZEROBYTES32 is a free data retrieval call binding the contract method 0x069321b0.
//
// Solidity: function ZERO_BYTES32() constant returns(bytes32)
func (_RollupChain *RollupChainCallerSession) ZEROBYTES32() ([32]byte, error) {
	return _RollupChain.Contract.ZEROBYTES32(&_RollupChain.CallOpts)
}

// AggregatorAddress is a free data retrieval call binding the contract method 0x380bbe53.
//
// Solidity: function aggregatorAddress() constant returns(address)
func (_RollupChain *RollupChainCaller) AggregatorAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "aggregatorAddress")
	return *ret0, err
}

// AggregatorAddress is a free data retrieval call binding the contract method 0x380bbe53.
//
// Solidity: function aggregatorAddress() constant returns(address)
func (_RollupChain *RollupChainSession) AggregatorAddress() (common.Address, error) {
	return _RollupChain.Contract.AggregatorAddress(&_RollupChain.CallOpts)
}

// AggregatorAddress is a free data retrieval call binding the contract method 0x380bbe53.
//
// Solidity: function aggregatorAddress() constant returns(address)
func (_RollupChain *RollupChainCallerSession) AggregatorAddress() (common.Address, error) {
	return _RollupChain.Contract.AggregatorAddress(&_RollupChain.CallOpts)
}

// Blocks is a free data retrieval call binding the contract method 0xf25b3f99.
//
// Solidity: function blocks(uint256 ) constant returns(bytes32 rootHash, uint256 blockSize)
func (_RollupChain *RollupChainCaller) Blocks(opts *bind.CallOpts, arg0 *big.Int) (struct {
	RootHash  [32]byte
	BlockSize *big.Int
}, error) {
	ret := new(struct {
		RootHash  [32]byte
		BlockSize *big.Int
	})
	out := ret
	err := _RollupChain.contract.Call(opts, out, "blocks", arg0)
	return *ret, err
}

// Blocks is a free data retrieval call binding the contract method 0xf25b3f99.
//
// Solidity: function blocks(uint256 ) constant returns(bytes32 rootHash, uint256 blockSize)
func (_RollupChain *RollupChainSession) Blocks(arg0 *big.Int) (struct {
	RootHash  [32]byte
	BlockSize *big.Int
}, error) {
	return _RollupChain.Contract.Blocks(&_RollupChain.CallOpts, arg0)
}

// Blocks is a free data retrieval call binding the contract method 0xf25b3f99.
//
// Solidity: function blocks(uint256 ) constant returns(bytes32 rootHash, uint256 blockSize)
func (_RollupChain *RollupChainCallerSession) Blocks(arg0 *big.Int) (struct {
	RootHash  [32]byte
	BlockSize *big.Int
}, error) {
	return _RollupChain.Contract.Blocks(&_RollupChain.CallOpts, arg0)
}

// CheckTransitionInclusion is a free data retrieval call binding the contract method 0x9a14f166.
//
// Solidity: function checkTransitionInclusion(DataTypesIncludedTransition _includedTransition) constant returns(bool)
func (_RollupChain *RollupChainCaller) CheckTransitionInclusion(opts *bind.CallOpts, _includedTransition DataTypesIncludedTransition) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "checkTransitionInclusion", _includedTransition)
	return *ret0, err
}

// CheckTransitionInclusion is a free data retrieval call binding the contract method 0x9a14f166.
//
// Solidity: function checkTransitionInclusion(DataTypesIncludedTransition _includedTransition) constant returns(bool)
func (_RollupChain *RollupChainSession) CheckTransitionInclusion(_includedTransition DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.CheckTransitionInclusion(&_RollupChain.CallOpts, _includedTransition)
}

// CheckTransitionInclusion is a free data retrieval call binding the contract method 0x9a14f166.
//
// Solidity: function checkTransitionInclusion(DataTypesIncludedTransition _includedTransition) constant returns(bool)
func (_RollupChain *RollupChainCallerSession) CheckTransitionInclusion(_includedTransition DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.CheckTransitionInclusion(&_RollupChain.CallOpts, _includedTransition)
}

// GetAccountInfoBytes is a free data retrieval call binding the contract method 0xc73ea882.
//
// Solidity: function getAccountInfoBytes(DataTypesAccountInfo _accountInfo) constant returns(bytes)
func (_RollupChain *RollupChainCaller) GetAccountInfoBytes(opts *bind.CallOpts, _accountInfo DataTypesAccountInfo) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "getAccountInfoBytes", _accountInfo)
	return *ret0, err
}

// GetAccountInfoBytes is a free data retrieval call binding the contract method 0xc73ea882.
//
// Solidity: function getAccountInfoBytes(DataTypesAccountInfo _accountInfo) constant returns(bytes)
func (_RollupChain *RollupChainSession) GetAccountInfoBytes(_accountInfo DataTypesAccountInfo) ([]byte, error) {
	return _RollupChain.Contract.GetAccountInfoBytes(&_RollupChain.CallOpts, _accountInfo)
}

// GetAccountInfoBytes is a free data retrieval call binding the contract method 0xc73ea882.
//
// Solidity: function getAccountInfoBytes(DataTypesAccountInfo _accountInfo) constant returns(bytes)
func (_RollupChain *RollupChainCallerSession) GetAccountInfoBytes(_accountInfo DataTypesAccountInfo) ([]byte, error) {
	return _RollupChain.Contract.GetAccountInfoBytes(&_RollupChain.CallOpts, _accountInfo)
}

// GetTransitionHash is a free data retrieval call binding the contract method 0xd866ba6f.
//
// Solidity: function getTransitionHash(bytes _transition) constant returns(bytes32)
func (_RollupChain *RollupChainCaller) GetTransitionHash(opts *bind.CallOpts, _transition []byte) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "getTransitionHash", _transition)
	return *ret0, err
}

// GetTransitionHash is a free data retrieval call binding the contract method 0xd866ba6f.
//
// Solidity: function getTransitionHash(bytes _transition) constant returns(bytes32)
func (_RollupChain *RollupChainSession) GetTransitionHash(_transition []byte) ([32]byte, error) {
	return _RollupChain.Contract.GetTransitionHash(&_RollupChain.CallOpts, _transition)
}

// GetTransitionHash is a free data retrieval call binding the contract method 0xd866ba6f.
//
// Solidity: function getTransitionHash(bytes _transition) constant returns(bytes32)
func (_RollupChain *RollupChainCallerSession) GetTransitionHash(_transition []byte) ([32]byte, error) {
	return _RollupChain.Contract.GetTransitionHash(&_RollupChain.CallOpts, _transition)
}

// VerifySequentialTransitions is a free data retrieval call binding the contract method 0xceb7aeb0.
//
// Solidity: function verifySequentialTransitions(DataTypesIncludedTransition _transition0, DataTypesIncludedTransition _transition1) constant returns(bool)
func (_RollupChain *RollupChainCaller) VerifySequentialTransitions(opts *bind.CallOpts, _transition0 DataTypesIncludedTransition, _transition1 DataTypesIncludedTransition) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "verifySequentialTransitions", _transition0, _transition1)
	return *ret0, err
}

// VerifySequentialTransitions is a free data retrieval call binding the contract method 0xceb7aeb0.
//
// Solidity: function verifySequentialTransitions(DataTypesIncludedTransition _transition0, DataTypesIncludedTransition _transition1) constant returns(bool)
func (_RollupChain *RollupChainSession) VerifySequentialTransitions(_transition0 DataTypesIncludedTransition, _transition1 DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.VerifySequentialTransitions(&_RollupChain.CallOpts, _transition0, _transition1)
}

// VerifySequentialTransitions is a free data retrieval call binding the contract method 0xceb7aeb0.
//
// Solidity: function verifySequentialTransitions(DataTypesIncludedTransition _transition0, DataTypesIncludedTransition _transition1) constant returns(bool)
func (_RollupChain *RollupChainCallerSession) VerifySequentialTransitions(_transition0 DataTypesIncludedTransition, _transition1 DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.VerifySequentialTransitions(&_RollupChain.CallOpts, _transition0, _transition1)
}

// GetStateRootsAndStorageSlots is a paid mutator transaction binding the contract method 0xbc128da9.
//
// Solidity: function getStateRootsAndStorageSlots(bytes _preStateTransition, bytes _invalidTransition) returns(bool, bytes32, bytes32, uint256[])
func (_RollupChain *RollupChainTransactor) GetStateRootsAndStorageSlots(opts *bind.TransactOpts, _preStateTransition []byte, _invalidTransition []byte) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "getStateRootsAndStorageSlots", _preStateTransition, _invalidTransition)
}

// GetStateRootsAndStorageSlots is a paid mutator transaction binding the contract method 0xbc128da9.
//
// Solidity: function getStateRootsAndStorageSlots(bytes _preStateTransition, bytes _invalidTransition) returns(bool, bytes32, bytes32, uint256[])
func (_RollupChain *RollupChainSession) GetStateRootsAndStorageSlots(_preStateTransition []byte, _invalidTransition []byte) (*types.Transaction, error) {
	return _RollupChain.Contract.GetStateRootsAndStorageSlots(&_RollupChain.TransactOpts, _preStateTransition, _invalidTransition)
}

// GetStateRootsAndStorageSlots is a paid mutator transaction binding the contract method 0xbc128da9.
//
// Solidity: function getStateRootsAndStorageSlots(bytes _preStateTransition, bytes _invalidTransition) returns(bool, bytes32, bytes32, uint256[])
func (_RollupChain *RollupChainTransactorSession) GetStateRootsAndStorageSlots(_preStateTransition []byte, _invalidTransition []byte) (*types.Transaction, error) {
	return _RollupChain.Contract.GetStateRootsAndStorageSlots(&_RollupChain.TransactOpts, _preStateTransition, _invalidTransition)
}

// ProveTransitionInvalid is a paid mutator transaction binding the contract method 0xb78167e5.
//
// Solidity: function proveTransitionInvalid(DataTypesIncludedTransition _preStateIncludedTransition, DataTypesIncludedTransition _invalidIncludedTransition, []DataTypesIncludedStorageSlot _transitionStorageSlots) returns()
func (_RollupChain *RollupChainTransactor) ProveTransitionInvalid(opts *bind.TransactOpts, _preStateIncludedTransition DataTypesIncludedTransition, _invalidIncludedTransition DataTypesIncludedTransition, _transitionStorageSlots []DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "proveTransitionInvalid", _preStateIncludedTransition, _invalidIncludedTransition, _transitionStorageSlots)
}

// ProveTransitionInvalid is a paid mutator transaction binding the contract method 0xb78167e5.
//
// Solidity: function proveTransitionInvalid(DataTypesIncludedTransition _preStateIncludedTransition, DataTypesIncludedTransition _invalidIncludedTransition, []DataTypesIncludedStorageSlot _transitionStorageSlots) returns()
func (_RollupChain *RollupChainSession) ProveTransitionInvalid(_preStateIncludedTransition DataTypesIncludedTransition, _invalidIncludedTransition DataTypesIncludedTransition, _transitionStorageSlots []DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.Contract.ProveTransitionInvalid(&_RollupChain.TransactOpts, _preStateIncludedTransition, _invalidIncludedTransition, _transitionStorageSlots)
}

// ProveTransitionInvalid is a paid mutator transaction binding the contract method 0xb78167e5.
//
// Solidity: function proveTransitionInvalid(DataTypesIncludedTransition _preStateIncludedTransition, DataTypesIncludedTransition _invalidIncludedTransition, []DataTypesIncludedStorageSlot _transitionStorageSlots) returns()
func (_RollupChain *RollupChainTransactorSession) ProveTransitionInvalid(_preStateIncludedTransition DataTypesIncludedTransition, _invalidIncludedTransition DataTypesIncludedTransition, _transitionStorageSlots []DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.Contract.ProveTransitionInvalid(&_RollupChain.TransactOpts, _preStateIncludedTransition, _invalidIncludedTransition, _transitionStorageSlots)
}

// SubmitBlock is a paid mutator transaction binding the contract method 0xd3250f3b.
//
// Solidity: function submitBlock(bytes[] _block) returns(bytes32)
func (_RollupChain *RollupChainTransactor) SubmitBlock(opts *bind.TransactOpts, _block [][]byte) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "submitBlock", _block)
}

// SubmitBlock is a paid mutator transaction binding the contract method 0xd3250f3b.
//
// Solidity: function submitBlock(bytes[] _block) returns(bytes32)
func (_RollupChain *RollupChainSession) SubmitBlock(_block [][]byte) (*types.Transaction, error) {
	return _RollupChain.Contract.SubmitBlock(&_RollupChain.TransactOpts, _block)
}

// SubmitBlock is a paid mutator transaction binding the contract method 0xd3250f3b.
//
// Solidity: function submitBlock(bytes[] _block) returns(bytes32)
func (_RollupChain *RollupChainTransactorSession) SubmitBlock(_block [][]byte) (*types.Transaction, error) {
	return _RollupChain.Contract.SubmitBlock(&_RollupChain.TransactOpts, _block)
}

// RollupChainDecodedTransitionIterator is returned from FilterDecodedTransition and is used to iterate over the raw logs and unpacked data for DecodedTransition events raised by the RollupChain contract.
type RollupChainDecodedTransitionIterator struct {
	Event *RollupChainDecodedTransition // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RollupChainDecodedTransitionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RollupChainDecodedTransition)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RollupChainDecodedTransition)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RollupChainDecodedTransitionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RollupChainDecodedTransitionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RollupChainDecodedTransition represents a DecodedTransition event raised by the RollupChain contract.
type RollupChainDecodedTransition struct {
	Success    bool
	ReturnData []byte
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterDecodedTransition is a free log retrieval operation binding the contract event 0x5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee3.
//
// Solidity: event DecodedTransition(bool success, bytes returnData)
func (_RollupChain *RollupChainFilterer) FilterDecodedTransition(opts *bind.FilterOpts) (*RollupChainDecodedTransitionIterator, error) {

	logs, sub, err := _RollupChain.contract.FilterLogs(opts, "DecodedTransition")
	if err != nil {
		return nil, err
	}
	return &RollupChainDecodedTransitionIterator{contract: _RollupChain.contract, event: "DecodedTransition", logs: logs, sub: sub}, nil
}

// WatchDecodedTransition is a free log subscription operation binding the contract event 0x5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee3.
//
// Solidity: event DecodedTransition(bool success, bytes returnData)
func (_RollupChain *RollupChainFilterer) WatchDecodedTransition(opts *bind.WatchOpts, sink chan<- *RollupChainDecodedTransition) (event.Subscription, error) {

	logs, sub, err := _RollupChain.contract.WatchLogs(opts, "DecodedTransition")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RollupChainDecodedTransition)
				if err := _RollupChain.contract.UnpackLog(event, "DecodedTransition", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDecodedTransition is a log parse operation binding the contract event 0x5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee3.
//
// Solidity: event DecodedTransition(bool success, bytes returnData)
func (_RollupChain *RollupChainFilterer) ParseDecodedTransition(log types.Log) (*RollupChainDecodedTransition, error) {
	event := new(RollupChainDecodedTransition)
	if err := _RollupChain.contract.UnpackLog(event, "DecodedTransition", log); err != nil {
		return nil, err
	}
	return event, nil
}

// RollupChainNewRollupBlockIterator is returned from FilterNewRollupBlock and is used to iterate over the raw logs and unpacked data for NewRollupBlock events raised by the RollupChain contract.
type RollupChainNewRollupBlockIterator struct {
	Event *RollupChainNewRollupBlock // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RollupChainNewRollupBlockIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RollupChainNewRollupBlock)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RollupChainNewRollupBlock)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RollupChainNewRollupBlockIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RollupChainNewRollupBlockIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RollupChainNewRollupBlock represents a NewRollupBlock event raised by the RollupChain contract.
type RollupChainNewRollupBlock struct {
	Block       [][]byte
	BlockNumber *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterNewRollupBlock is a free log retrieval operation binding the contract event 0xe6a728cf739c94a7ce1eae684da3d74934e160650f47aa6dd39f70dfe005aadf.
//
// Solidity: event NewRollupBlock(bytes[] block, uint256 blockNumber)
func (_RollupChain *RollupChainFilterer) FilterNewRollupBlock(opts *bind.FilterOpts) (*RollupChainNewRollupBlockIterator, error) {

	logs, sub, err := _RollupChain.contract.FilterLogs(opts, "NewRollupBlock")
	if err != nil {
		return nil, err
	}
	return &RollupChainNewRollupBlockIterator{contract: _RollupChain.contract, event: "NewRollupBlock", logs: logs, sub: sub}, nil
}

// WatchNewRollupBlock is a free log subscription operation binding the contract event 0xe6a728cf739c94a7ce1eae684da3d74934e160650f47aa6dd39f70dfe005aadf.
//
// Solidity: event NewRollupBlock(bytes[] block, uint256 blockNumber)
func (_RollupChain *RollupChainFilterer) WatchNewRollupBlock(opts *bind.WatchOpts, sink chan<- *RollupChainNewRollupBlock) (event.Subscription, error) {

	logs, sub, err := _RollupChain.contract.WatchLogs(opts, "NewRollupBlock")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RollupChainNewRollupBlock)
				if err := _RollupChain.contract.UnpackLog(event, "NewRollupBlock", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseNewRollupBlock is a log parse operation binding the contract event 0xe6a728cf739c94a7ce1eae684da3d74934e160650f47aa6dd39f70dfe005aadf.
//
// Solidity: event NewRollupBlock(bytes[] block, uint256 blockNumber)
func (_RollupChain *RollupChainFilterer) ParseNewRollupBlock(log types.Log) (*RollupChainNewRollupBlock, error) {
	event := new(RollupChainNewRollupBlock)
	if err := _RollupChain.contract.UnpackLog(event, "NewRollupBlock", log); err != nil {
		return nil, err
	}
	return event, nil
}

// RollupChainTransitionIterator is returned from FilterTransition and is used to iterate over the raw logs and unpacked data for Transition events raised by the RollupChain contract.
type RollupChainTransitionIterator struct {
	Event *RollupChainTransition // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RollupChainTransitionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RollupChainTransition)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RollupChainTransition)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RollupChainTransitionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RollupChainTransitionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RollupChainTransition represents a Transition event raised by the RollupChain contract.
type RollupChainTransition struct {
	Data []byte
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterTransition is a free log retrieval operation binding the contract event 0x034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c111.
//
// Solidity: event Transition(bytes data)
func (_RollupChain *RollupChainFilterer) FilterTransition(opts *bind.FilterOpts) (*RollupChainTransitionIterator, error) {

	logs, sub, err := _RollupChain.contract.FilterLogs(opts, "Transition")
	if err != nil {
		return nil, err
	}
	return &RollupChainTransitionIterator{contract: _RollupChain.contract, event: "Transition", logs: logs, sub: sub}, nil
}

// WatchTransition is a free log subscription operation binding the contract event 0x034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c111.
//
// Solidity: event Transition(bytes data)
func (_RollupChain *RollupChainFilterer) WatchTransition(opts *bind.WatchOpts, sink chan<- *RollupChainTransition) (event.Subscription, error) {

	logs, sub, err := _RollupChain.contract.WatchLogs(opts, "Transition")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RollupChainTransition)
				if err := _RollupChain.contract.UnpackLog(event, "Transition", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransition is a log parse operation binding the contract event 0x034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c111.
//
// Solidity: event Transition(bytes data)
func (_RollupChain *RollupChainFilterer) ParseTransition(log types.Log) (*RollupChainTransition, error) {
	event := new(RollupChainTransition)
	if err := _RollupChain.contract.UnpackLog(event, "Transition", log); err != nil {
		return nil, err
	}
	return event, nil
}
