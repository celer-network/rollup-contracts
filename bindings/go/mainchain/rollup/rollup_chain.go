// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package rollup

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// DataTypesAccountInfo is an auto generated low-level Go binding around an user-defined struct.
type DataTypesAccountInfo struct {
	Account  common.Address
	Balances []*big.Int
	Nonces   []*big.Int
}

// DataTypesIncludedStorageSlot is an auto generated low-level Go binding around an user-defined struct.
type DataTypesIncludedStorageSlot struct {
	StorageSlot DataTypesStorageSlot
	Siblings    [][32]byte
}

// DataTypesIncludedTransition is an auto generated low-level Go binding around an user-defined struct.
type DataTypesIncludedTransition struct {
	Transition     []byte
	InclusionProof DataTypesTransitionInclusionProof
}

// DataTypesStorageSlot is an auto generated low-level Go binding around an user-defined struct.
type DataTypesStorageSlot struct {
	SlotIndex *big.Int
	Value     DataTypesAccountInfo
}

// DataTypesTransitionInclusionProof is an auto generated low-level Go binding around an user-defined struct.
type DataTypesTransitionInclusionProof struct {
	BlockNumber     *big.Int
	TransitionIndex *big.Int
	Siblings        [][32]byte
}

// RollupChainABI is the input ABI used to generate the binding from.
const RollupChainABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_transitionEvaluatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rollupMerkleUtilsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenRegistryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aggregatorAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"DecodedTransition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"block\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"NewRollupBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transition\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ZERO_BYTES32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aggregatorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blocks\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"rootHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"blockSize\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_includedTransition\",\"type\":\"tuple\"}],\"name\":\"checkTransitionInclusion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nonces\",\"type\":\"uint256[]\"}],\"internalType\":\"structDataTypes.AccountInfo\",\"name\":\"_accountInfo\",\"type\":\"tuple\"}],\"name\":\"getAccountInfoBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_preStateTransition\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_invalidTransition\",\"type\":\"bytes\"}],\"name\":\"getStateRootsAndStorageSlots\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_transition\",\"type\":\"bytes\"}],\"name\":\"getTransitionHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_preStateIncludedTransition\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_invalidIncludedTransition\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nonces\",\"type\":\"uint256[]\"}],\"internalType\":\"structDataTypes.AccountInfo\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.StorageSlot\",\"name\":\"storageSlot\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.IncludedStorageSlot[]\",\"name\":\"_transitionStorageSlots\",\"type\":\"tuple[]\"}],\"name\":\"proveTransitionInvalid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_block\",\"type\":\"bytes[]\"}],\"name\":\"submitBlock\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_transition0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_transition1\",\"type\":\"tuple\"}],\"name\":\"verifySequentialTransitions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// RollupChainBin is the compiled bytecode used for deploying new contracts.
var RollupChainBin = "0x60806040523480156200001157600080fd5b5060405162002eba38038062002eba83398181016040528101906200003791906200015b565b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505062000215565b6000815190506200015581620001fb565b92915050565b600080600080608085870312156200017257600080fd5b6000620001828782880162000144565b9450506020620001958782880162000144565b9350506040620001a88782880162000144565b9250506060620001bb8782880162000144565b91505092959194509250565b6000620001d482620001db565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200020681620001c7565b81146200021257600080fd5b50565b612c9580620002256000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063c73ea88211610066578063c73ea8821461015e578063ceb7aeb01461018e578063d3250f3b146101be578063d866ba6f146101ee578063f25b3f991461021e5761009e565b8063069321b0146100a3578063380bbe53146100c15780639a14f166146100df578063b78167e51461010f578063bc128da91461012b575b600080fd5b6100ab61024f565b6040516100b8919061260f565b60405180910390f35b6100c9610256565b6040516100d691906124c2565b60405180910390f35b6100f960048036038101906100f49190611b3c565b61027c565b6040516101069190612578565b60405180910390f35b61012960048036038101906101249190611be9565b61037b565b005b61014560048036038101906101409190611a8f565b6108ef565b6040516101559493929190612593565b60405180910390f35b61017860048036038101906101739190611afb565b610c18565b60405161018591906126ca565b60405180910390f35b6101a860048036038101906101a39190611b7d565b610cd5565b6040516101b59190612578565b60405180910390f35b6101d860048036038101906101d39190611963565b610efb565b6040516101e5919061260f565b60405180910390f35b61020860048036038101906102039190611a4e565b611164565b604051610215919061260f565b60405180910390f35b61023860048036038101906102339190611c80565b611175565b60405161024692919061267d565b60405180910390f35b6000801b81565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060038360200151600001518154811061029457fe5b90600052602060002090600202016000015490506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166330d90a768386600001518760200151602001518860200151604001516040518563ffffffff1660e01b815260040161031f949392919061262a565b60206040518083038186803b15801561033757600080fd5b505afa15801561034b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036f91906119a8565b90508092505050919050565b6060836000015190506060836000015190506103978585610cd5565b50600080600060606103a986866108ef565b9350935093509350836103d2576103c78860200151600001516111a6565b5050505050506108ea565b60008090505b875181101561045e578181815181106103ed57fe5b602002602001015188828151811061040157fe5b6020026020010151600001516000015114610451576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044890612868565b60405180910390fd5b80806001019150506103d8565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c22b6d98460206040518363ffffffff1660e01b81526004016104bd92919061267d565b600060405180830381600087803b1580156104d757600080fd5b505af11580156104eb573d6000803e3d6000fd5b5050505060008090505b87518110156105275761051a88828151811061050d57fe5b60200260200101516111f8565b80806001019150506104f5565b506060875167ffffffffffffffff8111801561054257600080fd5b5060405190808252806020026020018201604052801561057c57816020015b6105696112ae565b8152602001906001900390816105615790505b50905060008090505b88518110156105ca5788818151811061059a57fe5b6020026020010151600001518282815181106105b257fe5b60200260200101819052508080600101915050610585565b5060606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632868bc6060e01b88846040516024016106209291906126ec565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161068a9190612490565b6000604051808303816000865af19150503d80600081146106c7576040519150601f19603f3d011682016040523d82523d6000602084013e6106cc565b606091505b508092508197505050856106f8576106eb8a60200151600001516111a6565b50505050505050506108ea565b60608180602001905181019061070e9190611922565b905060008090505b8a518110156107e957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663272684b583838151811061076957fe5b60200260200101518d848151811061077d57fe5b602002602001015160000151600001516040518363ffffffff1660e01b81526004016107aa92919061267d565b600060405180830381600087803b1580156107c457600080fd5b505af11580156107d8573d6000803e3d6000fd5b505050508080600101915050610716565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635ca1e1656040518163ffffffff1660e01b815260040160206040518083038186803b15801561085257600080fd5b505afa158015610866573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088a91906119d1565b85146108af576108a18b60200151600001516111a6565b5050505050505050506108ea565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e190612828565b60405180910390fd5b505050565b60008060006060600060606000806060806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdce791960e01b8d60405160240161095191906126ca565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516109bb9190612490565b6000604051808303816000865af19150503d80600081146109f8576040519150601f19603f3d011682016040523d82523d6000602084013e6109fd565b606091505b5080965081975050507f5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee38686604051610a379291906125df565b60405180910390a185610a7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a76906127a8565b60405180910390fd5b84806020019051810190610a9391906119fa565b80935081955050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdce791960e01b8c604051602401610aec91906126ca565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610b569190612490565b6000604051808303816000865af19150503d8060008114610b93576040519150601f19603f3d011682016040523d82523d6000602084013e610b98565b606091505b5080965081975050507f5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee38686604051610bd29291906125df565b60405180910390a18515610bfd5784806020019051810190610bf491906119fa565b80925081945050505b85848483995099509950995050505050505092959194509250565b6060600073ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff16148015610c5f57506000826020015151145b8015610c7057506000826040015151145b15610c9d576000604051602001610c8791906124a7565b6040516020818303038152906040529050610cd0565b816000015182602001518360400151604051602001610cbe939291906124dd565b60405160208183030381529060405290505b919050565b6000610ce08361027c565b610d1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d16906127e8565b60405180910390fd5b610d288261027c565b610d67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5e906127c8565b60405180910390fd5b8160200151600001518360200151600001511415610ddd5760018260200151602001510383602001516020015114610dd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcb90612848565b60405180910390fd5b60019050610ef5565b60018260200151600001510383602001516000015114610e32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2990612808565b60405180910390fd5b6001600384602001516000015181548110610e4957fe5b9060005260206000209060020201600101540383602001516020015114610ea5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9c90612788565b60405180910390fd5b600082602001516020015114610ef0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee790612888565b60405180910390fd5b600190505b92915050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8490612768565b60405180910390fd5b60008090505b83839050811015611000577f034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c111848483818110610fcb57fe5b9050602002810190610fdd91906128a8565b604051610feb9291906126a6565b60405180910390a18080600101915050610f93565b506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340ff34ef85856040518363ffffffff1660e01b8152600401611060929190612522565b60206040518083038186803b15801561107857600080fd5b505afa15801561108c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b091906119d1565b90506110ba6112ce565b60405180604001604052808381526020018686905081525090506003819080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550507fe6a728cf739c94a7ce1eae684da3d74934e160650f47aa6dd39f70dfe005aadf858560016003805490500360405161115193929190612546565b60405180910390a1819250505092915050565b600081805190602001209050919050565b6003818154811061118257fe5b90600052602060002090600202016000915090508060000154908060010154905082565b60008190505b6003805490508110156111f457600381815481106111c657fe5b90600052602060002090600202016000808201600090556001820160009055505080806001019150506111ac565b5050565b606061120b826000015160200151610c18565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634359356d8284600001516000015185602001516040518463ffffffff1660e01b815260040161127893929190612723565b600060405180830381600087803b15801561129257600080fd5b505af11580156112a6573d6000803e3d6000fd5b505050505050565b6040518060400160405280600081526020016112c86112eb565b81525090565b604051806040016040528060008019168152602001600081525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b60008135905061133181612c03565b92915050565b600082601f83011261134857600080fd5b813561135b6113568261292c565b6128ff565b9150818183526020840193506020810190508385602084028201111561138057600080fd5b60005b838110156113b057816113968882611616565b845260208401935060208301925050600181019050611383565b5050505092915050565b600082601f8301126113cb57600080fd5b81516113de6113d98261292c565b6128ff565b9150818183526020840193506020810190508385602084028201111561140357600080fd5b60005b838110156114335781611419888261162b565b845260208401935060208301925050600181019050611406565b5050505092915050565b60008083601f84011261144f57600080fd5b8235905067ffffffffffffffff81111561146857600080fd5b60208301915083602082028301111561148057600080fd5b9250929050565b600082601f83011261149857600080fd5b81356114ab6114a682612954565b6128ff565b9150818183526020840193506020810190508360005b838110156114f157813586016114d78882611724565b8452602084019350602083019250506001810190506114c1565b5050505092915050565b600082601f83011261150c57600080fd5b813561151f61151a8261297c565b6128ff565b9150818183526020840193506020810190508385602084028201111561154457600080fd5b60005b83811015611574578161155a88826118f8565b845260208401935060208301925050600181019050611547565b5050505092915050565b600082601f83011261158f57600080fd5b81516115a261159d8261297c565b6128ff565b915081818352602084019350602081019050838560208402820111156115c757600080fd5b60005b838110156115f757816115dd888261190d565b8452602084019350602083019250506001810190506115ca565b5050505092915050565b60008151905061161081612c1a565b92915050565b60008135905061162581612c31565b92915050565b60008151905061163a81612c31565b92915050565b600082601f83011261165157600080fd5b813561166461165f826129a4565b6128ff565b9150808252602083016020830185838301111561168057600080fd5b61168b838284612ba6565b50505092915050565b6000606082840312156116a657600080fd5b6116b060606128ff565b905060006116c084828501611322565b600083015250602082013567ffffffffffffffff8111156116e057600080fd5b6116ec848285016114fb565b602083015250604082013567ffffffffffffffff81111561170c57600080fd5b611718848285016114fb565b60408301525092915050565b60006040828403121561173657600080fd5b61174060406128ff565b9050600082013567ffffffffffffffff81111561175c57600080fd5b6117688482850161181c565b600083015250602082013567ffffffffffffffff81111561178857600080fd5b61179484828501611337565b60208301525092915050565b6000604082840312156117b257600080fd5b6117bc60406128ff565b9050600082013567ffffffffffffffff8111156117d857600080fd5b6117e484828501611640565b600083015250602082013567ffffffffffffffff81111561180457600080fd5b61181084828501611880565b60208301525092915050565b60006040828403121561182e57600080fd5b61183860406128ff565b90506000611848848285016118f8565b600083015250602082013567ffffffffffffffff81111561186857600080fd5b61187484828501611694565b60208301525092915050565b60006060828403121561189257600080fd5b61189c60606128ff565b905060006118ac848285016118f8565b60008301525060206118c0848285016118f8565b602083015250604082013567ffffffffffffffff8111156118e057600080fd5b6118ec84828501611337565b60408301525092915050565b60008135905061190781612c48565b92915050565b60008151905061191c81612c48565b92915050565b60006020828403121561193457600080fd5b600082015167ffffffffffffffff81111561194e57600080fd5b61195a848285016113ba565b91505092915050565b6000806020838503121561197657600080fd5b600083013567ffffffffffffffff81111561199057600080fd5b61199c8582860161143d565b92509250509250929050565b6000602082840312156119ba57600080fd5b60006119c884828501611601565b91505092915050565b6000602082840312156119e357600080fd5b60006119f18482850161162b565b91505092915050565b60008060408385031215611a0d57600080fd5b6000611a1b8582860161162b565b925050602083015167ffffffffffffffff811115611a3857600080fd5b611a448582860161157e565b9150509250929050565b600060208284031215611a6057600080fd5b600082013567ffffffffffffffff811115611a7a57600080fd5b611a8684828501611640565b91505092915050565b60008060408385031215611aa257600080fd5b600083013567ffffffffffffffff811115611abc57600080fd5b611ac885828601611640565b925050602083013567ffffffffffffffff811115611ae557600080fd5b611af185828601611640565b9150509250929050565b600060208284031215611b0d57600080fd5b600082013567ffffffffffffffff811115611b2757600080fd5b611b3384828501611694565b91505092915050565b600060208284031215611b4e57600080fd5b600082013567ffffffffffffffff811115611b6857600080fd5b611b74848285016117a0565b91505092915050565b60008060408385031215611b9057600080fd5b600083013567ffffffffffffffff811115611baa57600080fd5b611bb6858286016117a0565b925050602083013567ffffffffffffffff811115611bd357600080fd5b611bdf858286016117a0565b9150509250929050565b600080600060608486031215611bfe57600080fd5b600084013567ffffffffffffffff811115611c1857600080fd5b611c24868287016117a0565b935050602084013567ffffffffffffffff811115611c4157600080fd5b611c4d868287016117a0565b925050604084013567ffffffffffffffff811115611c6a57600080fd5b611c7686828701611487565b9150509250925092565b600060208284031215611c9257600080fd5b6000611ca0848285016118f8565b91505092915050565b6000611cb58383611f35565b60208301905092915050565b6000611cce848484611f53565b90509392505050565b6000611ce3838361241e565b905092915050565b6000611cf7838361245b565b60208301905092915050565b611d0c81612b54565b82525050565b611d1b81612b54565b82525050565b6000611d2c82612a0a565b611d368185612a6a565b9350611d41836129d0565b8060005b83811015611d72578151611d598882611ca9565b9750611d6483612a36565b925050600181019050611d45565b5085935050505092915050565b6000611d8b8385612a7b565b935083602084028501611d9d846129e0565b8060005b87811015611de3578484038952611db88284612afd565b611dc3868284611cc1565b9550611dce84612a43565b935060208b019a505050600181019050611da1565b50829750879450505050509392505050565b6000611e0082612a15565b611e0a8185612a8c565b935083602082028501611e1c856129ea565b8060005b85811015611e585784840389528151611e398582611cd7565b9450611e4483612a50565b925060208a01995050600181019050611e20565b50829750879550505050505092915050565b6000611e7582612a20565b611e7f8185612a9d565b9350611e8a836129fa565b8060005b83811015611ebb578151611ea28882611ceb565b9750611ead83612a5d565b925050600181019050611e8e565b5085935050505092915050565b6000611ed382612a20565b611edd8185612aae565b9350611ee8836129fa565b8060005b83811015611f19578151611f008882611ceb565b9750611f0b83612a5d565b925050600181019050611eec565b5085935050505092915050565b611f2f81612b66565b82525050565b611f3e81612b72565b82525050565b611f4d81612b72565b82525050565b6000611f5f8385612abf565b9350611f6c838584612ba6565b611f7583612bf2565b840190509392505050565b6000611f8c8385612ad0565b9350611f99838584612ba6565b611fa283612bf2565b840190509392505050565b6000611fb882612a2b565b611fc28185612ad0565b9350611fd2818560208601612bb5565b611fdb81612bf2565b840191505092915050565b6000611ff182612a2b565b611ffb8185612ae1565b935061200b818560208601612bb5565b80840191505092915050565b6000612024602583612aec565b91507f4f6e6c79207468652061676772656761746f72206d6179207375626d6974206260008301527f6c6f636b730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061208a602783612aec565b91507f5f7472616e736974696f6e30206d757374206265206c61737420696e2069747360008301527f20626c6f636b2e000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006120f0604083612aec565b91507f496620746865207072655374617465526f6f7420697320696e76616c69642c2060008301527f7468656e2070726f7665207468617420696e76616c696420696e7374656164216020830152604082019050919050565b6000612156602783612aec565b91507f546865207365636f6e64207472616e736974696f6e206d75737420626520696e60008301527f636c7564656421000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006121bc602683612aec565b91507f546865206669727374207472616e736974696f6e206d75737420626520696e6360008301527f6c756465642100000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612222602a83612aec565b91507f426c6f636b73206d757374206265206f6e6520616674657220616e6f7468657260008301527f206f7220657175616c2e000000000000000000000000000000000000000000006020830152604082019050919050565b6000612288601283612aec565b91507f4e6f2066726175642064657465637465642100000000000000000000000000006000830152602082019050919050565b60006122c8601f83612aec565b91507f5472616e736974696f6e73206d7573742062652073657175656e7469616c21006000830152602082019050919050565b6000612308602983612aec565b91507f537570706c6965642073746f7261676520736c6f7420696e646578206973206960008301527f6e636f72726563742100000000000000000000000000000000000000000000006020830152604082019050919050565b600061236e602883612aec565b91507f5f7472616e736974696f6e30206d75737420626520666972737420696e20697460008301527f7320626c6f636b2e0000000000000000000000000000000000000000000000006020830152604082019050919050565b60006060830160008301516123df6000860182611d03565b50602083015184820360208601526123f78282611e6a565b915050604083015184820360408601526124118282611e6a565b9150508091505092915050565b6000604083016000830151612436600086018261245b565b506020830151848203602086015261244e82826123c7565b9150508091505092915050565b61246481612b9c565b82525050565b61247381612b9c565b82525050565b61248a61248582612b9c565b612be8565b82525050565b600061249c8284611fe6565b915081905092915050565b60006124b38284612479565b60208201915081905092915050565b60006020820190506124d76000830184611d12565b92915050565b60006060820190506124f26000830186611d12565b81810360208301526125048185611ec8565b905081810360408301526125188184611ec8565b9050949350505050565b6000602082019050818103600083015261253d818486611d7f565b90509392505050565b60006040820190508181036000830152612561818587611d7f565b9050612570602083018461246a565b949350505050565b600060208201905061258d6000830184611f26565b92915050565b60006080820190506125a86000830187611f26565b6125b56020830186611f44565b6125c26040830185611f44565b81810360608301526125d48184611ec8565b905095945050505050565b60006040820190506125f46000830185611f26565b81810360208301526126068184611fad565b90509392505050565b60006020820190506126246000830184611f44565b92915050565b600060808201905061263f6000830187611f44565b81810360208301526126518186611fad565b9050612660604083018561246a565b81810360608301526126728184611d21565b905095945050505050565b60006040820190506126926000830185611f44565b61269f602083018461246a565b9392505050565b600060208201905081810360008301526126c1818486611f80565b90509392505050565b600060208201905081810360008301526126e48184611fad565b905092915050565b600060408201905081810360008301526127068185611fad565b9050818103602083015261271a8184611df5565b90509392505050565b6000606082019050818103600083015261273d8186611fad565b905061274c602083018561246a565b818103604083015261275e8184611d21565b9050949350505050565b6000602082019050818103600083015261278181612017565b9050919050565b600060208201905081810360008301526127a18161207d565b9050919050565b600060208201905081810360008301526127c1816120e3565b9050919050565b600060208201905081810360008301526127e181612149565b9050919050565b60006020820190508181036000830152612801816121af565b9050919050565b6000602082019050818103600083015261282181612215565b9050919050565b600060208201905081810360008301526128418161227b565b9050919050565b60006020820190508181036000830152612861816122bb565b9050919050565b60006020820190508181036000830152612881816122fb565b9050919050565b600060208201905081810360008301526128a181612361565b9050919050565b600080833560016020038436030381126128c157600080fd5b80840192508235915067ffffffffffffffff8211156128df57600080fd5b6020830192506001820236038313156128f757600080fd5b509250929050565b6000604051905081810181811067ffffffffffffffff8211171561292257600080fd5b8060405250919050565b600067ffffffffffffffff82111561294357600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561296b57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561299357600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156129bb57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60008083356001602003843603038112612b1657600080fd5b83810192508235915060208301925067ffffffffffffffff821115612b3a57600080fd5b600182023603841315612b4c57600080fd5b509250929050565b6000612b5f82612b7c565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612bd3578082015181840152602081019050612bb8565b83811115612be2576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b612c0c81612b54565b8114612c1757600080fd5b50565b612c2381612b66565b8114612c2e57600080fd5b50565b612c3a81612b72565b8114612c4557600080fd5b50565b612c5181612b9c565b8114612c5c57600080fd5b5056fea2646970667358221220ca6d7b92db8c5dbd834b3b0915d914613707f7ac84f55690811ffadce660307964736f6c63430006060033"

// DeployRollupChain deploys a new Ethereum contract, binding an instance of RollupChain to it.
func DeployRollupChain(auth *bind.TransactOpts, backend bind.ContractBackend, _transitionEvaluatorAddress common.Address, _rollupMerkleUtilsAddress common.Address, _tokenRegistryAddress common.Address, _aggregatorAddress common.Address) (common.Address, *types.Transaction, *RollupChain, error) {
	parsed, err := abi.JSON(strings.NewReader(RollupChainABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(RollupChainBin), backend, _transitionEvaluatorAddress, _rollupMerkleUtilsAddress, _tokenRegistryAddress, _aggregatorAddress)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &RollupChain{RollupChainCaller: RollupChainCaller{contract: contract}, RollupChainTransactor: RollupChainTransactor{contract: contract}, RollupChainFilterer: RollupChainFilterer{contract: contract}}, nil
}

// RollupChain is an auto generated Go binding around an Ethereum contract.
type RollupChain struct {
	RollupChainCaller     // Read-only binding to the contract
	RollupChainTransactor // Write-only binding to the contract
	RollupChainFilterer   // Log filterer for contract events
}

// RollupChainCaller is an auto generated read-only Go binding around an Ethereum contract.
type RollupChainCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupChainTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RollupChainTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupChainFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RollupChainFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupChainSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RollupChainSession struct {
	Contract     *RollupChain      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// RollupChainCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RollupChainCallerSession struct {
	Contract *RollupChainCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// RollupChainTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RollupChainTransactorSession struct {
	Contract     *RollupChainTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// RollupChainRaw is an auto generated low-level Go binding around an Ethereum contract.
type RollupChainRaw struct {
	Contract *RollupChain // Generic contract binding to access the raw methods on
}

// RollupChainCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RollupChainCallerRaw struct {
	Contract *RollupChainCaller // Generic read-only contract binding to access the raw methods on
}

// RollupChainTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RollupChainTransactorRaw struct {
	Contract *RollupChainTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRollupChain creates a new instance of RollupChain, bound to a specific deployed contract.
func NewRollupChain(address common.Address, backend bind.ContractBackend) (*RollupChain, error) {
	contract, err := bindRollupChain(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &RollupChain{RollupChainCaller: RollupChainCaller{contract: contract}, RollupChainTransactor: RollupChainTransactor{contract: contract}, RollupChainFilterer: RollupChainFilterer{contract: contract}}, nil
}

// NewRollupChainCaller creates a new read-only instance of RollupChain, bound to a specific deployed contract.
func NewRollupChainCaller(address common.Address, caller bind.ContractCaller) (*RollupChainCaller, error) {
	contract, err := bindRollupChain(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RollupChainCaller{contract: contract}, nil
}

// NewRollupChainTransactor creates a new write-only instance of RollupChain, bound to a specific deployed contract.
func NewRollupChainTransactor(address common.Address, transactor bind.ContractTransactor) (*RollupChainTransactor, error) {
	contract, err := bindRollupChain(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RollupChainTransactor{contract: contract}, nil
}

// NewRollupChainFilterer creates a new log filterer instance of RollupChain, bound to a specific deployed contract.
func NewRollupChainFilterer(address common.Address, filterer bind.ContractFilterer) (*RollupChainFilterer, error) {
	contract, err := bindRollupChain(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RollupChainFilterer{contract: contract}, nil
}

// bindRollupChain binds a generic wrapper to an already deployed contract.
func bindRollupChain(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RollupChainABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RollupChain *RollupChainRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RollupChain.Contract.RollupChainCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RollupChain *RollupChainRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RollupChain.Contract.RollupChainTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RollupChain *RollupChainRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RollupChain.Contract.RollupChainTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RollupChain *RollupChainCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RollupChain.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RollupChain *RollupChainTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RollupChain.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RollupChain *RollupChainTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RollupChain.Contract.contract.Transact(opts, method, params...)
}

// ZEROBYTES32 is a free data retrieval call binding the contract method 0x069321b0.
//
// Solidity: function ZERO_BYTES32() constant returns(bytes32)
func (_RollupChain *RollupChainCaller) ZEROBYTES32(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "ZERO_BYTES32")
	return *ret0, err
}

// ZEROBYTES32 is a free data retrieval call binding the contract method 0x069321b0.
//
// Solidity: function ZERO_BYTES32() constant returns(bytes32)
func (_RollupChain *RollupChainSession) ZEROBYTES32() ([32]byte, error) {
	return _RollupChain.Contract.ZEROBYTES32(&_RollupChain.CallOpts)
}

// ZEROBYTES32 is a free data retrieval call binding the contract method 0x069321b0.
//
// Solidity: function ZERO_BYTES32() constant returns(bytes32)
func (_RollupChain *RollupChainCallerSession) ZEROBYTES32() ([32]byte, error) {
	return _RollupChain.Contract.ZEROBYTES32(&_RollupChain.CallOpts)
}

// AggregatorAddress is a free data retrieval call binding the contract method 0x380bbe53.
//
// Solidity: function aggregatorAddress() constant returns(address)
func (_RollupChain *RollupChainCaller) AggregatorAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "aggregatorAddress")
	return *ret0, err
}

// AggregatorAddress is a free data retrieval call binding the contract method 0x380bbe53.
//
// Solidity: function aggregatorAddress() constant returns(address)
func (_RollupChain *RollupChainSession) AggregatorAddress() (common.Address, error) {
	return _RollupChain.Contract.AggregatorAddress(&_RollupChain.CallOpts)
}

// AggregatorAddress is a free data retrieval call binding the contract method 0x380bbe53.
//
// Solidity: function aggregatorAddress() constant returns(address)
func (_RollupChain *RollupChainCallerSession) AggregatorAddress() (common.Address, error) {
	return _RollupChain.Contract.AggregatorAddress(&_RollupChain.CallOpts)
}

// Blocks is a free data retrieval call binding the contract method 0xf25b3f99.
//
// Solidity: function blocks(uint256 ) constant returns(bytes32 rootHash, uint256 blockSize)
func (_RollupChain *RollupChainCaller) Blocks(opts *bind.CallOpts, arg0 *big.Int) (struct {
	RootHash  [32]byte
	BlockSize *big.Int
}, error) {
	ret := new(struct {
		RootHash  [32]byte
		BlockSize *big.Int
	})
	out := ret
	err := _RollupChain.contract.Call(opts, out, "blocks", arg0)
	return *ret, err
}

// Blocks is a free data retrieval call binding the contract method 0xf25b3f99.
//
// Solidity: function blocks(uint256 ) constant returns(bytes32 rootHash, uint256 blockSize)
func (_RollupChain *RollupChainSession) Blocks(arg0 *big.Int) (struct {
	RootHash  [32]byte
	BlockSize *big.Int
}, error) {
	return _RollupChain.Contract.Blocks(&_RollupChain.CallOpts, arg0)
}

// Blocks is a free data retrieval call binding the contract method 0xf25b3f99.
//
// Solidity: function blocks(uint256 ) constant returns(bytes32 rootHash, uint256 blockSize)
func (_RollupChain *RollupChainCallerSession) Blocks(arg0 *big.Int) (struct {
	RootHash  [32]byte
	BlockSize *big.Int
}, error) {
	return _RollupChain.Contract.Blocks(&_RollupChain.CallOpts, arg0)
}

// CheckTransitionInclusion is a free data retrieval call binding the contract method 0x9a14f166.
//
// Solidity: function checkTransitionInclusion(DataTypesIncludedTransition _includedTransition) constant returns(bool)
func (_RollupChain *RollupChainCaller) CheckTransitionInclusion(opts *bind.CallOpts, _includedTransition DataTypesIncludedTransition) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "checkTransitionInclusion", _includedTransition)
	return *ret0, err
}

// CheckTransitionInclusion is a free data retrieval call binding the contract method 0x9a14f166.
//
// Solidity: function checkTransitionInclusion(DataTypesIncludedTransition _includedTransition) constant returns(bool)
func (_RollupChain *RollupChainSession) CheckTransitionInclusion(_includedTransition DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.CheckTransitionInclusion(&_RollupChain.CallOpts, _includedTransition)
}

// CheckTransitionInclusion is a free data retrieval call binding the contract method 0x9a14f166.
//
// Solidity: function checkTransitionInclusion(DataTypesIncludedTransition _includedTransition) constant returns(bool)
func (_RollupChain *RollupChainCallerSession) CheckTransitionInclusion(_includedTransition DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.CheckTransitionInclusion(&_RollupChain.CallOpts, _includedTransition)
}

// GetAccountInfoBytes is a free data retrieval call binding the contract method 0xc73ea882.
//
// Solidity: function getAccountInfoBytes(DataTypesAccountInfo _accountInfo) constant returns(bytes)
func (_RollupChain *RollupChainCaller) GetAccountInfoBytes(opts *bind.CallOpts, _accountInfo DataTypesAccountInfo) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "getAccountInfoBytes", _accountInfo)
	return *ret0, err
}

// GetAccountInfoBytes is a free data retrieval call binding the contract method 0xc73ea882.
//
// Solidity: function getAccountInfoBytes(DataTypesAccountInfo _accountInfo) constant returns(bytes)
func (_RollupChain *RollupChainSession) GetAccountInfoBytes(_accountInfo DataTypesAccountInfo) ([]byte, error) {
	return _RollupChain.Contract.GetAccountInfoBytes(&_RollupChain.CallOpts, _accountInfo)
}

// GetAccountInfoBytes is a free data retrieval call binding the contract method 0xc73ea882.
//
// Solidity: function getAccountInfoBytes(DataTypesAccountInfo _accountInfo) constant returns(bytes)
func (_RollupChain *RollupChainCallerSession) GetAccountInfoBytes(_accountInfo DataTypesAccountInfo) ([]byte, error) {
	return _RollupChain.Contract.GetAccountInfoBytes(&_RollupChain.CallOpts, _accountInfo)
}

// GetTransitionHash is a free data retrieval call binding the contract method 0xd866ba6f.
//
// Solidity: function getTransitionHash(bytes _transition) constant returns(bytes32)
func (_RollupChain *RollupChainCaller) GetTransitionHash(opts *bind.CallOpts, _transition []byte) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "getTransitionHash", _transition)
	return *ret0, err
}

// GetTransitionHash is a free data retrieval call binding the contract method 0xd866ba6f.
//
// Solidity: function getTransitionHash(bytes _transition) constant returns(bytes32)
func (_RollupChain *RollupChainSession) GetTransitionHash(_transition []byte) ([32]byte, error) {
	return _RollupChain.Contract.GetTransitionHash(&_RollupChain.CallOpts, _transition)
}

// GetTransitionHash is a free data retrieval call binding the contract method 0xd866ba6f.
//
// Solidity: function getTransitionHash(bytes _transition) constant returns(bytes32)
func (_RollupChain *RollupChainCallerSession) GetTransitionHash(_transition []byte) ([32]byte, error) {
	return _RollupChain.Contract.GetTransitionHash(&_RollupChain.CallOpts, _transition)
}

// VerifySequentialTransitions is a free data retrieval call binding the contract method 0xceb7aeb0.
//
// Solidity: function verifySequentialTransitions(DataTypesIncludedTransition _transition0, DataTypesIncludedTransition _transition1) constant returns(bool)
func (_RollupChain *RollupChainCaller) VerifySequentialTransitions(opts *bind.CallOpts, _transition0 DataTypesIncludedTransition, _transition1 DataTypesIncludedTransition) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "verifySequentialTransitions", _transition0, _transition1)
	return *ret0, err
}

// VerifySequentialTransitions is a free data retrieval call binding the contract method 0xceb7aeb0.
//
// Solidity: function verifySequentialTransitions(DataTypesIncludedTransition _transition0, DataTypesIncludedTransition _transition1) constant returns(bool)
func (_RollupChain *RollupChainSession) VerifySequentialTransitions(_transition0 DataTypesIncludedTransition, _transition1 DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.VerifySequentialTransitions(&_RollupChain.CallOpts, _transition0, _transition1)
}

// VerifySequentialTransitions is a free data retrieval call binding the contract method 0xceb7aeb0.
//
// Solidity: function verifySequentialTransitions(DataTypesIncludedTransition _transition0, DataTypesIncludedTransition _transition1) constant returns(bool)
func (_RollupChain *RollupChainCallerSession) VerifySequentialTransitions(_transition0 DataTypesIncludedTransition, _transition1 DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.VerifySequentialTransitions(&_RollupChain.CallOpts, _transition0, _transition1)
}

// GetStateRootsAndStorageSlots is a paid mutator transaction binding the contract method 0xbc128da9.
//
// Solidity: function getStateRootsAndStorageSlots(bytes _preStateTransition, bytes _invalidTransition) returns(bool, bytes32, bytes32, uint256[])
func (_RollupChain *RollupChainTransactor) GetStateRootsAndStorageSlots(opts *bind.TransactOpts, _preStateTransition []byte, _invalidTransition []byte) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "getStateRootsAndStorageSlots", _preStateTransition, _invalidTransition)
}

// GetStateRootsAndStorageSlots is a paid mutator transaction binding the contract method 0xbc128da9.
//
// Solidity: function getStateRootsAndStorageSlots(bytes _preStateTransition, bytes _invalidTransition) returns(bool, bytes32, bytes32, uint256[])
func (_RollupChain *RollupChainSession) GetStateRootsAndStorageSlots(_preStateTransition []byte, _invalidTransition []byte) (*types.Transaction, error) {
	return _RollupChain.Contract.GetStateRootsAndStorageSlots(&_RollupChain.TransactOpts, _preStateTransition, _invalidTransition)
}

// GetStateRootsAndStorageSlots is a paid mutator transaction binding the contract method 0xbc128da9.
//
// Solidity: function getStateRootsAndStorageSlots(bytes _preStateTransition, bytes _invalidTransition) returns(bool, bytes32, bytes32, uint256[])
func (_RollupChain *RollupChainTransactorSession) GetStateRootsAndStorageSlots(_preStateTransition []byte, _invalidTransition []byte) (*types.Transaction, error) {
	return _RollupChain.Contract.GetStateRootsAndStorageSlots(&_RollupChain.TransactOpts, _preStateTransition, _invalidTransition)
}

// ProveTransitionInvalid is a paid mutator transaction binding the contract method 0xb78167e5.
//
// Solidity: function proveTransitionInvalid(DataTypesIncludedTransition _preStateIncludedTransition, DataTypesIncludedTransition _invalidIncludedTransition, []DataTypesIncludedStorageSlot _transitionStorageSlots) returns()
func (_RollupChain *RollupChainTransactor) ProveTransitionInvalid(opts *bind.TransactOpts, _preStateIncludedTransition DataTypesIncludedTransition, _invalidIncludedTransition DataTypesIncludedTransition, _transitionStorageSlots []DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "proveTransitionInvalid", _preStateIncludedTransition, _invalidIncludedTransition, _transitionStorageSlots)
}

// ProveTransitionInvalid is a paid mutator transaction binding the contract method 0xb78167e5.
//
// Solidity: function proveTransitionInvalid(DataTypesIncludedTransition _preStateIncludedTransition, DataTypesIncludedTransition _invalidIncludedTransition, []DataTypesIncludedStorageSlot _transitionStorageSlots) returns()
func (_RollupChain *RollupChainSession) ProveTransitionInvalid(_preStateIncludedTransition DataTypesIncludedTransition, _invalidIncludedTransition DataTypesIncludedTransition, _transitionStorageSlots []DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.Contract.ProveTransitionInvalid(&_RollupChain.TransactOpts, _preStateIncludedTransition, _invalidIncludedTransition, _transitionStorageSlots)
}

// ProveTransitionInvalid is a paid mutator transaction binding the contract method 0xb78167e5.
//
// Solidity: function proveTransitionInvalid(DataTypesIncludedTransition _preStateIncludedTransition, DataTypesIncludedTransition _invalidIncludedTransition, []DataTypesIncludedStorageSlot _transitionStorageSlots) returns()
func (_RollupChain *RollupChainTransactorSession) ProveTransitionInvalid(_preStateIncludedTransition DataTypesIncludedTransition, _invalidIncludedTransition DataTypesIncludedTransition, _transitionStorageSlots []DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.Contract.ProveTransitionInvalid(&_RollupChain.TransactOpts, _preStateIncludedTransition, _invalidIncludedTransition, _transitionStorageSlots)
}

// SubmitBlock is a paid mutator transaction binding the contract method 0xd3250f3b.
//
// Solidity: function submitBlock(bytes[] _block) returns(bytes32)
func (_RollupChain *RollupChainTransactor) SubmitBlock(opts *bind.TransactOpts, _block [][]byte) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "submitBlock", _block)
}

// SubmitBlock is a paid mutator transaction binding the contract method 0xd3250f3b.
//
// Solidity: function submitBlock(bytes[] _block) returns(bytes32)
func (_RollupChain *RollupChainSession) SubmitBlock(_block [][]byte) (*types.Transaction, error) {
	return _RollupChain.Contract.SubmitBlock(&_RollupChain.TransactOpts, _block)
}

// SubmitBlock is a paid mutator transaction binding the contract method 0xd3250f3b.
//
// Solidity: function submitBlock(bytes[] _block) returns(bytes32)
func (_RollupChain *RollupChainTransactorSession) SubmitBlock(_block [][]byte) (*types.Transaction, error) {
	return _RollupChain.Contract.SubmitBlock(&_RollupChain.TransactOpts, _block)
}

// RollupChainDecodedTransitionIterator is returned from FilterDecodedTransition and is used to iterate over the raw logs and unpacked data for DecodedTransition events raised by the RollupChain contract.
type RollupChainDecodedTransitionIterator struct {
	Event *RollupChainDecodedTransition // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RollupChainDecodedTransitionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RollupChainDecodedTransition)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RollupChainDecodedTransition)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RollupChainDecodedTransitionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RollupChainDecodedTransitionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RollupChainDecodedTransition represents a DecodedTransition event raised by the RollupChain contract.
type RollupChainDecodedTransition struct {
	Success    bool
	ReturnData []byte
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterDecodedTransition is a free log retrieval operation binding the contract event 0x5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee3.
//
// Solidity: event DecodedTransition(bool success, bytes returnData)
func (_RollupChain *RollupChainFilterer) FilterDecodedTransition(opts *bind.FilterOpts) (*RollupChainDecodedTransitionIterator, error) {

	logs, sub, err := _RollupChain.contract.FilterLogs(opts, "DecodedTransition")
	if err != nil {
		return nil, err
	}
	return &RollupChainDecodedTransitionIterator{contract: _RollupChain.contract, event: "DecodedTransition", logs: logs, sub: sub}, nil
}

// WatchDecodedTransition is a free log subscription operation binding the contract event 0x5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee3.
//
// Solidity: event DecodedTransition(bool success, bytes returnData)
func (_RollupChain *RollupChainFilterer) WatchDecodedTransition(opts *bind.WatchOpts, sink chan<- *RollupChainDecodedTransition) (event.Subscription, error) {

	logs, sub, err := _RollupChain.contract.WatchLogs(opts, "DecodedTransition")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RollupChainDecodedTransition)
				if err := _RollupChain.contract.UnpackLog(event, "DecodedTransition", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDecodedTransition is a log parse operation binding the contract event 0x5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee3.
//
// Solidity: event DecodedTransition(bool success, bytes returnData)
func (_RollupChain *RollupChainFilterer) ParseDecodedTransition(log types.Log) (*RollupChainDecodedTransition, error) {
	event := new(RollupChainDecodedTransition)
	if err := _RollupChain.contract.UnpackLog(event, "DecodedTransition", log); err != nil {
		return nil, err
	}
	return event, nil
}

// RollupChainNewRollupBlockIterator is returned from FilterNewRollupBlock and is used to iterate over the raw logs and unpacked data for NewRollupBlock events raised by the RollupChain contract.
type RollupChainNewRollupBlockIterator struct {
	Event *RollupChainNewRollupBlock // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RollupChainNewRollupBlockIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RollupChainNewRollupBlock)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RollupChainNewRollupBlock)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RollupChainNewRollupBlockIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RollupChainNewRollupBlockIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RollupChainNewRollupBlock represents a NewRollupBlock event raised by the RollupChain contract.
type RollupChainNewRollupBlock struct {
	Block       [][]byte
	BlockNumber *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterNewRollupBlock is a free log retrieval operation binding the contract event 0xe6a728cf739c94a7ce1eae684da3d74934e160650f47aa6dd39f70dfe005aadf.
//
// Solidity: event NewRollupBlock(bytes[] block, uint256 blockNumber)
func (_RollupChain *RollupChainFilterer) FilterNewRollupBlock(opts *bind.FilterOpts) (*RollupChainNewRollupBlockIterator, error) {

	logs, sub, err := _RollupChain.contract.FilterLogs(opts, "NewRollupBlock")
	if err != nil {
		return nil, err
	}
	return &RollupChainNewRollupBlockIterator{contract: _RollupChain.contract, event: "NewRollupBlock", logs: logs, sub: sub}, nil
}

// WatchNewRollupBlock is a free log subscription operation binding the contract event 0xe6a728cf739c94a7ce1eae684da3d74934e160650f47aa6dd39f70dfe005aadf.
//
// Solidity: event NewRollupBlock(bytes[] block, uint256 blockNumber)
func (_RollupChain *RollupChainFilterer) WatchNewRollupBlock(opts *bind.WatchOpts, sink chan<- *RollupChainNewRollupBlock) (event.Subscription, error) {

	logs, sub, err := _RollupChain.contract.WatchLogs(opts, "NewRollupBlock")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RollupChainNewRollupBlock)
				if err := _RollupChain.contract.UnpackLog(event, "NewRollupBlock", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseNewRollupBlock is a log parse operation binding the contract event 0xe6a728cf739c94a7ce1eae684da3d74934e160650f47aa6dd39f70dfe005aadf.
//
// Solidity: event NewRollupBlock(bytes[] block, uint256 blockNumber)
func (_RollupChain *RollupChainFilterer) ParseNewRollupBlock(log types.Log) (*RollupChainNewRollupBlock, error) {
	event := new(RollupChainNewRollupBlock)
	if err := _RollupChain.contract.UnpackLog(event, "NewRollupBlock", log); err != nil {
		return nil, err
	}
	return event, nil
}

// RollupChainTransitionIterator is returned from FilterTransition and is used to iterate over the raw logs and unpacked data for Transition events raised by the RollupChain contract.
type RollupChainTransitionIterator struct {
	Event *RollupChainTransition // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RollupChainTransitionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RollupChainTransition)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RollupChainTransition)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RollupChainTransitionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RollupChainTransitionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RollupChainTransition represents a Transition event raised by the RollupChain contract.
type RollupChainTransition struct {
	Data []byte
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterTransition is a free log retrieval operation binding the contract event 0x034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c111.
//
// Solidity: event Transition(bytes data)
func (_RollupChain *RollupChainFilterer) FilterTransition(opts *bind.FilterOpts) (*RollupChainTransitionIterator, error) {

	logs, sub, err := _RollupChain.contract.FilterLogs(opts, "Transition")
	if err != nil {
		return nil, err
	}
	return &RollupChainTransitionIterator{contract: _RollupChain.contract, event: "Transition", logs: logs, sub: sub}, nil
}

// WatchTransition is a free log subscription operation binding the contract event 0x034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c111.
//
// Solidity: event Transition(bytes data)
func (_RollupChain *RollupChainFilterer) WatchTransition(opts *bind.WatchOpts, sink chan<- *RollupChainTransition) (event.Subscription, error) {

	logs, sub, err := _RollupChain.contract.WatchLogs(opts, "Transition")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RollupChainTransition)
				if err := _RollupChain.contract.UnpackLog(event, "Transition", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransition is a log parse operation binding the contract event 0x034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c111.
//
// Solidity: event Transition(bytes data)
func (_RollupChain *RollupChainFilterer) ParseTransition(log types.Log) (*RollupChainTransition, error) {
	event := new(RollupChainTransition)
	if err := _RollupChain.contract.UnpackLog(event, "Transition", log); err != nil {
		return nil, err
	}
	return event, nil
}
