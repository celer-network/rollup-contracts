// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package rollup

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// DataTypesAccountInfo is an auto generated low-level Go binding around an user-defined struct.
type DataTypesAccountInfo struct {
	Account  common.Address
	Balances []*big.Int
	Nonces   []*big.Int
}

// DataTypesIncludedStorageSlot is an auto generated low-level Go binding around an user-defined struct.
type DataTypesIncludedStorageSlot struct {
	StorageSlot DataTypesStorageSlot
	Siblings    [][32]byte
}

// DataTypesIncludedTransition is an auto generated low-level Go binding around an user-defined struct.
type DataTypesIncludedTransition struct {
	Transition     []byte
	InclusionProof DataTypesTransitionInclusionProof
}

// DataTypesStorageSlot is an auto generated low-level Go binding around an user-defined struct.
type DataTypesStorageSlot struct {
	SlotIndex *big.Int
	Value     DataTypesAccountInfo
}

// DataTypesTransitionInclusionProof is an auto generated low-level Go binding around an user-defined struct.
type DataTypesTransitionInclusionProof struct {
	BlockNumber     *big.Int
	TransitionIndex *big.Int
	Siblings        [][32]byte
}

// RollupChainABI is the input ABI used to generate the binding from.
const RollupChainABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_transitionEvaluatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rollupMerkleUtilsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenRegistryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aggregatorAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"DecodedTransition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"block\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"NewRollupBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transition\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"ZERO_BYTES32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blocks\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"rootHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"blockSize\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_includedTransition\",\"type\":\"tuple\"}],\"name\":\"checkTransitionInclusion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nonces\",\"type\":\"uint256[]\"}],\"internalType\":\"structDataTypes.AccountInfo\",\"name\":\"_accountInfo\",\"type\":\"tuple\"}],\"name\":\"getAccountInfoBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_preStateTransition\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_invalidTransition\",\"type\":\"bytes\"}],\"name\":\"getStateRootsAndStorageSlots\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_transition\",\"type\":\"bytes\"}],\"name\":\"getTransitionHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_preStateIncludedTransition\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_invalidIncludedTransition\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nonces\",\"type\":\"uint256[]\"}],\"internalType\":\"structDataTypes.AccountInfo\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.StorageSlot\",\"name\":\"storageSlot\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.IncludedStorageSlot[]\",\"name\":\"_transitionStorageSlots\",\"type\":\"tuple[]\"}],\"name\":\"proveTransitionInvalid\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_block\",\"type\":\"bytes[]\"}],\"name\":\"submitBlock\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_transition0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_transition1\",\"type\":\"tuple\"}],\"name\":\"verifySequentialTransitions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// RollupChainBin is the compiled bytecode used for deploying new contracts.
var RollupChainBin = "0x60806040523480156200001157600080fd5b506040516200302a3803806200302a83398181016040526200003791908101906200015b565b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505062000215565b6000815190506200015581620001fb565b92915050565b600080600080608085870312156200017257600080fd5b6000620001828782880162000144565b9450506020620001958782880162000144565b9350506040620001a88782880162000144565b9250506060620001bb8782880162000144565b91505092959194509250565b6000620001d482620001db565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200020681620001c7565b81146200021257600080fd5b50565b612e0580620002256000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063c73ea88211610066578063c73ea88214610135578063ceb7aeb014610165578063d3250f3b14610195578063d866ba6f146101c5578063f25b3f99146101f557610093565b8063069321b0146100985780639a14f166146100b6578063b78167e5146100e6578063bc128da914610102575b600080fd5b6100a0610226565b6040516100ad919061276a565b60405180910390f35b6100d060048036036100cb9190810190611c1b565b61022d565b6040516100dd91906126d3565b60405180910390f35b61010060048036036100fb9190810190611cc8565b61032c565b005b61011c60048036036101179190810190611b6e565b610885565b60405161012c94939291906126ee565b60405180910390f35b61014f600480360361014a9190810190611bda565b610c28565b60405161015c9190612825565b60405180910390f35b61017f600480360361017a9190810190611c5c565b610ce5565b60405161018c91906126d3565b60405180910390f35b6101af60048036036101aa9190810190611a42565b610f0b565b6040516101bc919061276a565b60405180910390f35b6101df60048036036101da9190810190611b2d565b6111b6565b6040516101ec919061276a565b60405180910390f35b61020f600480360361020a9190810190611d5f565b6111c7565b60405161021d9291906127d8565b60405180910390f35b6000801b81565b60008060038360200151600001518154811061024557fe5b90600052602060002090600202016000015490506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166330d90a768386600001518760200151602001518860200151604001516040518563ffffffff1660e01b81526004016102d09493929190612785565b60206040518083038186803b1580156102e857600080fd5b505afa1580156102fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103209190810190611a87565b90508092505050919050565b6060836000015190506060836000015190506103488585610ce5565b506000806000606061035a8686610885565b935093509350935083610383576103788860200151600001516111f8565b505050505050610880565b60008090505b875181101561040f5781818151811061039e57fe5b60200260200101518882815181106103b257fe5b6020026020010151600001516000015114610402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f9906129c3565b60405180910390fd5b8080600101915050610389565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c22b6d98460206040518363ffffffff1660e01b815260040161046e9291906127d8565b600060405180830381600087803b15801561048857600080fd5b505af115801561049c573d6000803e3d6000fd5b5050505060008090505b87518110156104d8576104cb8882815181106104be57fe5b602002602001015161124a565b80806001019150506104a6565b50606060008090505b8851811015610526578881815181106104f657fe5b60200260200101516000015182828151811061050e57fe5b602002602001018190525080806001019150506104e1565b5060606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632868bc60905060e01b88846040516024016105b6929190612847565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516106209190612606565b6000604051808303816000865af19150503d806000811461065d576040519150601f19603f3d011682016040523d82523d6000602084013e610662565b606091505b5080925081975050508561068e576106818a60200151600001516111f8565b5050505050505050610880565b6060818060200190516106a49190810190611a01565b905060008090505b8a5181101561077f57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663272684b58383815181106106ff57fe5b60200260200101518d848151811061071357fe5b602002602001015160000151600001516040518363ffffffff1660e01b81526004016107409291906127d8565b600060405180830381600087803b15801561075a57600080fd5b505af115801561076e573d6000803e3d6000fd5b5050505080806001019150506106ac565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635ca1e1656040518163ffffffff1660e01b815260040160206040518083038186803b1580156107e857600080fd5b505afa1580156107fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108209190810190611ab0565b8514610845576108378b60200151600001516111f8565b505050505050505050610880565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087790612983565b60405180910390fd5b505050565b60008060006060600060606000806060806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdce7919905060e01b8d6040516024016109219190612825565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161098b9190612606565b6000604051808303816000865af19150503d80600081146109c8576040519150601f19603f3d011682016040523d82523d6000602084013e6109cd565b606091505b5080965081975050507f5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee38686604051610a0792919061273a565b60405180910390a185610a4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4690612903565b60405180910390fd5b84806020019051610a639190810190611ad9565b80905080935081955050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdce7919905060e01b8c604051602401610af99190612825565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610b639190612606565b6000604051808303816000865af19150503d8060008114610ba0576040519150601f19603f3d011682016040523d82523d6000602084013e610ba5565b606091505b5080965081975050507f5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee38686604051610bdf92919061273a565b60405180910390a18515610c0d5784806020019051610c019190810190611ad9565b80905080925081945050505b85848483995099509950995050505050505092959194509250565b6060600073ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff16148015610c6f57506000826020015151145b8015610c8057506000826040015151145b15610cad576000604051602001610c97919061261d565b6040516020818303038152906040529050610ce0565b816000015182602001518360400151604051602001610cce93929190612638565b60405160208183030381529060405290505b919050565b6000610cf08361022d565b610d2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2690612943565b60405180910390fd5b610d388261022d565b610d77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6e90612923565b60405180910390fd5b8160200151600001518360200151600001511415610ded5760018260200151602001510383602001516020015114610de4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddb906129a3565b60405180910390fd5b60019050610f05565b60018260200151600001510383602001516000015114610e42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3990612963565b60405180910390fd5b6001600384602001516000015181548110610e5957fe5b9060005260206000209060020201600101540383602001516020015114610eb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eac906128e3565b60405180910390fd5b600082602001516020015114610f00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef7906129e3565b60405180910390fd5b600190505b92915050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f94906128c3565b60405180910390fd5b60008090505b83839050811015611052577f034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c111848483818110610fdb57fe5b9050602002810180356001602003833603038112610ff857600080fd5b8083019250508135905060208201915067ffffffffffffffff81111561101d57600080fd5b60018102360382131561102f57600080fd5b60405161103d929190612801565b60405180910390a18080600101915050610fa3565b506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340ff34ef85856040518363ffffffff1660e01b81526004016110b292919061267d565b60206040518083038186803b1580156110ca57600080fd5b505afa1580156110de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111029190810190611ab0565b905061110c611300565b60405180604001604052808381526020018686905081525090506003819080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050507fe6a728cf739c94a7ce1eae684da3d74934e160650f47aa6dd39f70dfe005aadf85856003805490506040516111a3939291906126a1565b60405180910390a1819250505092915050565b600081805190602001209050919050565b600381815481106111d457fe5b90600052602060002090600202016000915090508060000154908060010154905082565b60008190505b600380549050811015611246576003818154811061121857fe5b90600052602060002090600202016000808201600090556001820160009055505080806001019150506111fe565b5050565b606061125d826000015160200151610c28565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634359356d8284600001516000015185602001516040518463ffffffff1660e01b81526004016112ca9392919061287e565b600060405180830381600087803b1580156112e457600080fd5b505af11580156112f8573d6000803e3d6000fd5b505050505050565b604051806040016040528060008019168152602001600081525090565b60008135905061132c81612d66565b92915050565b600082601f83011261134357600080fd5b813561135661135182612a30565b612a03565b9150818183526020840193506020810190508385602084028201111561137b57600080fd5b60005b838110156113ab57816113918882611611565b84526020840193506020830192505060018101905061137e565b5050505092915050565b600082601f8301126113c657600080fd5b81516113d96113d482612a30565b612a03565b915081818352602084019350602081019050838560208402820111156113fe57600080fd5b60005b8381101561142e57816114148882611626565b845260208401935060208301925050600181019050611401565b5050505092915050565b60008083601f84011261144a57600080fd5b8235905067ffffffffffffffff81111561146357600080fd5b60208301915083602082028301111561147b57600080fd5b9250929050565b600082601f83011261149357600080fd5b81356114a66114a182612a58565b612a03565b9150818183526020840193506020810190508360005b838110156114ec57813586016114d28882611803565b8452602084019350602083019250506001810190506114bc565b5050505092915050565b600082601f83011261150757600080fd5b813561151a61151582612a80565b612a03565b9150818183526020840193506020810190508385602084028201111561153f57600080fd5b60005b8381101561156f578161155588826119d7565b845260208401935060208301925050600181019050611542565b5050505092915050565b600082601f83011261158a57600080fd5b815161159d61159882612a80565b612a03565b915081818352602084019350602081019050838560208402820111156115c257600080fd5b60005b838110156115f257816115d888826119ec565b8452602084019350602083019250506001810190506115c5565b5050505092915050565b60008151905061160b81612d7d565b92915050565b60008135905061162081612d94565b92915050565b60008151905061163581612d94565b92915050565b600082601f83011261164c57600080fd5b813561165f61165a82612aa8565b612a03565b9150808252602083016020830185838301111561167b57600080fd5b611686838284612d09565b50505092915050565b600082601f8301126116a057600080fd5b81356116b36116ae82612ad4565b612a03565b915080825260208301602083018583830111156116cf57600080fd5b6116da838284612d09565b50505092915050565b6000606082840312156116f557600080fd5b6116ff6060612a03565b9050600061170f8482850161131d565b600083015250602082013567ffffffffffffffff81111561172f57600080fd5b61173b848285016114f6565b602083015250604082013567ffffffffffffffff81111561175b57600080fd5b611767848285016114f6565b60408301525092915050565b60006060828403121561178557600080fd5b61178f6060612a03565b9050600061179f8482850161131d565b600083015250602082013567ffffffffffffffff8111156117bf57600080fd5b6117cb848285016114f6565b602083015250604082013567ffffffffffffffff8111156117eb57600080fd5b6117f7848285016114f6565b60408301525092915050565b60006040828403121561181557600080fd5b61181f6040612a03565b9050600082013567ffffffffffffffff81111561183b57600080fd5b611847848285016118fb565b600083015250602082013567ffffffffffffffff81111561186757600080fd5b61187384828501611332565b60208301525092915050565b60006040828403121561189157600080fd5b61189b6040612a03565b9050600082013567ffffffffffffffff8111156118b757600080fd5b6118c38482850161163b565b600083015250602082013567ffffffffffffffff8111156118e357600080fd5b6118ef8482850161195f565b60208301525092915050565b60006040828403121561190d57600080fd5b6119176040612a03565b90506000611927848285016119d7565b600083015250602082013567ffffffffffffffff81111561194757600080fd5b611953848285016116e3565b60208301525092915050565b60006060828403121561197157600080fd5b61197b6060612a03565b9050600061198b848285016119d7565b600083015250602061199f848285016119d7565b602083015250604082013567ffffffffffffffff8111156119bf57600080fd5b6119cb84828501611332565b60408301525092915050565b6000813590506119e681612dab565b92915050565b6000815190506119fb81612dab565b92915050565b600060208284031215611a1357600080fd5b600082015167ffffffffffffffff811115611a2d57600080fd5b611a39848285016113b5565b91505092915050565b60008060208385031215611a5557600080fd5b600083013567ffffffffffffffff811115611a6f57600080fd5b611a7b85828601611438565b92509250509250929050565b600060208284031215611a9957600080fd5b6000611aa7848285016115fc565b91505092915050565b600060208284031215611ac257600080fd5b6000611ad084828501611626565b91505092915050565b60008060408385031215611aec57600080fd5b6000611afa85828601611626565b925050602083015167ffffffffffffffff811115611b1757600080fd5b611b2385828601611579565b9150509250929050565b600060208284031215611b3f57600080fd5b600082013567ffffffffffffffff811115611b5957600080fd5b611b658482850161168f565b91505092915050565b60008060408385031215611b8157600080fd5b600083013567ffffffffffffffff811115611b9b57600080fd5b611ba78582860161168f565b925050602083013567ffffffffffffffff811115611bc457600080fd5b611bd08582860161168f565b9150509250929050565b600060208284031215611bec57600080fd5b600082013567ffffffffffffffff811115611c0657600080fd5b611c1284828501611773565b91505092915050565b600060208284031215611c2d57600080fd5b600082013567ffffffffffffffff811115611c4757600080fd5b611c538482850161187f565b91505092915050565b60008060408385031215611c6f57600080fd5b600083013567ffffffffffffffff811115611c8957600080fd5b611c958582860161187f565b925050602083013567ffffffffffffffff811115611cb257600080fd5b611cbe8582860161187f565b9150509250929050565b600080600060608486031215611cdd57600080fd5b600084013567ffffffffffffffff811115611cf757600080fd5b611d038682870161187f565b935050602084013567ffffffffffffffff811115611d2057600080fd5b611d2c8682870161187f565b925050604084013567ffffffffffffffff811115611d4957600080fd5b611d5586828701611482565b9150509250925092565b600060208284031215611d7157600080fd5b6000611d7f848285016119d7565b91505092915050565b6000611d948383612072565b60208301905092915050565b6000611dad848484612090565b90509392505050565b6000611dc28383612594565b905092915050565b6000611dd683836125d1565b60208301905092915050565b611deb81612cb7565b82525050565b611dfa81612cb7565b82525050565b6000611e0b82612b4a565b611e158185612bcd565b9350611e2083612b00565b8060005b83811015611e51578151611e388882611d88565b9750611e4383612b8c565b925050600181019050611e24565b5085935050505092915050565b6000611e6a8385612bde565b935083602084028501611e7c84612b10565b8060005b87811015611ec2578484038952611e978284612c60565b611ea2868284611da0565b9550611ead84612b99565b935060208b019a505050600181019050611e80565b50829750879450505050509392505050565b6000611edf82612b55565b611ee98185612bef565b935083602082028501611efb85612b1a565b8060005b85811015611f375784840389528151611f188582611db6565b9450611f2383612ba6565b925060208a01995050600181019050611eff565b50829750879550505050505092915050565b6000611f5482612b6b565b611f5e8185612c11565b9350611f6983612b3a565b8060005b83811015611f9a578151611f818882611dca565b9750611f8c83612bc0565b925050600181019050611f6d565b5085935050505092915050565b6000611fb282612b60565b611fbc8185612c00565b9350611fc783612b2a565b8060005b83811015611ff8578151611fdf8882611dca565b9750611fea83612bb3565b925050600181019050611fcb565b5085935050505092915050565b600061201082612b60565b61201a8185612c11565b935061202583612b2a565b8060005b8381101561205657815161203d8882611dca565b975061204883612bb3565b925050600181019050612029565b5085935050505092915050565b61206c81612cc9565b82525050565b61207b81612cd5565b82525050565b61208a81612cd5565b82525050565b600061209c8385612c22565b93506120a9838584612d09565b6120b283612d55565b840190509392505050565b60006120c98385612c33565b93506120d6838584612d09565b6120df83612d55565b840190509392505050565b60006120f582612b81565b6120ff8185612c33565b935061210f818560208601612d18565b61211881612d55565b840191505092915050565b600061212e82612b81565b6121388185612c44565b9350612148818560208601612d18565b80840191505092915050565b600061215f82612b76565b6121698185612c33565b9350612179818560208601612d18565b61218281612d55565b840191505092915050565b600061219a602583612c4f565b91507f4f6e6c79207468652061676772656761746f72206d6179207375626d6974206260008301527f6c6f636b730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612200602783612c4f565b91507f5f7472616e736974696f6e30206d757374206265206c61737420696e2069747360008301527f20626c6f636b2e000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612266604083612c4f565b91507f496620746865207072655374617465526f6f7420697320696e76616c69642c2060008301527f7468656e2070726f7665207468617420696e76616c696420696e7374656164216020830152604082019050919050565b60006122cc602783612c4f565b91507f546865207365636f6e64207472616e736974696f6e206d75737420626520696e60008301527f636c7564656421000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612332602683612c4f565b91507f546865206669727374207472616e736974696f6e206d75737420626520696e6360008301527f6c756465642100000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612398602a83612c4f565b91507f426c6f636b73206d757374206265206f6e6520616674657220616e6f7468657260008301527f206f7220657175616c2e000000000000000000000000000000000000000000006020830152604082019050919050565b60006123fe601283612c4f565b91507f4e6f2066726175642064657465637465642100000000000000000000000000006000830152602082019050919050565b600061243e601f83612c4f565b91507f5472616e736974696f6e73206d7573742062652073657175656e7469616c21006000830152602082019050919050565b600061247e602983612c4f565b91507f537570706c6965642073746f7261676520736c6f7420696e646578206973206960008301527f6e636f72726563742100000000000000000000000000000000000000000000006020830152604082019050919050565b60006124e4602883612c4f565b91507f5f7472616e736974696f6e30206d75737420626520666972737420696e20697460008301527f7320626c6f636b2e0000000000000000000000000000000000000000000000006020830152604082019050919050565b60006060830160008301516125556000860182611de2565b506020830151848203602086015261256d8282611fa7565b915050604083015184820360408601526125878282611fa7565b9150508091505092915050565b60006040830160008301516125ac60008601826125d1565b50602083015184820360208601526125c4828261253d565b9150508091505092915050565b6125da81612cff565b82525050565b6125e981612cff565b82525050565b6126006125fb82612cff565b612d4b565b82525050565b60006126128284612123565b915081905092915050565b600061262982846125ef565b60208201915081905092915050565b600060608201905061264d6000830186611df1565b818103602083015261265f8185612005565b905081810360408301526126738184612005565b9050949350505050565b60006020820190508181036000830152612698818486611e5e565b90509392505050565b600060408201905081810360008301526126bc818587611e5e565b90506126cb60208301846125e0565b949350505050565b60006020820190506126e86000830184612063565b92915050565b60006080820190506127036000830187612063565b6127106020830186612081565b61271d6040830185612081565b818103606083015261272f8184611f49565b905095945050505050565b600060408201905061274f6000830185612063565b818103602083015261276181846120ea565b90509392505050565b600060208201905061277f6000830184612081565b92915050565b600060808201905061279a6000830187612081565b81810360208301526127ac8186612154565b90506127bb60408301856125e0565b81810360608301526127cd8184611e00565b905095945050505050565b60006040820190506127ed6000830185612081565b6127fa60208301846125e0565b9392505050565b6000602082019050818103600083015261281c8184866120bd565b90509392505050565b6000602082019050818103600083015261283f81846120ea565b905092915050565b6000604082019050818103600083015261286181856120ea565b905081810360208301526128758184611ed4565b90509392505050565b6000606082019050818103600083015261289881866120ea565b90506128a760208301856125e0565b81810360408301526128b98184611e00565b9050949350505050565b600060208201905081810360008301526128dc8161218d565b9050919050565b600060208201905081810360008301526128fc816121f3565b9050919050565b6000602082019050818103600083015261291c81612259565b9050919050565b6000602082019050818103600083015261293c816122bf565b9050919050565b6000602082019050818103600083015261295c81612325565b9050919050565b6000602082019050818103600083015261297c8161238b565b9050919050565b6000602082019050818103600083015261299c816123f1565b9050919050565b600060208201905081810360008301526129bc81612431565b9050919050565b600060208201905081810360008301526129dc81612471565b9050919050565b600060208201905081810360008301526129fc816124d7565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715612a2657600080fd5b8060405250919050565b600067ffffffffffffffff821115612a4757600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115612a6f57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115612a9757600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115612abf57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115612aeb57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60008083356001602003843603038112612c7957600080fd5b83810192508235915060208301925067ffffffffffffffff821115612c9d57600080fd5b600182023603841315612caf57600080fd5b509250929050565b6000612cc282612cdf565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612d36578082015181840152602081019050612d1b565b83811115612d45576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b612d6f81612cb7565b8114612d7a57600080fd5b50565b612d8681612cc9565b8114612d9157600080fd5b50565b612d9d81612cd5565b8114612da857600080fd5b50565b612db481612cff565b8114612dbf57600080fd5b5056fea365627a7a7231582048dbc03d28f0211c17264b6fdeb6e8d1afd4cce7b8bd4b23237d013125d5ba9c6c6578706572696d656e74616cf564736f6c634300050f0040"

// DeployRollupChain deploys a new Ethereum contract, binding an instance of RollupChain to it.
func DeployRollupChain(auth *bind.TransactOpts, backend bind.ContractBackend, _transitionEvaluatorAddress common.Address, _rollupMerkleUtilsAddress common.Address, _tokenRegistryAddress common.Address, _aggregatorAddress common.Address) (common.Address, *types.Transaction, *RollupChain, error) {
	parsed, err := abi.JSON(strings.NewReader(RollupChainABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(RollupChainBin), backend, _transitionEvaluatorAddress, _rollupMerkleUtilsAddress, _tokenRegistryAddress, _aggregatorAddress)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &RollupChain{RollupChainCaller: RollupChainCaller{contract: contract}, RollupChainTransactor: RollupChainTransactor{contract: contract}, RollupChainFilterer: RollupChainFilterer{contract: contract}}, nil
}

// RollupChain is an auto generated Go binding around an Ethereum contract.
type RollupChain struct {
	RollupChainCaller     // Read-only binding to the contract
	RollupChainTransactor // Write-only binding to the contract
	RollupChainFilterer   // Log filterer for contract events
}

// RollupChainCaller is an auto generated read-only Go binding around an Ethereum contract.
type RollupChainCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupChainTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RollupChainTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupChainFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RollupChainFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupChainSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RollupChainSession struct {
	Contract     *RollupChain      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// RollupChainCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RollupChainCallerSession struct {
	Contract *RollupChainCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// RollupChainTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RollupChainTransactorSession struct {
	Contract     *RollupChainTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// RollupChainRaw is an auto generated low-level Go binding around an Ethereum contract.
type RollupChainRaw struct {
	Contract *RollupChain // Generic contract binding to access the raw methods on
}

// RollupChainCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RollupChainCallerRaw struct {
	Contract *RollupChainCaller // Generic read-only contract binding to access the raw methods on
}

// RollupChainTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RollupChainTransactorRaw struct {
	Contract *RollupChainTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRollupChain creates a new instance of RollupChain, bound to a specific deployed contract.
func NewRollupChain(address common.Address, backend bind.ContractBackend) (*RollupChain, error) {
	contract, err := bindRollupChain(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &RollupChain{RollupChainCaller: RollupChainCaller{contract: contract}, RollupChainTransactor: RollupChainTransactor{contract: contract}, RollupChainFilterer: RollupChainFilterer{contract: contract}}, nil
}

// NewRollupChainCaller creates a new read-only instance of RollupChain, bound to a specific deployed contract.
func NewRollupChainCaller(address common.Address, caller bind.ContractCaller) (*RollupChainCaller, error) {
	contract, err := bindRollupChain(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RollupChainCaller{contract: contract}, nil
}

// NewRollupChainTransactor creates a new write-only instance of RollupChain, bound to a specific deployed contract.
func NewRollupChainTransactor(address common.Address, transactor bind.ContractTransactor) (*RollupChainTransactor, error) {
	contract, err := bindRollupChain(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RollupChainTransactor{contract: contract}, nil
}

// NewRollupChainFilterer creates a new log filterer instance of RollupChain, bound to a specific deployed contract.
func NewRollupChainFilterer(address common.Address, filterer bind.ContractFilterer) (*RollupChainFilterer, error) {
	contract, err := bindRollupChain(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RollupChainFilterer{contract: contract}, nil
}

// bindRollupChain binds a generic wrapper to an already deployed contract.
func bindRollupChain(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RollupChainABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RollupChain *RollupChainRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RollupChain.Contract.RollupChainCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RollupChain *RollupChainRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RollupChain.Contract.RollupChainTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RollupChain *RollupChainRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RollupChain.Contract.RollupChainTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RollupChain *RollupChainCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RollupChain.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RollupChain *RollupChainTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RollupChain.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RollupChain *RollupChainTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RollupChain.Contract.contract.Transact(opts, method, params...)
}

// ZEROBYTES32 is a free data retrieval call binding the contract method 0x069321b0.
//
// Solidity: function ZERO_BYTES32() constant returns(bytes32)
func (_RollupChain *RollupChainCaller) ZEROBYTES32(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "ZERO_BYTES32")
	return *ret0, err
}

// ZEROBYTES32 is a free data retrieval call binding the contract method 0x069321b0.
//
// Solidity: function ZERO_BYTES32() constant returns(bytes32)
func (_RollupChain *RollupChainSession) ZEROBYTES32() ([32]byte, error) {
	return _RollupChain.Contract.ZEROBYTES32(&_RollupChain.CallOpts)
}

// ZEROBYTES32 is a free data retrieval call binding the contract method 0x069321b0.
//
// Solidity: function ZERO_BYTES32() constant returns(bytes32)
func (_RollupChain *RollupChainCallerSession) ZEROBYTES32() ([32]byte, error) {
	return _RollupChain.Contract.ZEROBYTES32(&_RollupChain.CallOpts)
}

// Blocks is a free data retrieval call binding the contract method 0xf25b3f99.
//
// Solidity: function blocks(uint256 ) constant returns(bytes32 rootHash, uint256 blockSize)
func (_RollupChain *RollupChainCaller) Blocks(opts *bind.CallOpts, arg0 *big.Int) (struct {
	RootHash  [32]byte
	BlockSize *big.Int
}, error) {
	ret := new(struct {
		RootHash  [32]byte
		BlockSize *big.Int
	})
	out := ret
	err := _RollupChain.contract.Call(opts, out, "blocks", arg0)
	return *ret, err
}

// Blocks is a free data retrieval call binding the contract method 0xf25b3f99.
//
// Solidity: function blocks(uint256 ) constant returns(bytes32 rootHash, uint256 blockSize)
func (_RollupChain *RollupChainSession) Blocks(arg0 *big.Int) (struct {
	RootHash  [32]byte
	BlockSize *big.Int
}, error) {
	return _RollupChain.Contract.Blocks(&_RollupChain.CallOpts, arg0)
}

// Blocks is a free data retrieval call binding the contract method 0xf25b3f99.
//
// Solidity: function blocks(uint256 ) constant returns(bytes32 rootHash, uint256 blockSize)
func (_RollupChain *RollupChainCallerSession) Blocks(arg0 *big.Int) (struct {
	RootHash  [32]byte
	BlockSize *big.Int
}, error) {
	return _RollupChain.Contract.Blocks(&_RollupChain.CallOpts, arg0)
}

// CheckTransitionInclusion is a free data retrieval call binding the contract method 0x9a14f166.
//
// Solidity: function checkTransitionInclusion(DataTypesIncludedTransition _includedTransition) constant returns(bool)
func (_RollupChain *RollupChainCaller) CheckTransitionInclusion(opts *bind.CallOpts, _includedTransition DataTypesIncludedTransition) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "checkTransitionInclusion", _includedTransition)
	return *ret0, err
}

// CheckTransitionInclusion is a free data retrieval call binding the contract method 0x9a14f166.
//
// Solidity: function checkTransitionInclusion(DataTypesIncludedTransition _includedTransition) constant returns(bool)
func (_RollupChain *RollupChainSession) CheckTransitionInclusion(_includedTransition DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.CheckTransitionInclusion(&_RollupChain.CallOpts, _includedTransition)
}

// CheckTransitionInclusion is a free data retrieval call binding the contract method 0x9a14f166.
//
// Solidity: function checkTransitionInclusion(DataTypesIncludedTransition _includedTransition) constant returns(bool)
func (_RollupChain *RollupChainCallerSession) CheckTransitionInclusion(_includedTransition DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.CheckTransitionInclusion(&_RollupChain.CallOpts, _includedTransition)
}

// GetAccountInfoBytes is a free data retrieval call binding the contract method 0xc73ea882.
//
// Solidity: function getAccountInfoBytes(DataTypesAccountInfo _accountInfo) constant returns(bytes)
func (_RollupChain *RollupChainCaller) GetAccountInfoBytes(opts *bind.CallOpts, _accountInfo DataTypesAccountInfo) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "getAccountInfoBytes", _accountInfo)
	return *ret0, err
}

// GetAccountInfoBytes is a free data retrieval call binding the contract method 0xc73ea882.
//
// Solidity: function getAccountInfoBytes(DataTypesAccountInfo _accountInfo) constant returns(bytes)
func (_RollupChain *RollupChainSession) GetAccountInfoBytes(_accountInfo DataTypesAccountInfo) ([]byte, error) {
	return _RollupChain.Contract.GetAccountInfoBytes(&_RollupChain.CallOpts, _accountInfo)
}

// GetAccountInfoBytes is a free data retrieval call binding the contract method 0xc73ea882.
//
// Solidity: function getAccountInfoBytes(DataTypesAccountInfo _accountInfo) constant returns(bytes)
func (_RollupChain *RollupChainCallerSession) GetAccountInfoBytes(_accountInfo DataTypesAccountInfo) ([]byte, error) {
	return _RollupChain.Contract.GetAccountInfoBytes(&_RollupChain.CallOpts, _accountInfo)
}

// GetTransitionHash is a free data retrieval call binding the contract method 0xd866ba6f.
//
// Solidity: function getTransitionHash(bytes _transition) constant returns(bytes32)
func (_RollupChain *RollupChainCaller) GetTransitionHash(opts *bind.CallOpts, _transition []byte) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "getTransitionHash", _transition)
	return *ret0, err
}

// GetTransitionHash is a free data retrieval call binding the contract method 0xd866ba6f.
//
// Solidity: function getTransitionHash(bytes _transition) constant returns(bytes32)
func (_RollupChain *RollupChainSession) GetTransitionHash(_transition []byte) ([32]byte, error) {
	return _RollupChain.Contract.GetTransitionHash(&_RollupChain.CallOpts, _transition)
}

// GetTransitionHash is a free data retrieval call binding the contract method 0xd866ba6f.
//
// Solidity: function getTransitionHash(bytes _transition) constant returns(bytes32)
func (_RollupChain *RollupChainCallerSession) GetTransitionHash(_transition []byte) ([32]byte, error) {
	return _RollupChain.Contract.GetTransitionHash(&_RollupChain.CallOpts, _transition)
}

// VerifySequentialTransitions is a free data retrieval call binding the contract method 0xceb7aeb0.
//
// Solidity: function verifySequentialTransitions(DataTypesIncludedTransition _transition0, DataTypesIncludedTransition _transition1) constant returns(bool)
func (_RollupChain *RollupChainCaller) VerifySequentialTransitions(opts *bind.CallOpts, _transition0 DataTypesIncludedTransition, _transition1 DataTypesIncludedTransition) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "verifySequentialTransitions", _transition0, _transition1)
	return *ret0, err
}

// VerifySequentialTransitions is a free data retrieval call binding the contract method 0xceb7aeb0.
//
// Solidity: function verifySequentialTransitions(DataTypesIncludedTransition _transition0, DataTypesIncludedTransition _transition1) constant returns(bool)
func (_RollupChain *RollupChainSession) VerifySequentialTransitions(_transition0 DataTypesIncludedTransition, _transition1 DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.VerifySequentialTransitions(&_RollupChain.CallOpts, _transition0, _transition1)
}

// VerifySequentialTransitions is a free data retrieval call binding the contract method 0xceb7aeb0.
//
// Solidity: function verifySequentialTransitions(DataTypesIncludedTransition _transition0, DataTypesIncludedTransition _transition1) constant returns(bool)
func (_RollupChain *RollupChainCallerSession) VerifySequentialTransitions(_transition0 DataTypesIncludedTransition, _transition1 DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.VerifySequentialTransitions(&_RollupChain.CallOpts, _transition0, _transition1)
}

// GetStateRootsAndStorageSlots is a paid mutator transaction binding the contract method 0xbc128da9.
//
// Solidity: function getStateRootsAndStorageSlots(bytes _preStateTransition, bytes _invalidTransition) returns(bool, bytes32, bytes32, uint256[])
func (_RollupChain *RollupChainTransactor) GetStateRootsAndStorageSlots(opts *bind.TransactOpts, _preStateTransition []byte, _invalidTransition []byte) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "getStateRootsAndStorageSlots", _preStateTransition, _invalidTransition)
}

// GetStateRootsAndStorageSlots is a paid mutator transaction binding the contract method 0xbc128da9.
//
// Solidity: function getStateRootsAndStorageSlots(bytes _preStateTransition, bytes _invalidTransition) returns(bool, bytes32, bytes32, uint256[])
func (_RollupChain *RollupChainSession) GetStateRootsAndStorageSlots(_preStateTransition []byte, _invalidTransition []byte) (*types.Transaction, error) {
	return _RollupChain.Contract.GetStateRootsAndStorageSlots(&_RollupChain.TransactOpts, _preStateTransition, _invalidTransition)
}

// GetStateRootsAndStorageSlots is a paid mutator transaction binding the contract method 0xbc128da9.
//
// Solidity: function getStateRootsAndStorageSlots(bytes _preStateTransition, bytes _invalidTransition) returns(bool, bytes32, bytes32, uint256[])
func (_RollupChain *RollupChainTransactorSession) GetStateRootsAndStorageSlots(_preStateTransition []byte, _invalidTransition []byte) (*types.Transaction, error) {
	return _RollupChain.Contract.GetStateRootsAndStorageSlots(&_RollupChain.TransactOpts, _preStateTransition, _invalidTransition)
}

// ProveTransitionInvalid is a paid mutator transaction binding the contract method 0xb78167e5.
//
// Solidity: function proveTransitionInvalid(DataTypesIncludedTransition _preStateIncludedTransition, DataTypesIncludedTransition _invalidIncludedTransition, []DataTypesIncludedStorageSlot _transitionStorageSlots) returns()
func (_RollupChain *RollupChainTransactor) ProveTransitionInvalid(opts *bind.TransactOpts, _preStateIncludedTransition DataTypesIncludedTransition, _invalidIncludedTransition DataTypesIncludedTransition, _transitionStorageSlots []DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "proveTransitionInvalid", _preStateIncludedTransition, _invalidIncludedTransition, _transitionStorageSlots)
}

// ProveTransitionInvalid is a paid mutator transaction binding the contract method 0xb78167e5.
//
// Solidity: function proveTransitionInvalid(DataTypesIncludedTransition _preStateIncludedTransition, DataTypesIncludedTransition _invalidIncludedTransition, []DataTypesIncludedStorageSlot _transitionStorageSlots) returns()
func (_RollupChain *RollupChainSession) ProveTransitionInvalid(_preStateIncludedTransition DataTypesIncludedTransition, _invalidIncludedTransition DataTypesIncludedTransition, _transitionStorageSlots []DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.Contract.ProveTransitionInvalid(&_RollupChain.TransactOpts, _preStateIncludedTransition, _invalidIncludedTransition, _transitionStorageSlots)
}

// ProveTransitionInvalid is a paid mutator transaction binding the contract method 0xb78167e5.
//
// Solidity: function proveTransitionInvalid(DataTypesIncludedTransition _preStateIncludedTransition, DataTypesIncludedTransition _invalidIncludedTransition, []DataTypesIncludedStorageSlot _transitionStorageSlots) returns()
func (_RollupChain *RollupChainTransactorSession) ProveTransitionInvalid(_preStateIncludedTransition DataTypesIncludedTransition, _invalidIncludedTransition DataTypesIncludedTransition, _transitionStorageSlots []DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.Contract.ProveTransitionInvalid(&_RollupChain.TransactOpts, _preStateIncludedTransition, _invalidIncludedTransition, _transitionStorageSlots)
}

// SubmitBlock is a paid mutator transaction binding the contract method 0xd3250f3b.
//
// Solidity: function submitBlock(bytes[] _block) returns(bytes32)
func (_RollupChain *RollupChainTransactor) SubmitBlock(opts *bind.TransactOpts, _block [][]byte) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "submitBlock", _block)
}

// SubmitBlock is a paid mutator transaction binding the contract method 0xd3250f3b.
//
// Solidity: function submitBlock(bytes[] _block) returns(bytes32)
func (_RollupChain *RollupChainSession) SubmitBlock(_block [][]byte) (*types.Transaction, error) {
	return _RollupChain.Contract.SubmitBlock(&_RollupChain.TransactOpts, _block)
}

// SubmitBlock is a paid mutator transaction binding the contract method 0xd3250f3b.
//
// Solidity: function submitBlock(bytes[] _block) returns(bytes32)
func (_RollupChain *RollupChainTransactorSession) SubmitBlock(_block [][]byte) (*types.Transaction, error) {
	return _RollupChain.Contract.SubmitBlock(&_RollupChain.TransactOpts, _block)
}

// RollupChainDecodedTransitionIterator is returned from FilterDecodedTransition and is used to iterate over the raw logs and unpacked data for DecodedTransition events raised by the RollupChain contract.
type RollupChainDecodedTransitionIterator struct {
	Event *RollupChainDecodedTransition // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RollupChainDecodedTransitionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RollupChainDecodedTransition)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RollupChainDecodedTransition)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RollupChainDecodedTransitionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RollupChainDecodedTransitionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RollupChainDecodedTransition represents a DecodedTransition event raised by the RollupChain contract.
type RollupChainDecodedTransition struct {
	Success    bool
	ReturnData []byte
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterDecodedTransition is a free log retrieval operation binding the contract event 0x5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee3.
//
// Solidity: event DecodedTransition(bool success, bytes returnData)
func (_RollupChain *RollupChainFilterer) FilterDecodedTransition(opts *bind.FilterOpts) (*RollupChainDecodedTransitionIterator, error) {

	logs, sub, err := _RollupChain.contract.FilterLogs(opts, "DecodedTransition")
	if err != nil {
		return nil, err
	}
	return &RollupChainDecodedTransitionIterator{contract: _RollupChain.contract, event: "DecodedTransition", logs: logs, sub: sub}, nil
}

// WatchDecodedTransition is a free log subscription operation binding the contract event 0x5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee3.
//
// Solidity: event DecodedTransition(bool success, bytes returnData)
func (_RollupChain *RollupChainFilterer) WatchDecodedTransition(opts *bind.WatchOpts, sink chan<- *RollupChainDecodedTransition) (event.Subscription, error) {

	logs, sub, err := _RollupChain.contract.WatchLogs(opts, "DecodedTransition")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RollupChainDecodedTransition)
				if err := _RollupChain.contract.UnpackLog(event, "DecodedTransition", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDecodedTransition is a log parse operation binding the contract event 0x5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee3.
//
// Solidity: event DecodedTransition(bool success, bytes returnData)
func (_RollupChain *RollupChainFilterer) ParseDecodedTransition(log types.Log) (*RollupChainDecodedTransition, error) {
	event := new(RollupChainDecodedTransition)
	if err := _RollupChain.contract.UnpackLog(event, "DecodedTransition", log); err != nil {
		return nil, err
	}
	return event, nil
}

// RollupChainNewRollupBlockIterator is returned from FilterNewRollupBlock and is used to iterate over the raw logs and unpacked data for NewRollupBlock events raised by the RollupChain contract.
type RollupChainNewRollupBlockIterator struct {
	Event *RollupChainNewRollupBlock // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RollupChainNewRollupBlockIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RollupChainNewRollupBlock)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RollupChainNewRollupBlock)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RollupChainNewRollupBlockIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RollupChainNewRollupBlockIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RollupChainNewRollupBlock represents a NewRollupBlock event raised by the RollupChain contract.
type RollupChainNewRollupBlock struct {
	Block       [][]byte
	BlockNumber *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterNewRollupBlock is a free log retrieval operation binding the contract event 0xe6a728cf739c94a7ce1eae684da3d74934e160650f47aa6dd39f70dfe005aadf.
//
// Solidity: event NewRollupBlock(bytes[] block, uint256 blockNumber)
func (_RollupChain *RollupChainFilterer) FilterNewRollupBlock(opts *bind.FilterOpts) (*RollupChainNewRollupBlockIterator, error) {

	logs, sub, err := _RollupChain.contract.FilterLogs(opts, "NewRollupBlock")
	if err != nil {
		return nil, err
	}
	return &RollupChainNewRollupBlockIterator{contract: _RollupChain.contract, event: "NewRollupBlock", logs: logs, sub: sub}, nil
}

// WatchNewRollupBlock is a free log subscription operation binding the contract event 0xe6a728cf739c94a7ce1eae684da3d74934e160650f47aa6dd39f70dfe005aadf.
//
// Solidity: event NewRollupBlock(bytes[] block, uint256 blockNumber)
func (_RollupChain *RollupChainFilterer) WatchNewRollupBlock(opts *bind.WatchOpts, sink chan<- *RollupChainNewRollupBlock) (event.Subscription, error) {

	logs, sub, err := _RollupChain.contract.WatchLogs(opts, "NewRollupBlock")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RollupChainNewRollupBlock)
				if err := _RollupChain.contract.UnpackLog(event, "NewRollupBlock", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseNewRollupBlock is a log parse operation binding the contract event 0xe6a728cf739c94a7ce1eae684da3d74934e160650f47aa6dd39f70dfe005aadf.
//
// Solidity: event NewRollupBlock(bytes[] block, uint256 blockNumber)
func (_RollupChain *RollupChainFilterer) ParseNewRollupBlock(log types.Log) (*RollupChainNewRollupBlock, error) {
	event := new(RollupChainNewRollupBlock)
	if err := _RollupChain.contract.UnpackLog(event, "NewRollupBlock", log); err != nil {
		return nil, err
	}
	return event, nil
}

// RollupChainTransitionIterator is returned from FilterTransition and is used to iterate over the raw logs and unpacked data for Transition events raised by the RollupChain contract.
type RollupChainTransitionIterator struct {
	Event *RollupChainTransition // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RollupChainTransitionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RollupChainTransition)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RollupChainTransition)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RollupChainTransitionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RollupChainTransitionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RollupChainTransition represents a Transition event raised by the RollupChain contract.
type RollupChainTransition struct {
	Data []byte
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterTransition is a free log retrieval operation binding the contract event 0x034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c111.
//
// Solidity: event Transition(bytes data)
func (_RollupChain *RollupChainFilterer) FilterTransition(opts *bind.FilterOpts) (*RollupChainTransitionIterator, error) {

	logs, sub, err := _RollupChain.contract.FilterLogs(opts, "Transition")
	if err != nil {
		return nil, err
	}
	return &RollupChainTransitionIterator{contract: _RollupChain.contract, event: "Transition", logs: logs, sub: sub}, nil
}

// WatchTransition is a free log subscription operation binding the contract event 0x034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c111.
//
// Solidity: event Transition(bytes data)
func (_RollupChain *RollupChainFilterer) WatchTransition(opts *bind.WatchOpts, sink chan<- *RollupChainTransition) (event.Subscription, error) {

	logs, sub, err := _RollupChain.contract.WatchLogs(opts, "Transition")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RollupChainTransition)
				if err := _RollupChain.contract.UnpackLog(event, "Transition", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransition is a log parse operation binding the contract event 0x034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c111.
//
// Solidity: event Transition(bytes data)
func (_RollupChain *RollupChainFilterer) ParseTransition(log types.Log) (*RollupChainTransition, error) {
	event := new(RollupChainTransition)
	if err := _RollupChain.contract.UnpackLog(event, "Transition", log); err != nil {
		return nil, err
	}
	return event, nil
}
