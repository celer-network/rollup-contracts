// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package rollup

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// DataTypesAccountInfo is an auto generated low-level Go binding around an user-defined struct.
type DataTypesAccountInfo struct {
	Account        common.Address
	Balances       []*big.Int
	TransferNonces []*big.Int
	WithdrawNonces []*big.Int
}

// DataTypesIncludedStorageSlot is an auto generated low-level Go binding around an user-defined struct.
type DataTypesIncludedStorageSlot struct {
	StorageSlot DataTypesStorageSlot
	Siblings    [][32]byte
}

// DataTypesIncludedTransition is an auto generated low-level Go binding around an user-defined struct.
type DataTypesIncludedTransition struct {
	Transition     []byte
	InclusionProof DataTypesTransitionInclusionProof
}

// DataTypesStorageSlot is an auto generated low-level Go binding around an user-defined struct.
type DataTypesStorageSlot struct {
	SlotIndex *big.Int
	Value     DataTypesAccountInfo
}

// DataTypesTransitionInclusionProof is an auto generated low-level Go binding around an user-defined struct.
type DataTypesTransitionInclusionProof struct {
	BlockNumber     *big.Int
	TransitionIndex *big.Int
	Siblings        [][32]byte
}

// RollupChainABI is the input ABI used to generate the binding from.
const RollupChainABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_transitionEvaluatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_merkleUtilsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenRegistryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_validatorRegistryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_committerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"DecodedTransition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"block\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"RollupBlockCommitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transition\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ZERO_BYTES32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blocks\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"rootHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"blockSize\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_includedTransition\",\"type\":\"tuple\"}],\"name\":\"checkTransitionInclusion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_transitions\",\"type\":\"bytes[]\"}],\"name\":\"commitBlock\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"committerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"transferNonces\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"withdrawNonces\",\"type\":\"uint256[]\"}],\"internalType\":\"structDataTypes.AccountInfo\",\"name\":\"_accountInfo\",\"type\":\"tuple\"}],\"name\":\"getAccountInfoBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_transition\",\"type\":\"bytes\"}],\"name\":\"getStateRootAndStorageSlots\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_preStateTransition\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_invalidTransition\",\"type\":\"bytes\"}],\"name\":\"getStateRootsAndStorageSlots\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_transition\",\"type\":\"bytes\"}],\"name\":\"getTransitionHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_preStateIncludedTransition\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_invalidIncludedTransition\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"transferNonces\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"withdrawNonces\",\"type\":\"uint256[]\"}],\"internalType\":\"structDataTypes.AccountInfo\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.StorageSlot\",\"name\":\"storageSlot\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.IncludedStorageSlot[]\",\"name\":\"_transitionStorageSlots\",\"type\":\"tuple[]\"}],\"name\":\"proveTransitionInvalid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_committerAddress\",\"type\":\"address\"}],\"name\":\"setCommitterAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_preStateRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_includedTransition\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"transferNonces\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"withdrawNonces\",\"type\":\"uint256[]\"}],\"internalType\":\"structDataTypes.AccountInfo\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.StorageSlot\",\"name\":\"storageSlot\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.IncludedStorageSlot\",\"name\":\"_transitionStorageSlot\",\"type\":\"tuple\"}],\"name\":\"verifyAndRecordWithdrawTransition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_transition0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"transition\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transitionIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"structDataTypes.TransitionInclusionProof\",\"name\":\"inclusionProof\",\"type\":\"tuple\"}],\"internalType\":\"structDataTypes.IncludedTransition\",\"name\":\"_transition1\",\"type\":\"tuple\"}],\"name\":\"verifySequentialTransitions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// RollupChainBin is the compiled bytecode used for deploying new contracts.
var RollupChainBin = ""

// DeployRollupChain deploys a new Ethereum contract, binding an instance of RollupChain to it.
func DeployRollupChain(auth *bind.TransactOpts, backend bind.ContractBackend, _transitionEvaluatorAddress common.Address, _merkleUtilsAddress common.Address, _tokenRegistryAddress common.Address, _validatorRegistryAddress common.Address, _committerAddress common.Address) (common.Address, *types.Transaction, *RollupChain, error) {
	parsed, err := abi.JSON(strings.NewReader(RollupChainABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(RollupChainBin), backend, _transitionEvaluatorAddress, _merkleUtilsAddress, _tokenRegistryAddress, _validatorRegistryAddress, _committerAddress)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &RollupChain{RollupChainCaller: RollupChainCaller{contract: contract}, RollupChainTransactor: RollupChainTransactor{contract: contract}, RollupChainFilterer: RollupChainFilterer{contract: contract}}, nil
}

// RollupChain is an auto generated Go binding around an Ethereum contract.
type RollupChain struct {
	RollupChainCaller     // Read-only binding to the contract
	RollupChainTransactor // Write-only binding to the contract
	RollupChainFilterer   // Log filterer for contract events
}

// RollupChainCaller is an auto generated read-only Go binding around an Ethereum contract.
type RollupChainCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupChainTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RollupChainTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupChainFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RollupChainFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupChainSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RollupChainSession struct {
	Contract     *RollupChain      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// RollupChainCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RollupChainCallerSession struct {
	Contract *RollupChainCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// RollupChainTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RollupChainTransactorSession struct {
	Contract     *RollupChainTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// RollupChainRaw is an auto generated low-level Go binding around an Ethereum contract.
type RollupChainRaw struct {
	Contract *RollupChain // Generic contract binding to access the raw methods on
}

// RollupChainCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RollupChainCallerRaw struct {
	Contract *RollupChainCaller // Generic read-only contract binding to access the raw methods on
}

// RollupChainTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RollupChainTransactorRaw struct {
	Contract *RollupChainTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRollupChain creates a new instance of RollupChain, bound to a specific deployed contract.
func NewRollupChain(address common.Address, backend bind.ContractBackend) (*RollupChain, error) {
	contract, err := bindRollupChain(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &RollupChain{RollupChainCaller: RollupChainCaller{contract: contract}, RollupChainTransactor: RollupChainTransactor{contract: contract}, RollupChainFilterer: RollupChainFilterer{contract: contract}}, nil
}

// NewRollupChainCaller creates a new read-only instance of RollupChain, bound to a specific deployed contract.
func NewRollupChainCaller(address common.Address, caller bind.ContractCaller) (*RollupChainCaller, error) {
	contract, err := bindRollupChain(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RollupChainCaller{contract: contract}, nil
}

// NewRollupChainTransactor creates a new write-only instance of RollupChain, bound to a specific deployed contract.
func NewRollupChainTransactor(address common.Address, transactor bind.ContractTransactor) (*RollupChainTransactor, error) {
	contract, err := bindRollupChain(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RollupChainTransactor{contract: contract}, nil
}

// NewRollupChainFilterer creates a new log filterer instance of RollupChain, bound to a specific deployed contract.
func NewRollupChainFilterer(address common.Address, filterer bind.ContractFilterer) (*RollupChainFilterer, error) {
	contract, err := bindRollupChain(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RollupChainFilterer{contract: contract}, nil
}

// bindRollupChain binds a generic wrapper to an already deployed contract.
func bindRollupChain(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RollupChainABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RollupChain *RollupChainRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RollupChain.Contract.RollupChainCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RollupChain *RollupChainRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RollupChain.Contract.RollupChainTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RollupChain *RollupChainRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RollupChain.Contract.RollupChainTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RollupChain *RollupChainCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RollupChain.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RollupChain *RollupChainTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RollupChain.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RollupChain *RollupChainTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RollupChain.Contract.contract.Transact(opts, method, params...)
}

// ZEROBYTES32 is a free data retrieval call binding the contract method 0x069321b0.
//
// Solidity: function ZERO_BYTES32() view returns(bytes32)
func (_RollupChain *RollupChainCaller) ZEROBYTES32(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "ZERO_BYTES32")
	return *ret0, err
}

// ZEROBYTES32 is a free data retrieval call binding the contract method 0x069321b0.
//
// Solidity: function ZERO_BYTES32() view returns(bytes32)
func (_RollupChain *RollupChainSession) ZEROBYTES32() ([32]byte, error) {
	return _RollupChain.Contract.ZEROBYTES32(&_RollupChain.CallOpts)
}

// ZEROBYTES32 is a free data retrieval call binding the contract method 0x069321b0.
//
// Solidity: function ZERO_BYTES32() view returns(bytes32)
func (_RollupChain *RollupChainCallerSession) ZEROBYTES32() ([32]byte, error) {
	return _RollupChain.Contract.ZEROBYTES32(&_RollupChain.CallOpts)
}

// Blocks is a free data retrieval call binding the contract method 0xf25b3f99.
//
// Solidity: function blocks(uint256 ) view returns(bytes32 rootHash, uint256 blockSize)
func (_RollupChain *RollupChainCaller) Blocks(opts *bind.CallOpts, arg0 *big.Int) (struct {
	RootHash  [32]byte
	BlockSize *big.Int
}, error) {
	ret := new(struct {
		RootHash  [32]byte
		BlockSize *big.Int
	})
	out := ret
	err := _RollupChain.contract.Call(opts, out, "blocks", arg0)
	return *ret, err
}

// Blocks is a free data retrieval call binding the contract method 0xf25b3f99.
//
// Solidity: function blocks(uint256 ) view returns(bytes32 rootHash, uint256 blockSize)
func (_RollupChain *RollupChainSession) Blocks(arg0 *big.Int) (struct {
	RootHash  [32]byte
	BlockSize *big.Int
}, error) {
	return _RollupChain.Contract.Blocks(&_RollupChain.CallOpts, arg0)
}

// Blocks is a free data retrieval call binding the contract method 0xf25b3f99.
//
// Solidity: function blocks(uint256 ) view returns(bytes32 rootHash, uint256 blockSize)
func (_RollupChain *RollupChainCallerSession) Blocks(arg0 *big.Int) (struct {
	RootHash  [32]byte
	BlockSize *big.Int
}, error) {
	return _RollupChain.Contract.Blocks(&_RollupChain.CallOpts, arg0)
}

// CheckTransitionInclusion is a free data retrieval call binding the contract method 0x9a14f166.
//
// Solidity: function checkTransitionInclusion(DataTypesIncludedTransition _includedTransition) view returns(bool)
func (_RollupChain *RollupChainCaller) CheckTransitionInclusion(opts *bind.CallOpts, _includedTransition DataTypesIncludedTransition) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "checkTransitionInclusion", _includedTransition)
	return *ret0, err
}

// CheckTransitionInclusion is a free data retrieval call binding the contract method 0x9a14f166.
//
// Solidity: function checkTransitionInclusion(DataTypesIncludedTransition _includedTransition) view returns(bool)
func (_RollupChain *RollupChainSession) CheckTransitionInclusion(_includedTransition DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.CheckTransitionInclusion(&_RollupChain.CallOpts, _includedTransition)
}

// CheckTransitionInclusion is a free data retrieval call binding the contract method 0x9a14f166.
//
// Solidity: function checkTransitionInclusion(DataTypesIncludedTransition _includedTransition) view returns(bool)
func (_RollupChain *RollupChainCallerSession) CheckTransitionInclusion(_includedTransition DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.CheckTransitionInclusion(&_RollupChain.CallOpts, _includedTransition)
}

// CommitterAddress is a free data retrieval call binding the contract method 0x2b19749e.
//
// Solidity: function committerAddress() view returns(address)
func (_RollupChain *RollupChainCaller) CommitterAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "committerAddress")
	return *ret0, err
}

// CommitterAddress is a free data retrieval call binding the contract method 0x2b19749e.
//
// Solidity: function committerAddress() view returns(address)
func (_RollupChain *RollupChainSession) CommitterAddress() (common.Address, error) {
	return _RollupChain.Contract.CommitterAddress(&_RollupChain.CallOpts)
}

// CommitterAddress is a free data retrieval call binding the contract method 0x2b19749e.
//
// Solidity: function committerAddress() view returns(address)
func (_RollupChain *RollupChainCallerSession) CommitterAddress() (common.Address, error) {
	return _RollupChain.Contract.CommitterAddress(&_RollupChain.CallOpts)
}

// GetAccountInfoBytes is a free data retrieval call binding the contract method 0x3f342807.
//
// Solidity: function getAccountInfoBytes(DataTypesAccountInfo _accountInfo) pure returns(bytes)
func (_RollupChain *RollupChainCaller) GetAccountInfoBytes(opts *bind.CallOpts, _accountInfo DataTypesAccountInfo) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "getAccountInfoBytes", _accountInfo)
	return *ret0, err
}

// GetAccountInfoBytes is a free data retrieval call binding the contract method 0x3f342807.
//
// Solidity: function getAccountInfoBytes(DataTypesAccountInfo _accountInfo) pure returns(bytes)
func (_RollupChain *RollupChainSession) GetAccountInfoBytes(_accountInfo DataTypesAccountInfo) ([]byte, error) {
	return _RollupChain.Contract.GetAccountInfoBytes(&_RollupChain.CallOpts, _accountInfo)
}

// GetAccountInfoBytes is a free data retrieval call binding the contract method 0x3f342807.
//
// Solidity: function getAccountInfoBytes(DataTypesAccountInfo _accountInfo) pure returns(bytes)
func (_RollupChain *RollupChainCallerSession) GetAccountInfoBytes(_accountInfo DataTypesAccountInfo) ([]byte, error) {
	return _RollupChain.Contract.GetAccountInfoBytes(&_RollupChain.CallOpts, _accountInfo)
}

// GetCurrentBlockNumber is a free data retrieval call binding the contract method 0x6fd902e1.
//
// Solidity: function getCurrentBlockNumber() view returns(uint256)
func (_RollupChain *RollupChainCaller) GetCurrentBlockNumber(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "getCurrentBlockNumber")
	return *ret0, err
}

// GetCurrentBlockNumber is a free data retrieval call binding the contract method 0x6fd902e1.
//
// Solidity: function getCurrentBlockNumber() view returns(uint256)
func (_RollupChain *RollupChainSession) GetCurrentBlockNumber() (*big.Int, error) {
	return _RollupChain.Contract.GetCurrentBlockNumber(&_RollupChain.CallOpts)
}

// GetCurrentBlockNumber is a free data retrieval call binding the contract method 0x6fd902e1.
//
// Solidity: function getCurrentBlockNumber() view returns(uint256)
func (_RollupChain *RollupChainCallerSession) GetCurrentBlockNumber() (*big.Int, error) {
	return _RollupChain.Contract.GetCurrentBlockNumber(&_RollupChain.CallOpts)
}

// GetTransitionHash is a free data retrieval call binding the contract method 0xd866ba6f.
//
// Solidity: function getTransitionHash(bytes _transition) pure returns(bytes32)
func (_RollupChain *RollupChainCaller) GetTransitionHash(opts *bind.CallOpts, _transition []byte) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "getTransitionHash", _transition)
	return *ret0, err
}

// GetTransitionHash is a free data retrieval call binding the contract method 0xd866ba6f.
//
// Solidity: function getTransitionHash(bytes _transition) pure returns(bytes32)
func (_RollupChain *RollupChainSession) GetTransitionHash(_transition []byte) ([32]byte, error) {
	return _RollupChain.Contract.GetTransitionHash(&_RollupChain.CallOpts, _transition)
}

// GetTransitionHash is a free data retrieval call binding the contract method 0xd866ba6f.
//
// Solidity: function getTransitionHash(bytes _transition) pure returns(bytes32)
func (_RollupChain *RollupChainCallerSession) GetTransitionHash(_transition []byte) ([32]byte, error) {
	return _RollupChain.Contract.GetTransitionHash(&_RollupChain.CallOpts, _transition)
}

// VerifySequentialTransitions is a free data retrieval call binding the contract method 0xceb7aeb0.
//
// Solidity: function verifySequentialTransitions(DataTypesIncludedTransition _transition0, DataTypesIncludedTransition _transition1) view returns(bool)
func (_RollupChain *RollupChainCaller) VerifySequentialTransitions(opts *bind.CallOpts, _transition0 DataTypesIncludedTransition, _transition1 DataTypesIncludedTransition) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _RollupChain.contract.Call(opts, out, "verifySequentialTransitions", _transition0, _transition1)
	return *ret0, err
}

// VerifySequentialTransitions is a free data retrieval call binding the contract method 0xceb7aeb0.
//
// Solidity: function verifySequentialTransitions(DataTypesIncludedTransition _transition0, DataTypesIncludedTransition _transition1) view returns(bool)
func (_RollupChain *RollupChainSession) VerifySequentialTransitions(_transition0 DataTypesIncludedTransition, _transition1 DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.VerifySequentialTransitions(&_RollupChain.CallOpts, _transition0, _transition1)
}

// VerifySequentialTransitions is a free data retrieval call binding the contract method 0xceb7aeb0.
//
// Solidity: function verifySequentialTransitions(DataTypesIncludedTransition _transition0, DataTypesIncludedTransition _transition1) view returns(bool)
func (_RollupChain *RollupChainCallerSession) VerifySequentialTransitions(_transition0 DataTypesIncludedTransition, _transition1 DataTypesIncludedTransition) (bool, error) {
	return _RollupChain.Contract.VerifySequentialTransitions(&_RollupChain.CallOpts, _transition0, _transition1)
}

// CommitBlock is a paid mutator transaction binding the contract method 0xa97ba877.
//
// Solidity: function commitBlock(bytes[] _transitions) returns(bytes32)
func (_RollupChain *RollupChainTransactor) CommitBlock(opts *bind.TransactOpts, _transitions [][]byte) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "commitBlock", _transitions)
}

// CommitBlock is a paid mutator transaction binding the contract method 0xa97ba877.
//
// Solidity: function commitBlock(bytes[] _transitions) returns(bytes32)
func (_RollupChain *RollupChainSession) CommitBlock(_transitions [][]byte) (*types.Transaction, error) {
	return _RollupChain.Contract.CommitBlock(&_RollupChain.TransactOpts, _transitions)
}

// CommitBlock is a paid mutator transaction binding the contract method 0xa97ba877.
//
// Solidity: function commitBlock(bytes[] _transitions) returns(bytes32)
func (_RollupChain *RollupChainTransactorSession) CommitBlock(_transitions [][]byte) (*types.Transaction, error) {
	return _RollupChain.Contract.CommitBlock(&_RollupChain.TransactOpts, _transitions)
}

// GetStateRootAndStorageSlots is a paid mutator transaction binding the contract method 0x731fba78.
//
// Solidity: function getStateRootAndStorageSlots(bytes _transition) returns(bool, bytes32, uint256[])
func (_RollupChain *RollupChainTransactor) GetStateRootAndStorageSlots(opts *bind.TransactOpts, _transition []byte) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "getStateRootAndStorageSlots", _transition)
}

// GetStateRootAndStorageSlots is a paid mutator transaction binding the contract method 0x731fba78.
//
// Solidity: function getStateRootAndStorageSlots(bytes _transition) returns(bool, bytes32, uint256[])
func (_RollupChain *RollupChainSession) GetStateRootAndStorageSlots(_transition []byte) (*types.Transaction, error) {
	return _RollupChain.Contract.GetStateRootAndStorageSlots(&_RollupChain.TransactOpts, _transition)
}

// GetStateRootAndStorageSlots is a paid mutator transaction binding the contract method 0x731fba78.
//
// Solidity: function getStateRootAndStorageSlots(bytes _transition) returns(bool, bytes32, uint256[])
func (_RollupChain *RollupChainTransactorSession) GetStateRootAndStorageSlots(_transition []byte) (*types.Transaction, error) {
	return _RollupChain.Contract.GetStateRootAndStorageSlots(&_RollupChain.TransactOpts, _transition)
}

// GetStateRootsAndStorageSlots is a paid mutator transaction binding the contract method 0xbc128da9.
//
// Solidity: function getStateRootsAndStorageSlots(bytes _preStateTransition, bytes _invalidTransition) returns(bool, bytes32, bytes32, uint256[])
func (_RollupChain *RollupChainTransactor) GetStateRootsAndStorageSlots(opts *bind.TransactOpts, _preStateTransition []byte, _invalidTransition []byte) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "getStateRootsAndStorageSlots", _preStateTransition, _invalidTransition)
}

// GetStateRootsAndStorageSlots is a paid mutator transaction binding the contract method 0xbc128da9.
//
// Solidity: function getStateRootsAndStorageSlots(bytes _preStateTransition, bytes _invalidTransition) returns(bool, bytes32, bytes32, uint256[])
func (_RollupChain *RollupChainSession) GetStateRootsAndStorageSlots(_preStateTransition []byte, _invalidTransition []byte) (*types.Transaction, error) {
	return _RollupChain.Contract.GetStateRootsAndStorageSlots(&_RollupChain.TransactOpts, _preStateTransition, _invalidTransition)
}

// GetStateRootsAndStorageSlots is a paid mutator transaction binding the contract method 0xbc128da9.
//
// Solidity: function getStateRootsAndStorageSlots(bytes _preStateTransition, bytes _invalidTransition) returns(bool, bytes32, bytes32, uint256[])
func (_RollupChain *RollupChainTransactorSession) GetStateRootsAndStorageSlots(_preStateTransition []byte, _invalidTransition []byte) (*types.Transaction, error) {
	return _RollupChain.Contract.GetStateRootsAndStorageSlots(&_RollupChain.TransactOpts, _preStateTransition, _invalidTransition)
}

// ProveTransitionInvalid is a paid mutator transaction binding the contract method 0xad41175a.
//
// Solidity: function proveTransitionInvalid(DataTypesIncludedTransition _preStateIncludedTransition, DataTypesIncludedTransition _invalidIncludedTransition, []DataTypesIncludedStorageSlot _transitionStorageSlots) returns()
func (_RollupChain *RollupChainTransactor) ProveTransitionInvalid(opts *bind.TransactOpts, _preStateIncludedTransition DataTypesIncludedTransition, _invalidIncludedTransition DataTypesIncludedTransition, _transitionStorageSlots []DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "proveTransitionInvalid", _preStateIncludedTransition, _invalidIncludedTransition, _transitionStorageSlots)
}

// ProveTransitionInvalid is a paid mutator transaction binding the contract method 0xad41175a.
//
// Solidity: function proveTransitionInvalid(DataTypesIncludedTransition _preStateIncludedTransition, DataTypesIncludedTransition _invalidIncludedTransition, []DataTypesIncludedStorageSlot _transitionStorageSlots) returns()
func (_RollupChain *RollupChainSession) ProveTransitionInvalid(_preStateIncludedTransition DataTypesIncludedTransition, _invalidIncludedTransition DataTypesIncludedTransition, _transitionStorageSlots []DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.Contract.ProveTransitionInvalid(&_RollupChain.TransactOpts, _preStateIncludedTransition, _invalidIncludedTransition, _transitionStorageSlots)
}

// ProveTransitionInvalid is a paid mutator transaction binding the contract method 0xad41175a.
//
// Solidity: function proveTransitionInvalid(DataTypesIncludedTransition _preStateIncludedTransition, DataTypesIncludedTransition _invalidIncludedTransition, []DataTypesIncludedStorageSlot _transitionStorageSlots) returns()
func (_RollupChain *RollupChainTransactorSession) ProveTransitionInvalid(_preStateIncludedTransition DataTypesIncludedTransition, _invalidIncludedTransition DataTypesIncludedTransition, _transitionStorageSlots []DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.Contract.ProveTransitionInvalid(&_RollupChain.TransactOpts, _preStateIncludedTransition, _invalidIncludedTransition, _transitionStorageSlots)
}

// SetCommitterAddress is a paid mutator transaction binding the contract method 0x13df8728.
//
// Solidity: function setCommitterAddress(address _committerAddress) returns()
func (_RollupChain *RollupChainTransactor) SetCommitterAddress(opts *bind.TransactOpts, _committerAddress common.Address) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "setCommitterAddress", _committerAddress)
}

// SetCommitterAddress is a paid mutator transaction binding the contract method 0x13df8728.
//
// Solidity: function setCommitterAddress(address _committerAddress) returns()
func (_RollupChain *RollupChainSession) SetCommitterAddress(_committerAddress common.Address) (*types.Transaction, error) {
	return _RollupChain.Contract.SetCommitterAddress(&_RollupChain.TransactOpts, _committerAddress)
}

// SetCommitterAddress is a paid mutator transaction binding the contract method 0x13df8728.
//
// Solidity: function setCommitterAddress(address _committerAddress) returns()
func (_RollupChain *RollupChainTransactorSession) SetCommitterAddress(_committerAddress common.Address) (*types.Transaction, error) {
	return _RollupChain.Contract.SetCommitterAddress(&_RollupChain.TransactOpts, _committerAddress)
}

// VerifyAndRecordWithdrawTransition is a paid mutator transaction binding the contract method 0x8d12aeff.
//
// Solidity: function verifyAndRecordWithdrawTransition(address _account, bytes32 _preStateRoot, DataTypesIncludedTransition _includedTransition, DataTypesIncludedStorageSlot _transitionStorageSlot) returns()
func (_RollupChain *RollupChainTransactor) VerifyAndRecordWithdrawTransition(opts *bind.TransactOpts, _account common.Address, _preStateRoot [32]byte, _includedTransition DataTypesIncludedTransition, _transitionStorageSlot DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.contract.Transact(opts, "verifyAndRecordWithdrawTransition", _account, _preStateRoot, _includedTransition, _transitionStorageSlot)
}

// VerifyAndRecordWithdrawTransition is a paid mutator transaction binding the contract method 0x8d12aeff.
//
// Solidity: function verifyAndRecordWithdrawTransition(address _account, bytes32 _preStateRoot, DataTypesIncludedTransition _includedTransition, DataTypesIncludedStorageSlot _transitionStorageSlot) returns()
func (_RollupChain *RollupChainSession) VerifyAndRecordWithdrawTransition(_account common.Address, _preStateRoot [32]byte, _includedTransition DataTypesIncludedTransition, _transitionStorageSlot DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.Contract.VerifyAndRecordWithdrawTransition(&_RollupChain.TransactOpts, _account, _preStateRoot, _includedTransition, _transitionStorageSlot)
}

// VerifyAndRecordWithdrawTransition is a paid mutator transaction binding the contract method 0x8d12aeff.
//
// Solidity: function verifyAndRecordWithdrawTransition(address _account, bytes32 _preStateRoot, DataTypesIncludedTransition _includedTransition, DataTypesIncludedStorageSlot _transitionStorageSlot) returns()
func (_RollupChain *RollupChainTransactorSession) VerifyAndRecordWithdrawTransition(_account common.Address, _preStateRoot [32]byte, _includedTransition DataTypesIncludedTransition, _transitionStorageSlot DataTypesIncludedStorageSlot) (*types.Transaction, error) {
	return _RollupChain.Contract.VerifyAndRecordWithdrawTransition(&_RollupChain.TransactOpts, _account, _preStateRoot, _includedTransition, _transitionStorageSlot)
}

// RollupChainDecodedTransitionIterator is returned from FilterDecodedTransition and is used to iterate over the raw logs and unpacked data for DecodedTransition events raised by the RollupChain contract.
type RollupChainDecodedTransitionIterator struct {
	Event *RollupChainDecodedTransition // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RollupChainDecodedTransitionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RollupChainDecodedTransition)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RollupChainDecodedTransition)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RollupChainDecodedTransitionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RollupChainDecodedTransitionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RollupChainDecodedTransition represents a DecodedTransition event raised by the RollupChain contract.
type RollupChainDecodedTransition struct {
	Success    bool
	ReturnData []byte
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterDecodedTransition is a free log retrieval operation binding the contract event 0x5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee3.
//
// Solidity: event DecodedTransition(bool success, bytes returnData)
func (_RollupChain *RollupChainFilterer) FilterDecodedTransition(opts *bind.FilterOpts) (*RollupChainDecodedTransitionIterator, error) {

	logs, sub, err := _RollupChain.contract.FilterLogs(opts, "DecodedTransition")
	if err != nil {
		return nil, err
	}
	return &RollupChainDecodedTransitionIterator{contract: _RollupChain.contract, event: "DecodedTransition", logs: logs, sub: sub}, nil
}

// WatchDecodedTransition is a free log subscription operation binding the contract event 0x5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee3.
//
// Solidity: event DecodedTransition(bool success, bytes returnData)
func (_RollupChain *RollupChainFilterer) WatchDecodedTransition(opts *bind.WatchOpts, sink chan<- *RollupChainDecodedTransition) (event.Subscription, error) {

	logs, sub, err := _RollupChain.contract.WatchLogs(opts, "DecodedTransition")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RollupChainDecodedTransition)
				if err := _RollupChain.contract.UnpackLog(event, "DecodedTransition", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDecodedTransition is a log parse operation binding the contract event 0x5fd450ece0a49d6fc2b885a337c2ad8a37c3fbf9b4fc5b6afb8b0f94a5d2cee3.
//
// Solidity: event DecodedTransition(bool success, bytes returnData)
func (_RollupChain *RollupChainFilterer) ParseDecodedTransition(log types.Log) (*RollupChainDecodedTransition, error) {
	event := new(RollupChainDecodedTransition)
	if err := _RollupChain.contract.UnpackLog(event, "DecodedTransition", log); err != nil {
		return nil, err
	}
	return event, nil
}

// RollupChainRollupBlockCommittedIterator is returned from FilterRollupBlockCommitted and is used to iterate over the raw logs and unpacked data for RollupBlockCommitted events raised by the RollupChain contract.
type RollupChainRollupBlockCommittedIterator struct {
	Event *RollupChainRollupBlockCommitted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RollupChainRollupBlockCommittedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RollupChainRollupBlockCommitted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RollupChainRollupBlockCommitted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RollupChainRollupBlockCommittedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RollupChainRollupBlockCommittedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RollupChainRollupBlockCommitted represents a RollupBlockCommitted event raised by the RollupChain contract.
type RollupChainRollupBlockCommitted struct {
	Block       [][]byte
	BlockNumber *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterRollupBlockCommitted is a free log retrieval operation binding the contract event 0x9b6da1f5ca233462d21c75839478396c606287d2d52c299b966775b61df62c96.
//
// Solidity: event RollupBlockCommitted(bytes[] block, uint256 blockNumber)
func (_RollupChain *RollupChainFilterer) FilterRollupBlockCommitted(opts *bind.FilterOpts) (*RollupChainRollupBlockCommittedIterator, error) {

	logs, sub, err := _RollupChain.contract.FilterLogs(opts, "RollupBlockCommitted")
	if err != nil {
		return nil, err
	}
	return &RollupChainRollupBlockCommittedIterator{contract: _RollupChain.contract, event: "RollupBlockCommitted", logs: logs, sub: sub}, nil
}

// WatchRollupBlockCommitted is a free log subscription operation binding the contract event 0x9b6da1f5ca233462d21c75839478396c606287d2d52c299b966775b61df62c96.
//
// Solidity: event RollupBlockCommitted(bytes[] block, uint256 blockNumber)
func (_RollupChain *RollupChainFilterer) WatchRollupBlockCommitted(opts *bind.WatchOpts, sink chan<- *RollupChainRollupBlockCommitted) (event.Subscription, error) {

	logs, sub, err := _RollupChain.contract.WatchLogs(opts, "RollupBlockCommitted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RollupChainRollupBlockCommitted)
				if err := _RollupChain.contract.UnpackLog(event, "RollupBlockCommitted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRollupBlockCommitted is a log parse operation binding the contract event 0x9b6da1f5ca233462d21c75839478396c606287d2d52c299b966775b61df62c96.
//
// Solidity: event RollupBlockCommitted(bytes[] block, uint256 blockNumber)
func (_RollupChain *RollupChainFilterer) ParseRollupBlockCommitted(log types.Log) (*RollupChainRollupBlockCommitted, error) {
	event := new(RollupChainRollupBlockCommitted)
	if err := _RollupChain.contract.UnpackLog(event, "RollupBlockCommitted", log); err != nil {
		return nil, err
	}
	return event, nil
}

// RollupChainTransitionIterator is returned from FilterTransition and is used to iterate over the raw logs and unpacked data for Transition events raised by the RollupChain contract.
type RollupChainTransitionIterator struct {
	Event *RollupChainTransition // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RollupChainTransitionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RollupChainTransition)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RollupChainTransition)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RollupChainTransitionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RollupChainTransitionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RollupChainTransition represents a Transition event raised by the RollupChain contract.
type RollupChainTransition struct {
	Data []byte
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterTransition is a free log retrieval operation binding the contract event 0x034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c111.
//
// Solidity: event Transition(bytes data)
func (_RollupChain *RollupChainFilterer) FilterTransition(opts *bind.FilterOpts) (*RollupChainTransitionIterator, error) {

	logs, sub, err := _RollupChain.contract.FilterLogs(opts, "Transition")
	if err != nil {
		return nil, err
	}
	return &RollupChainTransitionIterator{contract: _RollupChain.contract, event: "Transition", logs: logs, sub: sub}, nil
}

// WatchTransition is a free log subscription operation binding the contract event 0x034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c111.
//
// Solidity: event Transition(bytes data)
func (_RollupChain *RollupChainFilterer) WatchTransition(opts *bind.WatchOpts, sink chan<- *RollupChainTransition) (event.Subscription, error) {

	logs, sub, err := _RollupChain.contract.WatchLogs(opts, "Transition")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RollupChainTransition)
				if err := _RollupChain.contract.UnpackLog(event, "Transition", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransition is a log parse operation binding the contract event 0x034a300becb670ff9f6b390e64766c9455581e22e5785b0f59806e2fad57c111.
//
// Solidity: event Transition(bytes data)
func (_RollupChain *RollupChainFilterer) ParseTransition(log types.Log) (*RollupChainTransition, error) {
	event := new(RollupChainTransition)
	if err := _RollupChain.contract.UnpackLog(event, "Transition", log); err != nil {
		return nil, err
	}
	return event, nil
}
